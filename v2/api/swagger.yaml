---
swagger: "2.0"
info:
  description: " JumpCloud's V2 API. This set of endpoints allows JumpCloud customers\
    \ to manage objects, groupings and mappings and interact with the JumpCloud Graph."
  version: "2.0"
  title: "JumpCloud APIs"
host: "console.jumpcloud.com"
basePath: "/api/v2"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /activedirectories:
    get:
      tags:
      - "Active Directory"
      summary: "List Active Directories"
      description: "This endpoint allows you to list all your Active Directory Instances.\n\
        \n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/activedirectories/\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "activedirectories_list"
      parameters:
      - name: "fields"
        in: "query"
        description: "The comma separated fields included in the returned records.\n\
          If omitted, the default list of fields will be returned.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/active-directory-output"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "activedirectories_list"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    post:
      tags:
      - "Active Directory"
      summary: "Create a new Active Directory"
      description: "This endpoint allows you to create a new Active Directory.\n\n\
        \n#### Sample Request\n```\ncurl -X POST https://console.jumpcloud.com/api/v2/activedirectories/\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n        \"domain\": \"{DC=AD_domain_name;DC=com}\"\
        \n}\n'\n```"
      operationId: "activedirectories_post"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/active-directory-input"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        201:
          description: ""
          schema:
            $ref: "#/definitions/active-directory-output"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "activedirectories_post"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
  /activedirectories/{activedirectory_id}/agents:
    get:
      tags:
      - "Active Directory"
      summary: "List Active Directory Agents"
      description: "This endpoint allows you to list all your Active Directory Agents\
        \ for a given Instance.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/agents\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "activedirectories_agentsList"
      parameters:
      - name: "activedirectory_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ActivedirectoryId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/active-directory-agent-list-output"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "activedirectories_agentsList"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
    post:
      tags:
      - "Active Directory"
      summary: "Create a new Active Directory Agent"
      description: "This endpoint allows you to create a new Active Directory Agent.\n\
        \n\n#### Sample Request\n```\ncurl -X POST https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/agents\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{}'\n```"
      operationId: "activedirectories_agentsPost"
      parameters:
      - name: "activedirectory_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ActivedirectoryId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/active-directory-agent-input"
        x-exportParamName: "Body"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      responses:
        201:
          description: ""
          schema:
            $ref: "#/definitions/active-directory-agent-get-output"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "activedirectories_agentsPost"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
  /activedirectories/{activedirectory_id}/agents/{agent_id}:
    get:
      tags:
      - "Active Directory"
      summary: "Get Active Directory Agent"
      description: "This endpoint returns a specific active directory agent.\n\n####\
        \ Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/agents/{agent_id}\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "activedirectories_agentsGet"
      parameters:
      - name: "activedirectory_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ActivedirectoryId"
      - name: "agent_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AgentId"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/active-directory-agent-list-output"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "activedirectories_agentsGet"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
    delete:
      tags:
      - "Active Directory"
      summary: "Delete Active Directory Agent"
      operationId: "activedirectories_agentsDelete"
      parameters:
      - name: "activedirectory_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ActivedirectoryId"
      - name: "agent_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AgentId"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      responses:
        204:
          description: ""
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "activedirectories_agentsDelete"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
  /activedirectories/{activedirectory_id}/associations:
    get:
      tags:
      - "Graph"
      - "Active Directory"
      summary: "List the associations of an Active Directory instance"
      description: "This endpoint returns the direct associations of this Active Directory\
        \ instance.\n\nA direct association can be a non-homogeneous relationship\
        \ between 2 different objects, for example Active Directory and Users.\n\n\
        \n#### Sample Request\n```\ncurl -X GET 'https://console.jumpcloud.com/api/v2/activedirectories/{ActiveDirectory_ID}/associations?targets=user\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_activeDirectoryAssociationsList"
      parameters:
      - name: "activedirectory_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ActivedirectoryId"
      - name: "targets"
        in: "query"
        description: ""
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "active_directory"
          - "application"
          - "command"
          - "g_suite"
          - "ldap_server"
          - "office_365"
          - "policy"
          - "radius_server"
          - "system"
          - "system_group"
          - "user"
          - "user_group"
        x-exportParamName: "Targets"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphConnection"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_activeDirectoryAssociationsList"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    post:
      tags:
      - "Graph"
      - "Active Directory"
      summary: "Manage the associations of an Active Directory instance"
      description: "This endpoint allows you to manage the _direct_ associations of\
        \ an Active Directory instance.\n\nA direct association can be a non-homogeneous\
        \ relationship between 2 different objects, for example Active Directory and\
        \ Users.\n\n#### Sample Request\n```\ncurl -X POST https://console.jumpcloud.com/api/v2/activedirectories/{AD_Instance_ID}/associations\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n        \"op\": \"add\",\n\
        \        \"type\": \"user\",\n        \"id\": \"{User_ID}\"\n}\n'\n```"
      operationId: "graph_activeDirectoryAssociationsPost"
      parameters:
      - name: "activedirectory_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ActivedirectoryId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/GraphManagementReq"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        204:
          description: ""
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_activeDirectoryAssociationsPost"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
  /activedirectories/{activedirectory_id}/usergroups:
    get:
      tags:
      - "Graph"
      - "Active Directory"
      summary: "List the User Groups bound to an Active Directory instance"
      description: "This endpoint will return all Users Groups bound to an Active\
        \ Directory instance, either directly or indirectly, essentially traversing\
        \ the JumpCloud Graph for your Organization.\n\nEach element will contain\
        \ the group's type, id, attributes and paths.\n\nThe `attributes` object is\
        \ a key/value hash of compiled graph attributes for all paths followed.\n\n\
        The `paths` array enumerates each path from this Active Directory instance\
        \ to the corresponding User Group; this array represents all grouping and/or\
        \ associations that would have to be removed to deprovision the User Group\
        \ from this Active Directory instance.\n\nSee `/members` and `/associations`\
        \ endpoints to manage those collections.\n\n#### Sample Request\n```\ncurl\
        \ -X GET https://console.jumpcloud.com/api/v2/activedirectories/{ActiveDirectory_ID}/usergroups\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_activeDirectoryTraverseUserGroup"
      parameters:
      - name: "activedirectory_id"
        in: "path"
        description: "ObjectID of the Active Directory instance."
        required: true
        type: "string"
        x-exportParamName: "ActivedirectoryId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_activeDirectoryTraverseUserGroup"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /activedirectories/{id}:
    get:
      tags:
      - "Active Directory"
      summary: "Get an Active Directory"
      description: "This endpoint returns a specific Active Directory.\n\n#### Sample\
        \ Request\n\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/activedirectories/{ActiveDirectory_ID}\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "activedirectories_get"
      parameters:
      - name: "id"
        in: "path"
        description: "ObjectID of this Active Directory instance."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/active-directory-output"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "activedirectories_get"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    delete:
      tags:
      - "Active Directory"
      summary: "Delete an Active Directory"
      description: "This endpoint allows you to delete an Active Directory Instance.\n\
        \n#### Sample Request\n```\ncurl -X DELETE https://console.jumpcloud.com/api/v2/activedirectories/{ActiveDirectory_ID}\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY'\n  ```"
      operationId: "activedirectories_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "ObjectID of this Active Directory instance."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        204:
          description: ""
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "activedirectories_delete"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
  /applications/{application_id}/associations:
    get:
      tags:
      - "Graph"
      - "Applications"
      summary: "List the associations of an Application"
      description: "This endpoint will return the _direct_ associations of an Application.\
        \ A direct association can be a non-homogeneous relationship between 2 different\
        \ objects, for example Applications and User Groups.\n\n\n#### Sample Request\n\
        ```\ncurl -X GET 'https://console.jumpcloud.com/api/v2/applications/{Application_ID}/associations?targets=user_group\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_applicationAssociationsList"
      parameters:
      - name: "application_id"
        in: "path"
        description: "ObjectID of the Application."
        required: true
        type: "string"
        x-exportParamName: "ApplicationId"
      - name: "targets"
        in: "query"
        description: ""
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "active_directory"
          - "application"
          - "command"
          - "g_suite"
          - "ldap_server"
          - "office_365"
          - "policy"
          - "radius_server"
          - "system"
          - "system_group"
          - "user"
          - "user_group"
        x-exportParamName: "Targets"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphConnection"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_applicationAssociationsList"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    post:
      tags:
      - "Graph"
      - "Applications"
      summary: "Manage the associations of an Application"
      description: "This endpoint allows you to manage the _direct_ associations of\
        \ an Application. A direct association can be a non-homogeneous relationship\
        \ between 2 different objects, for example Application and User Groups.\n\n\
        #### Sample Request\n```\ncurl -X POST 'https://console.jumpcloud.com/api/v2/applications/{Application_ID}/associations'\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n    \"op\": \"add\",\n    \"\
        type\": \"user_group\",\n    \"id\": \"{Group_ID}\"\n}'\n```"
      operationId: "graph_applicationAssociationsPost"
      parameters:
      - name: "application_id"
        in: "path"
        description: "ObjectID of the Application."
        required: true
        type: "string"
        x-exportParamName: "ApplicationId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/GraphManagementReq"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        204:
          description: "OK"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: "null"
        beforeScript: "function (ctx, request) {\n  // Your javascript code here.\n\
          }"
        id: "graph_applicationAssociationsPost"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    x-swagger-jumpcloud-auto-insert: true
  /applications/{application_id}/usergroups:
    get:
      tags:
      - "Graph"
      - "Applications"
      summary: "List the User Groups bound to an Application"
      description: "This endpoint will return all Users Groups bound to an Application,\
        \ either directly or indirectly, essentially traversing the JumpCloud Graph\
        \ for your Organization.\n\nEach element will contain the group's type, id,\
        \ attributes and paths.\n\nThe `attributes` object is a key/value hash of\
        \ compiled graph attributes for all paths followed.\n\nThe `paths` array enumerates\
        \  each path from this Application to the corresponding User Group; this array\
        \ represents all grouping and/or associations that would have to be removed\
        \ to deprovision the User Group from this Application.\n\nSee `/members` and\
        \ `/associations` endpoints to manage those collections.\n\n#### Sample Request\n\
        ```\ncurl -X GET https://console.jumpcloud.com/api/v2/applications/{Application_ID}/usergroups\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_applicationTraverseUserGroup"
      parameters:
      - name: "application_id"
        in: "path"
        description: "ObjectID of the Application."
        required: true
        type: "string"
        x-exportParamName: "ApplicationId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_applicationTraverseUserGroup"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /applications/{application_id}/users:
    get:
      tags:
      - "Graph"
      - "Applications"
      summary: "List the Users bound to an Application"
      description: "This endpoint will return all Users bound to an Application, either\
        \ directly or indirectly, essentially traversing the JumpCloud Graph for your\
        \ Organization.\n\nEach element will contain the type, id, attributes and\
        \ paths.\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this Application to the corresponding User; this array represents\
        \ all grouping and/or associations that would have to be removed to deprovision\
        \ the User from this Application.\n\nSee `/members` and `/associations` endpoints\
        \ to manage those collections.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/applications/{Application_ID}/users\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_applicationTraverseUser"
      parameters:
      - name: "application_id"
        in: "path"
        description: "ObjectID of the Application."
        required: true
        type: "string"
        x-exportParamName: "ApplicationId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_applicationTraverseUser"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /bulk/users:
    post:
      tags:
      - "Bulk Job Requests"
      summary: "Bulk Users Create"
      description: "The endpoint allows you to create a bulk job to asynchronously\
        \ create users. See [Create a System User](https://docs.jumpcloud.com/1.0/systemusers/create-a-system-user)\
        \ for full list of attributes.\n\n#### Sample Request \n```\ncurl -X POST\
        \ https://console.jumpcloud.com/api/v2/bulk/users \\\n  -H 'Accept: application/json'\
        \ \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\
        \ \\\n  -d '[\n\t{\n\t\t\"email\":\"{email}\",\n\t\t\"firstname\":\"{firstname}\"\
        ,\n\t\t\"lastname\":\"{firstname}\",\n\t\t\"username\":\"{username}\",\n\t\
        \t\"attributes\":[\n\t\t\t{\"name\":\"EmployeeID\",\"value\":\"0000\"},\n\t\
        \t\t{\"name\":\"Custom\",\"value\":\"attribute\"}\n\t\t]\n\t}\n]\n```"
      operationId: "bulk_usersCreate"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "array"
          items:
            $ref: "#/definitions/bulk-user-create"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        201:
          description: ""
          schema:
            $ref: "#/definitions/job-id"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "bulk_usersCreate"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    patch:
      tags:
      - "Bulk Job Requests"
      summary: "Bulk Users Update"
      description: "The endpoint allows you to create a bulk job to asynchronously\
        \ update users. See [Update a System User](https://docs.jumpcloud.com/1.0/systemusers/update-a-system-user)\
        \ for full list of attributes.\n\n#### Sample Request \n```\ncurl -X PATCH\
        \ https://console.jumpcloud.com/api/v2/bulk/users \\\n  -H 'Accept: application/json'\
        \ \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\
        \ \\\n  -d '[\n\t{\n\t  \"id\":\"5be9fb4ddb01290001e85109\",\n\t\t\"firstname\"\
        :\"{UPDATED_FIRSTNAME}\",\n\t\t\"department\":\"{UPDATED_DEPARTMENT}\",\n\t\
        \t\"attributes\":[\n\t\t\t{\"name\":\"Custom\",\"value\":\"{ATTRIBUTE_VALUE}\"\
        }\n\t\t]\n\t},\n\t{\n\t  \"id\":\"5be9fb4ddb01290001e85109\",\n\t\t\"firstname\"\
        :\"{UPDATED_FIRSTNAME}\",\n\t\t\"costCenter\":\"{UPDATED_COST_CENTER}\",\n\
        \t\t\"phoneNumbers\":[\n\t\t\t{\"type\":\"home\",\"number\":\"{HOME_PHONE_NUMBER}\"\
        },\n\t\t\t{\"type\":\"work\",\"number\":\"{WORK_PHONE_NUMBER}\"}\n\t\t]\n\t\
        }\n]\n```"
      operationId: "bulk_usersUpdate"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "array"
          items:
            $ref: "#/definitions/bulk-user-update"
        x-exportParamName: "Body"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      responses:
        201:
          description: ""
          schema:
            $ref: "#/definitions/job-id"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "bulk_usersUpdate"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /bulk/users/{job_id}/results:
    get:
      tags:
      - "Bulk Job Requests"
      summary: "List Bulk Users Results"
      description: "This endpoint will return the results of particular user import\
        \ or update job request.\n\n#### Sample Request\n```\ncurl -X GET \\\n  https://console.jumpcloud.com/api/v2/bulk/users/{ImportJobID}/results\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "bulk_usersCreateResults"
      parameters:
      - name: "job_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/job-workresult"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "bulk_usersCreateResults"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /commands/{command_id}/associations:
    get:
      tags:
      - "Graph"
      - "Commands"
      summary: "List the associations of a Command"
      description: "This endpoint will return the _direct_ associations of this Command.\n\
        \nA direct association can be a non-homogeneous relationship between 2 different\
        \ objects, for example Commands and User Groups.\n\n\n#### Sample Request\n\
        ```\ncurl -X GET https://console.jumpcloud.com/api/v2/commands/{Command_ID}/associations?targets=system_group\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_commandAssociationsList"
      parameters:
      - name: "command_id"
        in: "path"
        description: "ObjectID of the Command."
        required: true
        type: "string"
        x-exportParamName: "CommandId"
      - name: "targets"
        in: "query"
        description: ""
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "active_directory"
          - "application"
          - "command"
          - "g_suite"
          - "ldap_server"
          - "office_365"
          - "policy"
          - "radius_server"
          - "system"
          - "system_group"
          - "user"
          - "user_group"
        x-exportParamName: "Targets"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphConnection"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_commandAssociationsList"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    post:
      tags:
      - "Graph"
      - "Commands"
      summary: "Manage the associations of a Command"
      description: "This endpoint will allow you to manage the _direct_ associations\
        \ of this Command.\n\nA direct association can be a non-homogeneous relationship\
        \ between 2 different objects, for example Commands and User Groups.\n\n\n\
        #### Sample Request\n```\n curl -X POST https://console.jumpcloud.com/api/v2/commands/{Command_ID}/associations\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n    \"op\": \"add\",\n    \"\
        type\": \"system_group\",\n    \"id\": \"Group_ID\"\n}'\n```"
      operationId: "graph_commandAssociationsPost"
      parameters:
      - name: "command_id"
        in: "path"
        description: "ObjectID of the Command."
        required: true
        type: "string"
        x-exportParamName: "CommandId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/GraphManagementReq"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        204:
          description: "OK"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_commandAssociationsPost"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    x-swagger-jumpcloud-auto-insert: true
  /commands/{command_id}/systemgroups:
    get:
      tags:
      - "Graph"
      - "Commands"
      summary: "List the System Groups bound to a Command"
      description: "This endpoint will return all System Groups bound to a Command,\
        \ either directly or indirectly, essentially traversing the JumpCloud Graph\
        \ for your Organization.\n\nEach element will contain the group's type, id,\
        \ attributes and paths.\n\nThe `attributes` object is a key/value hash of\
        \ compiled graph attributes for all paths followed.\n\nThe `paths` array enumerates\
        \ each path from this Command to the corresponding System Group; this array\
        \ represents all grouping and/or associations that would have to be removed\
        \ to deprovision the System Group from this Command.\n\nSee `/members` and\
        \ `/associations` endpoints to manage those collections.\n\n#### Sample Request\n\
        ```\ncurl -X GET https://console.jumpcloud.com/api/v2/commands/{Command_ID}/systemgroups\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_commandTraverseSystemGroup"
      parameters:
      - name: "command_id"
        in: "path"
        description: "ObjectID of the Command."
        required: true
        type: "string"
        x-exportParamName: "CommandId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_commandTraverseSystemGroup"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /commands/{command_id}/systems:
    get:
      tags:
      - "Graph"
      - "Commands"
      summary: "List the Systems bound to a Command"
      description: "This endpoint will return all Systems bound to a Command, either\
        \ directly or indirectly, essentially traversing the JumpCloud Graph for your\
        \ Organization.\n\nEach element will contain the type, id, attributes and\
        \ paths.\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this Command to the corresponding System; this array represents\
        \ all grouping and/or associations that would have to be removed to deprovision\
        \ the System from this Command.\n\nSee `/members` and `/associations` endpoints\
        \ to manage those collections.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/commands/{Command_ID}/systems\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_commandTraverseSystem"
      parameters:
      - name: "command_id"
        in: "path"
        description: "ObjectID of the Command."
        required: true
        type: "string"
        x-exportParamName: "CommandId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_commandTraverseSystem"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /directories:
    get:
      tags:
      - "Directories"
      summary: "List All Directories"
      description: "This endpoint returns all active directories (LDAP, O365 Suite,\
        \ G-Suite).\n\n#### Sample Request\n```\n curl -X GET https://console.jumpcloud.com/api/v2/directories\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "directories_list"
      parameters:
      - name: "fields"
        in: "query"
        description: "The comma separated fields included in the returned records.\n\
          If omitted, the default list of fields will be returned.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Fields"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Directory"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "directories_list"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /duo/accounts:
    get:
      tags:
      - "Duo"
      summary: "List Duo Acounts"
      description: "#### Sample Request\n```\ncurl https://console.jumpcloud.com/api/v2/duo/accounts\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n```"
      operationId: "duo_accountList"
      parameters:
      - name: "x-api-key"
        in: "header"
        required: true
        type: "string"
        x-exportParamName: "XApiKey"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/DuoAccount"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "duo_accountList"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
    post:
      tags:
      - "Duo"
      summary: "Create Duo Account"
      description: "Registers a Duo account for an organization. Only one Duo account\
        \ will be allowed,\nin case an organization has a Duo account already a 409\
        \ (Conflict) code will be returned.\n\n#### Sample Request\n```\n  curl -X\
        \ POST https://console.jumpcloud.com/api/v2/duo/accounts \\\n  -H 'accept:\
        \ application/json' \\\n  -H 'content-type: application/json' \\\n  -H 'x-api-key:\
        \ {API_KEY}' \\\n  -d '{\n    \"registrationApplication\": {\n      \"apiHost\"\
        : \"api-1234.duosecurity.com\",\n      \"integrationKey\": \"1234\",\n   \
        \   \"secretKey\": \"5678\"\n    }\n  }'\n```"
      operationId: "duo_accountPost"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/DuoRegistrationApplicationReq"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        201:
          description: ""
          schema:
            $ref: "#/definitions/DuoAccount"
        400:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        401:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        403:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        404:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        409:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        500:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "duo_accountPost"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
  /duo/accounts/{account_id}/applications:
    get:
      tags:
      - "Duo"
      summary: "List Duo Applications"
      operationId: "duo_applicationList"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/DuoApplication"
        400:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        401:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        403:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        404:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        409:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        500:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "duo_applicationList"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
    post:
      tags:
      - "Duo"
      summary: "Create Duo Application"
      description: "Creates a Duo application for an organization and its account.\n\
        \n#### Sample Request\n```\n  curl -X POST https://console.jumpcloud.com/api/v2/duo/accounts/obj-id-123/applications\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n    \"name\": \"Application\
        \ Name\",\n    \"apiHost\": \"api-1234.duosecurity.com\",\n    \"integrationKey\"\
        : \"1234\",\n    \"secretKey\": \"5678\"\n  }'\n```"
      operationId: "duo_applicationPost"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/DuoApplicationReq"
        x-exportParamName: "Body"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      responses:
        201:
          description: ""
          schema:
            $ref: "#/definitions/DuoApplication"
        400:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        401:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        403:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        404:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        409:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        500:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "duo_applicationPost"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
  /duo/accounts/{account_id}/applications/{application_id}:
    get:
      tags:
      - "Duo"
      summary: "Get a Duo application"
      operationId: "duo_applicationGet"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "application_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ApplicationId"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/DuoApplication"
        400:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        401:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        403:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        404:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        409:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        500:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "duo_applicationGet"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
    delete:
      tags:
      - "Duo"
      summary: "Delete a Duo Application"
      operationId: "duo_applicationDelete"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "application_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ApplicationId"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/DuoApplication"
        400:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        401:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        403:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        404:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        409:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        500:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "duo_applicationDelete"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
  /duo/accounts/{id}:
    get:
      tags:
      - "Duo"
      summary: "Get a Duo Acount"
      description: "#### Sample Request\n```\ncurl https://console.jumpcloud.com/api/v2/duo/accounts/{id}\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n```"
      operationId: "duo_accountGet"
      parameters:
      - name: "id"
        in: "path"
        description: "ObjectID of the Duo Account"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/DuoAccount"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "duo_accountGet"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
  /groups:
    get:
      tags:
      - "Groups"
      summary: "List All Groups"
      description: "This endpoint returns all Groups that exist in your organization.\n\
        \n#### Available filter fields:\n  - `name`\n  - `disabled`\n  - `type`\n\n\
        #### Sample Request\n\n```\n  curl -X GET \\\n  https://console.jumpcloud.com/api/v2/groups\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "groups_list"
      parameters:
      - name: "fields"
        in: "query"
        description: "The comma separated fields included in the returned records.\n\
          If omitted, the default list of fields will be returned.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Group"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "groups_list"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /gsuites/{gsuite_id}/associations:
    get:
      tags:
      - "Graph"
      - "G Suite"
      summary: "List the associations of a G Suite instance"
      description: "This endpoint returns the _direct_ associations of this G Suite\
        \ instance.\n\nA direct association can be a non-homogeneous relationship\
        \ between 2 different objects, for example G Suite and Users.\n\n\n#### Sample\
        \ Request\n```\ncurl -X GET 'https://console.jumpcloud.com/api/v2/gsuites/{Gsuite_ID}/associations?targets=user_group\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_gSuiteAssociationsList"
      parameters:
      - name: "gsuite_id"
        in: "path"
        description: "ObjectID of the G Suite instance."
        required: true
        type: "string"
        x-exportParamName: "GsuiteId"
      - name: "targets"
        in: "query"
        description: ""
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "active_directory"
          - "application"
          - "command"
          - "g_suite"
          - "ldap_server"
          - "office_365"
          - "policy"
          - "radius_server"
          - "system"
          - "system_group"
          - "user"
          - "user_group"
        x-exportParamName: "Targets"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphConnection"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_gSuiteAssociationsList"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    post:
      tags:
      - "Graph"
      - "G Suite"
      summary: "Manage the associations of a G Suite instance"
      description: "This endpoint returns the _direct_ associations of this G Suite\
        \ instance.\n\nA direct association can be a non-homogeneous relationship\
        \ between 2 different objects, for example G Suite and Users.\n\n\n#### Sample\
        \ Request\n```\ncurl -X POST https://console.jumpcloud.com/api/v2/gsuites/{Gsuite_ID}/associations\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n    \"op\": \"add\",\n    \"\
        type\": \"user_group\",\n    \"id\": \"{Group_ID}\"\n}'\n```"
      operationId: "graph_gSuiteAssociationsPost"
      parameters:
      - name: "gsuite_id"
        in: "path"
        description: "ObjectID of the G Suite instance."
        required: true
        type: "string"
        x-exportParamName: "GsuiteId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/GraphManagementReq"
        x-exportParamName: "Body"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        204:
          description: "OK"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_gSuiteAssociationsPost"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    x-swagger-jumpcloud-auto-insert: true
  /gsuites/{gsuite_id}/translationrules:
    get:
      tags:
      - "G Suite"
      summary: "List all the G Suite Translation Rules"
      description: "This endpoint returns all graph translation rules for a specific\
        \ G Suite instance. These rules specify how JumpCloud attributes translate\
        \ to [G Suite Admin SDK](https://developers.google.com/admin-sdk/directory/)\
        \ attributes.\n\n##### Sample Request\n\n```\n curl -X GET  https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/translationrules\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "translationRules_gSuiteList"
      parameters:
      - name: "gsuite_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "GsuiteId"
      - name: "fields"
        in: "query"
        description: "The comma separated fields included in the returned records.\n\
          If omitted, the default list of fields will be returned.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GSuiteTranslationRule"
          examples:
            application/json:
            - field: "g_suite_work_addresses"
              id: "object_id_1"
              source_type: "user"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "translationRules_gSuiteList"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    post:
      tags:
      - "G Suite"
      summary: "Create a new G Suite Translation Rule"
      description: "This endpoint allows you to create a translation rule for a specific\
        \ G Suite instance. These rules specify how JumpCloud attributes translate\
        \ to [G Suite Admin SDK](https://developers.google.com/admin-sdk/directory/)\
        \ attributes.\n\n##### Sample Request\n```\ncurl -X POST https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/translationrules\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n  {Translation Rule Parameters}\n\
        }'\n\n```"
      operationId: "translationRules_gSuitePost"
      parameters:
      - name: "gsuite_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "GsuiteId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/GSuiteTranslationRuleRequest"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      responses:
        201:
          description: ""
          schema:
            $ref: "#/definitions/GSuiteTranslationRule"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "translationRules_gSuitePost"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /gsuites/{gsuite_id}/translationrules/{id}:
    get:
      tags:
      - "G Suite"
      summary: "Gets a specific G Suite translation rule"
      description: "This endpoint returns a specific translation rule for a specific\
        \ G Suite instance. These rules specify how JumpCloud attributes translate\
        \ to [G Suite Admin SDK](https://developers.google.com/admin-sdk/directory/)\
        \ attributes.\n\n###### Sample Request\n\n```\n  curl -X GET https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/translationrules/{id}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "translationRules_gSuiteGet"
      parameters:
      - name: "gsuite_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "GsuiteId"
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/GSuiteTranslationRule"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "translationRules_gSuiteGet"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    delete:
      tags:
      - "G Suite"
      summary: "Deletes a G Suite translation rule"
      description: "This endpoint allows you to delete a translation rule for a specific\
        \ G Suite instance. These rules specify how JumpCloud attributes translate\
        \ to [G Suite Admin SDK](https://developers.google.com/admin-sdk/directory/)\
        \ attributes.\n\n#### Sample Request\n\n```\ncurl -X DELETE https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/translationrules/{id}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "translationRules_gSuiteDelete"
      parameters:
      - name: "gsuite_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "GsuiteId"
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      responses:
        204:
          description: ""
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "translationRules_gSuiteDelete"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /gsuites/{gsuite_id}/usergroups:
    get:
      tags:
      - "Graph"
      - "G Suite"
      summary: "List the User Groups bound to a G Suite instance"
      description: "This endpoint will return all User Groups bound to an G Suite\
        \ instance, either directly or indirectly, essentially traversing the JumpCloud\
        \ Graph for your Organization.\n\nEach element will contain the group's type,\
        \ id, attributes and paths.\n\nThe `attributes` object is a key/value hash\
        \ of compiled graph attributes for all paths followed.\n\nThe `paths` array\
        \ enumerates each path from this G Suite instance to the corresponding User\
        \ Group; this array represents all grouping and/or associations that would\
        \ have to be removed to deprovision the User Group from this G Suite instance.\n\
        \nSee `/members` and `/associations` endpoints to manage those collections.\n\
        \n#### Sample Request\n```\n  curl -X GET https://console.jumpcloud.com/api/v2/gsuites/{GSuite_ID}/usergroups\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_gSuiteTraverseUserGroup"
      parameters:
      - name: "gsuite_id"
        in: "path"
        description: "ObjectID of the G Suite instance."
        required: true
        type: "string"
        x-exportParamName: "GsuiteId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_gSuiteTraverseUserGroup"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /gsuites/{gsuite_id}/users:
    get:
      tags:
      - "Graph"
      - "G Suite"
      summary: "List the Users bound to a G Suite instance"
      description: "This endpoint will return all Users bound to a G Suite instance,\
        \ either directly or indirectly, essentially traversing the JumpCloud Graph\
        \ for your Organization.\n\nEach element will contain the type, id, attributes\
        \ and paths.\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this G Suite instance to the corresponding User; this array represents\
        \ all grouping and/or associations that would have to be removed to deprovision\
        \ the User from this G Suite instance.\n\nSee `/members` and `/associations`\
        \ endpoints to manage those collections.\n\n#### Sample Request\n```\n  curl\
        \ -X GET https://console.jumpcloud.com/api/v2/gsuites/{Gsuite_ID}/users \\\
        \n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_gSuiteTraverseUser"
      parameters:
      - name: "gsuite_id"
        in: "path"
        description: "ObjectID of the G Suite instance."
        required: true
        type: "string"
        x-exportParamName: "GsuiteId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_gSuiteTraverseUser"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /gsuites/{id}:
    get:
      tags:
      - "G Suite"
      summary: "Get G Suite"
      description: "This endpoint returns a specific G Suite.\n\n##### Sample Request\n\
        \n```\n curl -X GET https://console.jumpcloud.com/api/v2/gsuites/{GSUITE_ID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "gsuites_get"
      parameters:
      - name: "id"
        in: "path"
        description: "Unique identifier of the GSuite."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/gsuite-output"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "gsuites_get"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    patch:
      tags:
      - "G Suite"
      summary: "Update existing G Suite"
      description: "This endpoint allows updating some attributes of a G Suite.\n\n\
        ##### Sample Request\n\n```\ncurl -X PATCH https://console.jumpcloud.com/api/v2/gsuites/{GSUITE_ID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n    \"userLockoutAction\":\
        \ \"remove\",\n    \"userPasswordExpirationAction\": \"disable\"\n  }'\n```"
      operationId: "gsuites_patch"
      parameters:
      - name: "id"
        in: "path"
        description: "Unique identifier of the GSuite."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/gsuite-patch-input"
        x-exportParamName: "Body"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/gsuite-output"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "gsuites_patch"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /jobs/{id}:
    get:
      tags:
      - "Bulk Job Requests"
      summary: "Get Job (incomplete)"
      description: "**This endpoint is not complete and should remain hidden as it's\
        \ not functional yet.**"
      operationId: "jobs_get"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/job-details"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "jobs_get"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
  /jobs/{id}/results:
    get:
      tags:
      - "Bulk Job Requests"
      summary: "List Job Results"
      description: "This endpoint will return the results of particular import job\
        \ request.\n\n#### Sample Request\n```\ncurl -X GET \\\n  https://console.jumpcloud.com/api/v2/jobs/{ImportJobID}/results\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "jobs_results"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/job-workresult"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "jobs_results"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
  /ldapservers:
    get:
      tags:
      - "LDAP Servers"
      summary: "List LDAP Servers"
      description: "This endpoint returns the object IDs of your LDAP servers.\n\n\
        \n##### Sample Request\n\n```\n  curl -X GET https://console.jumpcloud.com/api/v2/ldapservers/\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'"
      operationId: "ldapservers_list"
      parameters:
      - name: "fields"
        in: "query"
        description: "The comma separated fields included in the returned records.\n\
          If omitted, the default list of fields will be returned.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ldap-server-output"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "ldapservers_list"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /ldapservers/{id}:
    get:
      tags:
      - "LDAP Servers"
      summary: "Get LDAP Server"
      description: "This endpoint returns a specific LDAP server.\n\n##### Sample\
        \ Request\n\n```\n curl -X GET https://console.jumpcloud.com/api/v2/ldapservers/{LDAP_ID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "ldapservers_get"
      parameters:
      - name: "id"
        in: "path"
        description: "Unique identifier of the LDAP server."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/ldap-server-output"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "ldapservers_get"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    patch:
      tags:
      - "LDAP Servers"
      summary: "Update existing LDAP server"
      description: "This endpoint allows updating some attributes of an LDAP server.\n\
        \nSample Request\n\n```\ncurl -X PATCH https://console.jumpcloud.com/api/v2/ldapservers/{LDAP_ID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n    \"userLockoutAction\":\
        \ \"remove\",\n    \"userPasswordExpirationAction\": \"disable\"\n  }'\n```"
      operationId: "ldapservers_patch"
      parameters:
      - name: "id"
        in: "path"
        description: "Unique identifier of the LDAP server."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/body"
        x-exportParamName: "Body"
      - name: "x-api-key"
        in: "header"
        required: false
        type: "string"
        x-exportParamName: "XApiKey"
      - name: "x-org-id"
        in: "header"
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200"
        400:
          description: ""
          schema:
            $ref: "#/definitions/inline_response_400"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "ldapservers_patch"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /ldapservers/{ldapserver_id}/associations:
    get:
      tags:
      - "Graph"
      - "LDAP Servers"
      summary: "List the associations of a LDAP Server"
      description: "This endpoint returns the _direct_ associations of this LDAP Server.\n\
        \nA direct association can be a non-homogeneous relationship between 2 different\
        \ objects, for example LDAP and Users.\n\n#### Sample Request\n\n```\n curl\
        \ -X GET 'https://console.jumpcloud.com/api/v2/ldapservers/{LDAP_ID}/associations?targets=user_group\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_ldapServerAssociationsList"
      parameters:
      - name: "ldapserver_id"
        in: "path"
        description: "ObjectID of the LDAP Server."
        required: true
        type: "string"
        x-exportParamName: "LdapserverId"
      - name: "targets"
        in: "query"
        description: ""
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "active_directory"
          - "application"
          - "command"
          - "g_suite"
          - "ldap_server"
          - "office_365"
          - "policy"
          - "radius_server"
          - "system"
          - "system_group"
          - "user"
          - "user_group"
        x-exportParamName: "Targets"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphConnection"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_ldapServerAssociationsList"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    post:
      tags:
      - "Graph"
      - "LDAP Servers"
      summary: "Manage the associations of a LDAP Server"
      description: "This endpoint allows you to manage the _direct_ associations of\
        \ a LDAP Server.\n\nA direct association can be a non-homogeneous relationship\
        \ between 2 different objects, for example LDAP and Users.\n\n#### Sample\
        \ Request\n```\ncurl -X POST https://console.jumpcloud.com/api/v2/ldapservers/{LDAP_ID}/associations\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n    \"op\": \"add\",\n    \"\
        type\": \"user\",\n    \"id\": \"{User_ID}\"\n}'\n```"
      operationId: "graph_ldapServerAssociationsPost"
      parameters:
      - name: "ldapserver_id"
        in: "path"
        description: "ObjectID of the LDAP Server."
        required: true
        type: "string"
        x-exportParamName: "LdapserverId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/GraphManagementReq"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        204:
          description: "OK"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_ldapServerAssociationsPost"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    x-swagger-jumpcloud-auto-insert: true
  /ldapservers/{ldapserver_id}/sambadomains:
    get:
      tags:
      - "Samba Domains"
      summary: "List Samba Domains"
      description: "This endpoint returns all samba domains for an LDAP server.\n\n\
        ##### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/ldapservers/{LDAP_ID}/sambadomains\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "ldapservers_sambaDomainsList"
      parameters:
      - name: "ldapserver_id"
        in: "path"
        description: "Unique identifier of the LDAP server."
        required: true
        type: "string"
        x-exportParamName: "LdapserverId"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "fields"
        in: "query"
        description: "The comma separated fields included in the returned records.\n\
          If omitted, the default list of fields will be returned.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/samba-domain-output"
        default:
          description: ""
          schema:
            $ref: "#/definitions/Error"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "ldapservers_sambaDomainsList"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    post:
      tags:
      - "Samba Domains"
      summary: "Create Samba Domain"
      description: "This endpoint allows you to create a samba domain for an LDAP\
        \ server.\n\n##### Sample Request\n```\ncurl -X POST https://console.jumpcloud.com/api/v2/ldapservers/{LDAP_ID}/sambadomains\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n\"sid\":\"{SID_ID}\",\n\"name\"\
        :\"{WORKGROUP_NAME}\"\n}'\n```"
      operationId: "ldapservers_sambaDomainsPost"
      parameters:
      - name: "ldapserver_id"
        in: "path"
        description: "Unique identifier of the LDAP server."
        required: true
        type: "string"
        x-exportParamName: "LdapserverId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/samba-domain-input"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        201:
          description: ""
          schema:
            $ref: "#/definitions/samba-domain-output"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "ldapservers_sambaDomainsPost"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /ldapservers/{ldapserver_id}/sambadomains/{id}:
    get:
      tags:
      - "Samba Domains"
      summary: "Get Samba Domain"
      description: "This endpoint returns a specific samba domain for an LDAP server.\n\
        \n##### Sample Request\n```\ncurl -X GET \\\n  https://console.jumpcloud.com/api/v2/ldapservers/ldapservers/{LDAP_ID}/sambadomains/{SAMBA_ID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "ldapservers_sambaDomainsGet"
      parameters:
      - name: "ldapserver_id"
        in: "path"
        description: "Unique identifier of the LDAP server."
        required: true
        type: "string"
        x-exportParamName: "LdapserverId"
      - name: "id"
        in: "path"
        description: "Unique identifier of the samba domain."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/samba-domain-output"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "ldapservers_sambaDomainsGet"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    put:
      tags:
      - "Samba Domains"
      summary: "Update Samba Domain"
      description: "This endpoint allows you to update the samba domain information\
        \ for an LDAP server.\n\n##### Sample Request\n```\ncurl -X PUT https://console.jumpcloud.com/api/v2/ldapservers/{LDAP_ID}/sambadomains/{SAMBA_ID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n\"sid\":\"{SID_ID}\",\n\"name\"\
        :\"{WORKGROUP_NAME}\"\n}'\n\n```"
      operationId: "ldapservers_sambaDomainsPut"
      parameters:
      - name: "ldapserver_id"
        in: "path"
        description: "Unique identifier of the LDAP server."
        required: true
        type: "string"
        x-exportParamName: "LdapserverId"
      - name: "id"
        in: "path"
        description: "Unique identifier of the samba domain."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/samba-domain-input"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/samba-domain-output"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "ldapservers_sambaDomainsPut"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    delete:
      tags:
      - "Samba Domains"
      summary: "Delete Samba Domain"
      description: "This endpoint allows you to delete a samba domain from an LDAP\
        \ server.\n\n##### Sample Request\n```\ncurl -X DELETE https://console.jumpcloud.com/api/v2/ldapservers/{LDAP_ID}/sambadomains/{SAMBA_ID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "ldapservers_sambaDomainsDelete"
      parameters:
      - name: "ldapserver_id"
        in: "path"
        description: "Unique identifier of the LDAP server."
        required: true
        type: "string"
        x-exportParamName: "LdapserverId"
      - name: "id"
        in: "path"
        description: "Unique identifier of the samba domain."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            type: "string"
        204:
          description: ""
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "ldapservers_sambaDomainsDelete"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /ldapservers/{ldapserver_id}/usergroups:
    get:
      tags:
      - "Graph"
      - "LDAP Servers"
      summary: "List the User Groups bound to a LDAP Server"
      description: "This endpoint will return all Users Groups bound to a LDAP Server,\
        \ either directly or indirectly, essentially traversing the JumpCloud Graph\
        \ for your Organization.\n\nEach element will contain the group's type, id,\
        \ attributes and paths.\n\nThe `attributes` object is a key/value hash of\
        \ compiled graph attributes for all paths followed.\n\nThe `paths` array enumerates\
        \ each path from this LDAP server instance to the corresponding User Group;\
        \ this array represents all grouping and/or associations that would have to\
        \ be removed to deprovision the User Group from this LDAP server instance.\n\
        \nSee `/members` and `/associations` endpoints to manage those collections.\n\
        \n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/ldapservers/{LDAP_ID}/usergroups\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_ldapServerTraverseUserGroup"
      parameters:
      - name: "ldapserver_id"
        in: "path"
        description: "ObjectID of the LDAP Server."
        required: true
        type: "string"
        x-exportParamName: "LdapserverId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_ldapServerTraverseUserGroup"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /ldapservers/{ldapserver_id}/users:
    get:
      tags:
      - "Graph"
      - "LDAP Servers"
      summary: "List the Users bound to a LDAP Server"
      description: "This endpoint will return all Users bound to an LDAP Server, either\
        \ directly or indirectly, essentially traversing the JumpCloud Graph for your\
        \ Organization.\n\nEach element will contain the type, id, attributes and\
        \ paths.\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this LDAP server instance to the corresponding User; this array\
        \ represents all grouping and/or associations that would have to be removed\
        \ to deprovision the User from this LDAP server instance.\n\nSee `/members`\
        \ and `/associations` endpoints to manage those collections.\n\n#### Sample\
        \ Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/ldapservers/{LDAP_ID}/users\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_ldapServerTraverseUser"
      parameters:
      - name: "ldapserver_id"
        in: "path"
        description: "ObjectID of the LDAP Server."
        required: true
        type: "string"
        x-exportParamName: "LdapserverId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_ldapServerTraverseUser"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /office365s/{office365_id}/associations:
    get:
      tags:
      - "Graph"
      - "Office 365"
      summary: "List the associations of an Office 365 instance"
      description: "This endpoint returns _direct_ associations of an Office 365 instance.\n\
        \n\nA direct association can be a non-homogeneous relationship between 2 different\
        \ objects, for example Office 365 and Users.\n\n#### Sample Request\n```\n\
        curl -X GET 'https://console.jumpcloud.com/api/v2/office365s/{O365_ID}/associations?targets=user_group\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n\n```"
      operationId: "graph_office365AssociationsList"
      parameters:
      - name: "office365_id"
        in: "path"
        description: "ObjectID of the Office 365 instance."
        required: true
        type: "string"
        x-exportParamName: "Office365Id"
      - name: "targets"
        in: "query"
        description: ""
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "active_directory"
          - "application"
          - "command"
          - "g_suite"
          - "ldap_server"
          - "office_365"
          - "policy"
          - "radius_server"
          - "system"
          - "system_group"
          - "user"
          - "user_group"
        x-exportParamName: "Targets"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphConnection"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_office365AssociationsList"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    post:
      tags:
      - "Graph"
      - "Office 365"
      summary: "Manage the associations of an Office 365 instance"
      description: "This endpoint allows you to manage the _direct_ associations of\
        \ a Office 365 instance.\n\nA direct association can be a non-homogeneous\
        \ relationship between 2 different objects, for example Office 365 and Users.\n\
        \n#### Sample Request\n```\ncurl -X POST https://console.jumpcloud.com/api/v2/office365s/{O365_ID}/associations\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n    \"op\": \"add\",\n    \"\
        type\": \"user_group\",\n    \"id\": \"{Group_ID}\"\n}'\n```"
      operationId: "graph_office365AssociationsPost"
      parameters:
      - name: "office365_id"
        in: "path"
        description: "ObjectID of the Office 365 instance."
        required: true
        type: "string"
        x-exportParamName: "Office365Id"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/GraphManagementReq"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        204:
          description: "OK"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_office365AssociationsPost"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    x-swagger-jumpcloud-auto-insert: true
  /office365s/{office365_id}/translationrules:
    get:
      tags:
      - "Office 365"
      summary: "List all the Office 365 Translation Rules"
      description: "This endpoint returns all translation rules for a specific Office\
        \ 365 instance. These rules specify how JumpCloud attributes translate to\
        \ [Microsoft Graph](https://developer.microsoft.com/en-us/graph) attributes.\n\
        \n##### Sample Request\n\n```\n curl -X GET  https://console.jumpcloud.com/api/v2/office365s/{office365_id}/translationrules\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "translationRules_office365List"
      parameters:
      - name: "office365_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Office365Id"
      - name: "fields"
        in: "query"
        description: "The comma separated fields included in the returned records.\n\
          If omitted, the default list of fields will be returned.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Office365TranslationRule"
          examples:
            application/json:
            - field: "office_365_state"
              id: "object_id_1"
              source_type: "user"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "translationRules_office365List"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    post:
      tags:
      - "Office 365"
      summary: "Create a new Office 365 Translation Rule"
      description: "This endpoint allows you to create a translation rule for a specific\
        \ Office 365 instance. These rules specify how JumpCloud attributes translate\
        \ to [Microsoft Graph](https://developer.microsoft.com/en-us/graph) attributes.\n\
        \n##### Sample Request\n```\ncurl -X POST https://console.jumpcloud.com/api/v2/office365s/{office365_id}/translationrules\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n  {Translation Rule Parameters}\n\
        }'\n\n```"
      operationId: "translationRules_office365Post"
      parameters:
      - name: "office365_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Office365Id"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/Office365TranslationRuleRequest"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      responses:
        201:
          description: ""
          schema:
            $ref: "#/definitions/Office365TranslationRule"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "translationRules_office365Post"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /office365s/{office365_id}/translationrules/{id}:
    get:
      tags:
      - "Office 365"
      summary: "Gets a specific Office 365 translation rule"
      description: "This endpoint returns a specific translation rule for a specific\
        \ Office 365 instance. These rules specify how JumpCloud attributes translate\
        \ to [Microsoft Graph](https://developer.microsoft.com/en-us/graph) attributes.\n\
        \n###### Sample Request\n\n```\n  curl -X GET https://console.jumpcloud.com/api/v2/office365s/{office365_id}/translationrules/{id}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "translationRules_office365Get"
      parameters:
      - name: "office365_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Office365Id"
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/Office365TranslationRule"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "translationRules_office365Get"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    delete:
      tags:
      - "Office 365"
      summary: "Deletes a Office 365 translation rule"
      description: "This endpoint allows you to delete a translation rule for a specific\
        \ Office 365 instance. These rules specify how JumpCloud attributes translate\
        \ to [Microsoft Graph](https://developer.microsoft.com/en-us/graph) attributes.\n\
        \n#### Sample Request\n\n```\ncurl -X DELETE https://console.jumpcloud.com/api/v2/office365s/{office365_id}/translationrules/{id}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "translationRules_office365Delete"
      parameters:
      - name: "office365_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Office365Id"
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      responses:
        204:
          description: ""
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "translationRules_office365Delete"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /office365s/{office365_id}/usergroups:
    get:
      tags:
      - "Graph"
      - "Office 365"
      summary: "List the User Groups bound to an Office 365 instance"
      description: "This endpoint will return all Users Groups bound to an Office\
        \ 365 instance, either directly or indirectly, essentially traversing the\
        \ JumpCloud Graph for your Organization.\n\nEach element will contain the\
        \ group's type, id, attributes and paths.\n\nThe `attributes` object is a\
        \ key/value hash of compiled graph attributes for all paths followed.\n\n\
        The `paths` array enumerates each path from this Office 365 instance to the\
        \ corresponding User Group; this array represents all grouping and/or associations\
        \ that would have to be removed to deprovision the User Group from this Office\
        \ 365 instance.\n\nSee `/members` and `/associations` endpoints to manage\
        \ those collections.\n\n#### Sample Request\n```\n  curl -X GET https://console.jumpcloud.com/api/v2/office365s/{O365_ID/usergroups\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_office365TraverseUserGroup"
      parameters:
      - name: "office365_id"
        in: "path"
        description: "ObjectID of the Office 365 suite."
        required: true
        type: "string"
        x-exportParamName: "Office365Id"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_office365TraverseUserGroup"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /office365s/{office365_id}/users:
    get:
      tags:
      - "Graph"
      - "Office 365"
      summary: "List the Users bound to an Office 365 instance"
      description: "This endpoint will return all Users bound to an Office 365 instance,\
        \ either directly or indirectly, essentially traversing the JumpCloud Graph\
        \ for your Organization.\n\nEach element will contain the type, id, attributes\
        \ and paths.\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this Office 365 instance to the corresponding User; this array\
        \ represents all grouping and/or associations that would have to be removed\
        \ to deprovision the User from this Office 365 instance.\n\nSee `/members`\
        \ and `/associations` endpoints to manage those collections.\n\n#### Sample\
        \ Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/office365s/{O365_ID}/users\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_office365TraverseUser"
      parameters:
      - name: "office365_id"
        in: "path"
        description: "ObjectID of the Office 365 suite."
        required: true
        type: "string"
        x-exportParamName: "Office365Id"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_office365TraverseUser"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /organizations/{id}/crypto:
    get:
      tags:
      - "Organizations"
      summary: "Get Crypto Settings"
      operationId: "org_crypto_get"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: "The comma separated fields included in the returned records.\n\
          If omitted, the default list of fields will be returned.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/org-crypto-settings"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "org_crypto_get"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
    put:
      tags:
      - "Organizations"
      summary: "Edit Crypto Settings"
      operationId: "org_crypto_put"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/org-crypto-settings"
        x-exportParamName: "Body"
      - name: "fields"
        in: "query"
        description: "The comma separated fields included in the returned records.\n\
          If omitted, the default list of fields will be returned.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      responses:
        204:
          description: ""
          schema:
            type: "object"
            properties: {}
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "org_crypto_put"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
  /policies:
    get:
      tags:
      - "Policies"
      summary: "Lists all the Policies"
      description: "This endpoint returns all policies.\n\n##### Sample Request\n\n\
        ```\n curl -X GET  https://console.jumpcloud.com/api/v2/policies \\\n  -H\
        \ 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n\
        \  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "policies_list"
      parameters:
      - name: "fields"
        in: "query"
        description: "The comma separated fields included in the returned records.\n\
          If omitted, the default list of fields will be returned.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Policy"
        500:
          description: "Unexpected error."
          schema:
            $ref: "#/definitions/Error"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "policies_list"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    post:
      tags:
      - "Policies"
      summary: "Create a new Policy"
      description: "This endpoint allows you to create a policy. Given the amount\
        \ of configurable parameters required to create a Policy, we suggest you use\
        \ the JumpCloud Admin Console to create new policies.\n\n##### Sample Request\n\
        ```\ncurl -X POST https://console.jumpcloud.com/api/v2/policies \\\n  -H 'Accept:\
        \ application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key:\
        \ {API_KEY}' \\\n  -d '{\n  {Policy_Parameters}\n}'\n\n```"
      operationId: "policies_post"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PolicyRequest"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/PolicyWithDetails"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "policies_post"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /policies/{id}:
    get:
      tags:
      - "Policies"
      summary: "Gets a specific Policy."
      description: "This endpoint returns a specific policy.\n\n###### Sample Request\n\
        \n```\n  curl -X GET https://console.jumpcloud.com/api/v2/policies/{PolicyID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "policies_get"
      parameters:
      - name: "id"
        in: "path"
        description: "ObjectID of the Policy object."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PolicyWithDetails"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "policies_get"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    put:
      tags:
      - "Policies"
      summary: "Update an existing Policy"
      description: "This endpoint allows you to update a policy. Given the amount\
        \ of configurable parameters required to update a Policy, we suggest you use\
        \ the JumpCloud Admin Console to create new policies.\n\n\n##### Sample Request\n\
        ```\ncurl -X PUT https://console.jumpcloud.com/api/v2/policies/59fced45c9118022172547ff\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY' \\\n  -d '{\n    {Policy_Parameters}\n}'\n\
        ```"
      operationId: "policies_put"
      parameters:
      - name: "id"
        in: "path"
        description: "ObjectID of the Policy object."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PolicyRequest"
        x-exportParamName: "Body"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Policy"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "policies_put"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    delete:
      tags:
      - "Policies"
      summary: "Deletes a Policy"
      description: "This endpoint allows you to delete a policy.\n\n#### Sample Request\n\
        \n```\ncurl -X DELETE https://console.jumpcloud.com/api/v2/policies/5a837ecd232e110d4291e6b9\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "policies_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "ObjectID of the Policy object."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        204:
          description: "No Content"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "policies_delete"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /policies/{policy_id}/associations:
    get:
      tags:
      - "Graph"
      - "Policies"
      summary: "List the associations of a Policy"
      description: "This endpoint returns the _direct_ associations of a Policy.\n\
        \nA direct association can be a non-homogeneous relationship between 2 different\
        \ objects, for example Policies and Systems.\n\n#### Sample Request\n```\n\
        curl -X GET 'https://console.jumpcloud.com/api/v2/policies/{Policy_ID}/associations?targets=system_group\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_policyAssociationsList"
      parameters:
      - name: "policy_id"
        in: "path"
        description: "ObjectID of the Policy."
        required: true
        type: "string"
        x-exportParamName: "PolicyId"
      - name: "targets"
        in: "query"
        description: ""
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "active_directory"
          - "application"
          - "command"
          - "g_suite"
          - "ldap_server"
          - "office_365"
          - "policy"
          - "radius_server"
          - "system"
          - "system_group"
          - "user"
          - "user_group"
        x-exportParamName: "Targets"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphConnection"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_policyAssociationsList"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    post:
      tags:
      - "Graph"
      - "Policies"
      summary: "Manage the associations of a Policy"
      description: "This endpoint allows you to manage the _direct_ associations of\
        \ a Policy.\n\nA direct association can be a non-homogeneous relationship\
        \ between 2 different objects, for example Policies and Systems.\n\n#### Sample\
        \ Request\n```\ncurl -X POST https://console.jumpcloud.com/api/v2/policies/{Policy_ID}/associations/\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n    \"op\": \"add\",\n    \"\
        type\": \"system_group\",\n    \"id\": \"{Group_ID}\"\n}'\n```"
      operationId: "graph_policyAssociationsPost"
      parameters:
      - name: "policy_id"
        in: "path"
        description: "ObjectID of the Policy."
        required: true
        type: "string"
        x-exportParamName: "PolicyId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/GraphManagementReq"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        204:
          description: ""
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_policyAssociationsPost"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /policies/{policy_id}/policyresults:
    get:
      tags:
      - "Policies"
      summary: "Lists all the policy results of a policy."
      description: "This endpoint returns all policies results for a specific policy.\n\
        \n##### Sample Request\n\n```\n curl -X GET https://console.jumpcloud.com/api/v2/policies/{Policy_ID}/policyresults\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "policyresults_list"
      parameters:
      - name: "policy_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "PolicyId"
      - name: "fields"
        in: "query"
        description: "The comma separated fields included in the returned records.\n\
          If omitted, the default list of fields will be returned.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      - name: "aggregate"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Aggregate"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PolicyResult"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "policyresults_list"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /policies/{policy_id}/policystatuses:
    get:
      tags:
      - "Policies"
      summary: "Lists the latest policy results of a policy."
      description: "This endpoint returns the latest policies results for a specific\
        \ policy.\n\n##### Sample Request\n\n```\n curl -X GET https://console.jumpcloud.com/api/v2/policies/{Policy_ID}/policystatuses\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "policystatuses_list"
      parameters:
      - name: "policy_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "PolicyId"
      - name: "fields"
        in: "query"
        description: "The comma separated fields included in the returned records.\n\
          If omitted, the default list of fields will be returned.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PolicyResult"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "policystatuses_list"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /policies/{policy_id}/systemgroups:
    get:
      tags:
      - "Graph"
      - "Policies"
      summary: "List the System Groups bound to a Policy"
      description: "This endpoint will return all Systems Groups bound to a Policy,\
        \ either directly or indirectly, essentially traversing the JumpCloud Graph\
        \ for your Organization.\n\nEach element will contain the group's type, id,\
        \ attributes and paths.\n\nThe `attributes` object is a key/value hash of\
        \ compiled graph attributes for all paths followed.\n\nThe `paths` array enumerates\
        \ each path from this Policy to the corresponding System Group; this array\
        \ represents all grouping and/or associations that would have to be removed\
        \ to deprovision the System Group from this Policy.\n\nSee `/members` and\
        \ `/associations` endpoints to manage those collections.\n\n#### Sample Request\n\
        ```\ncurl -X GET  https://console.jumpcloud.com/api/v2/policies/{Policy_ID}/systemgroups\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_policyTraverseSystemGroup"
      parameters:
      - name: "policy_id"
        in: "path"
        description: "ObjectID of the Command."
        required: true
        type: "string"
        x-exportParamName: "PolicyId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_policyTraverseSystemGroup"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /policies/{policy_id}/systems:
    get:
      tags:
      - "Graph"
      - "Policies"
      summary: "List the Systems bound to a Policy"
      description: "This endpoint will return all Systems bound to a Policy, either\
        \ directly or indirectly, essentially traversing the JumpCloud Graph for your\
        \ Organization.\n\nEach element will contain the type, id, attributes and\
        \ paths.\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this Policy to the corresponding System; this array represents\
        \ all grouping and/or associations that would have to be removed to deprovision\
        \ the System from this Policy.\n\nSee `/members` and `/associations` endpoints\
        \ to manage those collections.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/policies/{Policy_ID}/systems\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_policyTraverseSystem"
      parameters:
      - name: "policy_id"
        in: "path"
        description: "ObjectID of the Command."
        required: true
        type: "string"
        x-exportParamName: "PolicyId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_policyTraverseSystem"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /policyresults:
    get:
      tags:
      - "Policies"
      summary: "Lists all the policy results for an organization."
      description: "This endpoint returns all policies results for an organization.\n\
        \n##### Sample Request\n\n```\n curl -X GET https://console.jumpcloud.com/api/v2/policyresults\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "policyresults_list"
      parameters:
      - name: "aggregate"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Aggregate"
      - name: "fields"
        in: "query"
        description: "The comma separated fields included in the returned records.\n\
          If omitted, the default list of fields will be returned.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PolicyResult"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "policyresults_list"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /policyresults/{id}:
    get:
      tags:
      - "Policies"
      summary: "Get a specific Policy Result."
      description: "This endpoint will return the policy results for a specific policy.\n\
        \n##### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/policyresults/{Policy_ID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "policyresults_get"
      parameters:
      - name: "id"
        in: "path"
        description: "ObjectID of the Policy Result."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PolicyResult"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "policyresults_get"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /policytemplates:
    get:
      tags:
      - "Policytemplates"
      - "Policies"
      summary: "Lists all of the Policy Templates"
      description: "This endpoint returns all policy templates.\n\n#### Sample Request\n\
        ```\ncurl -X GET https://console.jumpcloud.com/api/v2/policytemplates \\\n\
        \  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "policytemplates_list"
      parameters:
      - name: "fields"
        in: "query"
        description: "The comma separated fields included in the returned records.\n\
          If omitted, the default list of fields will be returned.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PolicyTemplate"
        500:
          description: "Unexpected error."
          schema:
            $ref: "#/definitions/Error"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: "function (ctx, request, response) {\n  // Your javascript code\
          \ here.\n}"
        beforeScript: null
        id: "policytemplates_list"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /policytemplates/{id}:
    get:
      tags:
      - "Policytemplates"
      - "Policies"
      summary: "Get a specific Policy Template"
      description: "This endpoint returns a specific policy template.\n\n#### Sample\
        \ Request\n```\n curl -X GET https://console.jumpcloud.com/api/v2/policies/{Policy_ID}\\\
        \n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "policytemplates_get"
      parameters:
      - name: "id"
        in: "path"
        description: "ObjectID of the Policy Template."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PolicyTemplateWithDetails"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "policytemplates_get"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /providers/{provider_id}/administrators:
    get:
      tags:
      - "Providers"
      summary: "List Provider Administrators"
      description: "This endpoint returns a list of the Administrators associated\
        \ with the Provider.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/providers/{ProviderID}/administrators\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "providers_listAdministrators"
      parameters:
      - name: "provider_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProviderId"
      - name: "fields"
        in: "query"
        description: "The comma separated fields included in the returned records.\n\
          If omitted, the default list of fields will be returned.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_1"
          examples:
            application/json:
              results:
              - _id: "5c3536e9e0a6840001872782"
                email: "joe@example.com"
                enableMultiFactor: false
                firstname: ""
                lastname: ""
                registered: true
              - _id: "5c35370ae0a6840001872784"
                email: "mildred@example.com"
                enableMultiFactor: false
                firstname: ""
                lastname: ""
                registered: true
              totalCount: 2
        401:
          description: ""
          schema:
            $ref: "#/definitions/inline_response_400"
          examples:
            application/json:
              message: "Unauthorized"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "providers_listAdministrators"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    post:
      tags:
      - "Providers"
      summary: "Create a new Provider Administrator"
      description: "This endpoint allows you to create a provider administrator. You\
        \ must be associated to the provider to use this route.\n\n**Sample Request**\n\
        \n```\ncurl -X POST https://console.jumpcloud.com/api/v2/providers/{ProviderID}/administrators\
        \ \\\n    -H 'Accept: application/json' \\\n    -H 'Context-Type: application/json'\
        \ \\\n    -H 'x-api-key: {API_KEY}' \\\n    -d '{\n      \"email\":\"{ADMIN_EMAIL}\"\
        \n    }'\n```"
      operationId: "providers_postAdmins"
      parameters:
      - name: "provider_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProviderId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/ProviderAdminReq"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/Administrator"
        401:
          description: ""
          schema:
            $ref: "#/definitions/inline_response_400"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "providers_postAdmins"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    x-swagger-authorization:
    - "user"
    - "providerTenancy"
    - "noOrgHeaderSelection"
    x-swagger-grouping-strategies: []
    x-swagger-user-roles:
    - "administrator"
  /radiusservers/{radiusserver_id}/associations:
    get:
      tags:
      - "Graph"
      - "RADIUS Servers"
      summary: "List the associations of a RADIUS  Server"
      description: "This endpoint returns the _direct_ associations of a Radius Server.\n\
        \nA direct association can be a non-homogeneous relationship between 2 different\
        \ objects, for example Radius Servers and Users.\n\n#### Sample Request\n\
        ```\ncurl -X GET https://console.jumpcloud.com/api/v2/radiusservers/{RADIUS_ID}/associations?targets=user_group\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_radiusServerAssociationsList"
      parameters:
      - name: "radiusserver_id"
        in: "path"
        description: "ObjectID of the Radius Server."
        required: true
        type: "string"
        x-exportParamName: "RadiusserverId"
      - name: "targets"
        in: "query"
        description: ""
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "active_directory"
          - "application"
          - "command"
          - "g_suite"
          - "ldap_server"
          - "office_365"
          - "policy"
          - "radius_server"
          - "system"
          - "system_group"
          - "user"
          - "user_group"
        x-exportParamName: "Targets"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphConnection"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_radiusServerAssociationsList"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    post:
      tags:
      - "Graph"
      - "RADIUS Servers"
      summary: "Manage the associations of a RADIUS Server"
      description: "This endpoint allows you to manage the _direct_ associations of\
        \ a Radius Server.\n\nA direct association can be a non-homogeneous relationship\
        \ between 2 different objects, for example Radius Servers and Users.\n\n####\
        \ Sample Request\n```\ncurl -X POST https://console.jumpcloud.com/api/v2/radiusservers/{RADIUS_ID}/associations\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n\t\n\"type\":\"user\", \n\"\
        id\":\"{USER_ID}\", \n\"op\":\"add\"\n\t\n}'\n```"
      operationId: "graph_radiusServerAssociationsPost"
      parameters:
      - name: "radiusserver_id"
        in: "path"
        description: "ObjectID of the Radius Server."
        required: true
        type: "string"
        x-exportParamName: "RadiusserverId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/GraphManagementReq"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        204:
          description: "OK"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_radiusServerAssociationsPost"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    x-swagger-jumpcloud-auto-insert: true
  /radiusservers/{radiusserver_id}/usergroups:
    get:
      tags:
      - "Graph"
      - "RADIUS Servers"
      summary: "List the User Groups bound to a RADIUS  Server"
      description: "This endpoint will return all Users Groups bound to a RADIUS Server,\
        \ either directly or indirectly, essentially traversing the JumpCloud Graph\
        \ for your Organization.\n\nEach element will contain the group's type, id,\
        \ attributes and paths.\n\nThe `attributes` object is a key/value hash of\
        \ compiled graph attributes for all paths followed.\n\nThe `paths` array enumerates\
        \ each path from this RADIUS server instance to the corresponding User Group;\
        \ this array represents all grouping and/or associations that would have to\
        \ be removed to deprovision the User Group from this RADIUS server instance.\n\
        \nSee `/members` and `/associations` endpoints to manage those collections.\n\
        \n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/radiusservers/{RADIUS_ID}/usergroups\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_radiusServerTraverseUserGroup"
      parameters:
      - name: "radiusserver_id"
        in: "path"
        description: "ObjectID of the Radius Server."
        required: true
        type: "string"
        x-exportParamName: "RadiusserverId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_radiusServerTraverseUserGroup"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /radiusservers/{radiusserver_id}/users:
    get:
      tags:
      - "Graph"
      - "RADIUS Servers"
      summary: "List the Users bound to a RADIUS  Server"
      description: "This endpoint will return all Users bound to a RADIUS Server,\
        \ either directly or indirectly, essentially traversing the JumpCloud Graph\
        \ for your Organization.\n\nEach element will contain the type, id, attributes\
        \ and paths.\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this RADIUS server instance to the corresponding User; this array\
        \ represents all grouping and/or associations that would have to be removed\
        \ to deprovision the User from this RADIUS server instance.\n\nSee `/members`\
        \ and `/associations` endpoints to manage those collections.\n\n\n#### Sample\
        \ Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/ldapservers/{LDAP_ID}/users\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "graph_radiusServerTraverseUser"
      parameters:
      - name: "radiusserver_id"
        in: "path"
        description: "ObjectID of the Radius Server."
        required: true
        type: "string"
        x-exportParamName: "RadiusserverId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_radiusServerTraverseUser"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systemgroups:
    get:
      tags:
      - "System Groups"
      summary: "List all System Groups"
      description: "This endpoint returns all System Groups.\n\nAvailable filter fields:\n\
        \  - `name`\n  - `disabled`\n  - `type`\n\n#### Sample Request\n\n```\ncurl\
        \ -X GET https://console.jumpcloud.com/api/v2/systemgroups \\\n  -H 'Accept:\
        \ application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key:\
        \ {API_KEY}'\n```"
      operationId: "groups_system_list"
      parameters:
      - name: "fields"
        in: "query"
        description: "The comma separated fields included in the returned records.\n\
          If omitted, the default list of fields will be returned.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/SystemGroup"
          examples:
            application/json:
            - id: "000000"
            - type: "system_group"
            - id: "000000"
              name: "group1"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "groups_system_list"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    post:
      tags:
      - "System Groups"
      summary: "Create a new System Group"
      description: "This endpoint allows you to create a new System Group.\n\n####\
        \ Sample Request\n\n```\ncurl -X POST https://console.jumpcloud.com/api/v2/systemgroups\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n \"name\": \"{Group_Name}\"\
        \n}'\n\n```"
      operationId: "groups_system_post"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SystemGroupData"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/SystemGroup"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "groups_system_post"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systemgroups/{group_id}/associations:
    get:
      tags:
      - "Graph"
      - "System Groups"
      - "System Group Associations"
      summary: "List the associations of a System Group"
      description: "This endpoint returns the _direct_ associations of a System Group.\n\
        \nA direct association can be a non-homogeneous relationship between 2 different\
        \ objects, for example System Groups and Users.\n\n\n#### Sample Request\n\
        ```\ncurl -X GET https://console.jumpcloud.com/api/v2/systemgroups/{GroupID}/associations?targets=user\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_systemGroupAssociationsList"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the System Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "targets"
        in: "query"
        description: ""
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "active_directory"
          - "application"
          - "command"
          - "g_suite"
          - "ldap_server"
          - "office_365"
          - "policy"
          - "radius_server"
          - "user"
          - "user_group"
        x-exportParamName: "Targets"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphConnection"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_systemGroupAssociationsList"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    post:
      tags:
      - "Graph"
      - "System Groups"
      - "System Group Associations"
      summary: "Manage the associations of a System Group"
      description: "This endpoint allows you to manage the _direct_ associations of\
        \ a System Group.\n\nA direct association can be a non-homogeneous relationship\
        \ between 2 different objects, for example System Groups and Users.\n\n\n\
        #### Sample Request\n```\ncurl -X POST https://console.jumpcloud.com/api/v2/systemgroups/{GroupID}/associations\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n    \"op\": \"add\",\n    \"\
        type\": \"user\",\n    \"id\": \"{UserID}\"\n}'\n\n```"
      operationId: "graph_systemGroupAssociationsPost"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the System Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SystemGroupGraphManagementReq"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        204:
          description: "OK"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_systemGroupAssociationsPost"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    x-swagger-jumpcloud-auto-insert: true
  /systemgroups/{group_id}/commands:
    get:
      tags:
      - "Graph"
      - "System Group Associations"
      summary: "List the Commands bound to a System Group"
      description: "This endpoint will return all Commands bound to a System Group,\
        \ either directly or indirectly, essentially traversing the JumpCloud Graph\
        \ for your Organization.\n\nEach element will contain the group's type, id,\
        \ attributes and paths.\n\nThe `attributes` object is a key/value hash of\
        \ compiled graph attributes for all paths followed.\n\nThe `paths` array enumerates\
        \ each path from this System Group to the corresponding Command; this array\
        \ represents all grouping and/or associations that would have to be removed\
        \ to deprovision the Command from this System Group.\n\nSee `/members` and\
        \ `/associations` endpoints to manage those collections.\n\n#### Sample Request\n\
        ```\ncurl -X GET https://console.jumpcloud.com/api/v2/systemgroups/{GroupID}/commands\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_systemGroupTraverseCommand"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the System Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_systemGroupTraverseCommand"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systemgroups/{group_id}/memberof:
    get:
      tags:
      - "Graph"
      - "System Groups"
      - "System Group Members & Membership"
      summary: "List the System Group's parents"
      description: "This endpoint returns all System Groups a System Group is a member\
        \ of.\n\nThis endpoint is not yet public as we haven't completed the code\
        \ yet."
      operationId: "graph_systemGroupMemberOf"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the System Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_systemGroupMemberOf"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
  /systemgroups/{group_id}/members:
    get:
      tags:
      - "Graph"
      - "System Groups"
      - "System Group Members & Membership"
      summary: "List the members of a System Group"
      description: "This endpoint returns the system members of a System Group.\n\n\
        #### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/systemgroups/{Group_ID}/members\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n\n```"
      operationId: "graph_systemGroupMembersList"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the System Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphConnection"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_systemGroupMembersList"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    post:
      tags:
      - "Graph"
      - "System Groups"
      - "System Group Members & Membership"
      summary: "Manage the members of a System Group"
      description: "This endpoint allows you to manage the system members of a System\
        \ Group.\n\n#### Sample Request\n```\ncurl -X POST https://console.jumpcloud.com/api/v2/systemgroups/{Group_ID}/members\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n    \"op\": \"add\",\n    \"\
        type\": \"system\",\n    \"id\": \"{System_ID}\"\n}'\n```"
      operationId: "graph_systemGroupMembersPost"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the System Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SystemGroupMembersReq"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "Date"
        in: "header"
        description: "Current date header for the System Context API"
        required: false
        type: "string"
        x-exportParamName: "Date"
      - name: "Authorization"
        in: "header"
        description: "Authorization header for the System Context API"
        required: false
        type: "string"
        x-exportParamName: "Authorization"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        204:
          description: "OK"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_systemGroupMembersPost"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    x-swagger-jumpcloud-auto-insert: true
  /systemgroups/{group_id}/membership:
    get:
      tags:
      - "Graph"
      - "System Groups"
      - "System Group Members & Membership"
      summary: "List the System Group's membership"
      description: "This endpoint returns all Systems that are a member of this System\
        \ Group.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/systemgroups/{Group_ID/membership\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n\n```"
      operationId: "graph_systemGroupMembership"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the System Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_systemGroupMembership"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systemgroups/{group_id}/policies:
    get:
      tags:
      - "Graph"
      - "System Groups"
      - "System Group Associations"
      summary: "List the Policies bound to a System Group"
      description: "This endpoint will return all Policies bound to a System Group,\
        \ either directly or indirectly, essentially traversing the JumpCloud Graph\
        \ for your Organization.\n\nEach element will contain the type, id, attributes\
        \ and paths.\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this System Group to the corresponding Policy; this array represents\
        \ all grouping and/or associations that would have to be removed to deprovision\
        \ the Policy from this System Group.\n\nSee `/members` and `/associations`\
        \ endpoints to manage those collections.\n\nThis endpoint is not public yet\
        \ as we haven't finished the code.\n\n##### Sample Request\n```\ncurl -X GET\
        \ https://console.jumpcloud.com/api/v2/systemgroups/{GroupID}/policies \\\n\
        \  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_systemGroupTraversePolicy"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the System Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_systemGroupTraversePolicy"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systemgroups/{group_id}/usergroups:
    get:
      tags:
      - "Graph"
      - "System Groups"
      - "System Group Associations"
      summary: "List the User Groups bound to a System Group"
      description: "This endpoint will return all User Groups bound to a System Group,\
        \ either directly or indirectly, essentially traversing the JumpCloud Graph\
        \ for your Organization.\n\nEach element will contain the type, id, attributes\
        \ and paths.\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this System Group to the corresponding User Group; this array\
        \ represents all grouping and/or associations that would have to be removed\
        \ to deprovision the User Group from this System Group.\n\nSee `/members`\
        \ and `/associations` endpoints to manage those collections.\n\n#### Sample\
        \ Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/systemgroups/{GroupID}/usergroups\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n\n```"
      operationId: "graph_systemGroupTraverseUserGroup"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the System Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_systemGroupTraverseUserGroup"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systemgroups/{group_id}/users:
    get:
      tags:
      - "Graph"
      - "System Groups"
      - "System Group Associations"
      summary: "List the Users bound to a System Group"
      description: "This endpoint will return all Users bound to a System Group, either\
        \ directly or indirectly, essentially traversing the JumpCloud Graph for your\
        \ Organization.\n\nEach element will contain the type, id, attributes and\
        \ paths.\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this System Group to the corresponding User; this array represents\
        \ all grouping and/or associations that would have to be removed to deprovision\
        \ the User from this System Group.\n\nSee `/members` and `/associations` endpoints\
        \ to manage those collections.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/systemgroups/{GroupID}/users\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_systemGroupTraverseUser"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the System Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_systemGroupTraverseUser"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systemgroups/{id}:
    get:
      tags:
      - "System Groups"
      summary: "View an individual System Group details"
      description: "This endpoint returns the details of a System Group.\n\n#### Sample\
        \ Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/systemgroups/{Group_ID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "groups_system_get"
      parameters:
      - name: "id"
        in: "path"
        description: "ObjectID of the System Group."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SystemGroup"
          examples:
            application/json:
              id: "000000"
              name: "group1"
              type: "system_group"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "groups_system_get"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    put:
      tags:
      - "System Groups"
      summary: "Update a System Group"
      description: "This endpoint allows you to do a full update of the System Group.\n\
        \n#### Sample Request\n```\ncurl -X PUT https://console.jumpcloud.com/api/v2/systemgroups/{Group_ID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n \"name\": \"Name_Update\"\n\
        }'\n```"
      operationId: "groups_system_put"
      parameters:
      - name: "id"
        in: "path"
        description: "ObjectID of the System Group."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SystemGroupData"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SystemGroup"
          examples:
            application/json:
              id: "00000"
              name: "group1"
              type: "system_group"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "groups_system_put"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    delete:
      tags:
      - "System Groups"
      summary: "Delete a System Group"
      description: "This endpoint allows you to delete a System Group.\n\n#### Sample\
        \ Request\n```\ncurl -X DELETE https://console.jumpcloud.com/api/v2/systemgroups/{Group_ID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n\n```"
      operationId: "groups_system_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "ObjectID of the System Group."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        204:
          description: "No Content"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "groups_system_delete"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    patch:
      tags:
      - "System Groups"
      summary: "Partial update a System Group"
      description: "We have hidden PATCH on the systemgroups and usergroups for now;\
        \ we don't have that implemented correctly yet, people should use PUT until\
        \ we do a true PATCH operation.\n\n#### Sample Request\n```\nhttps://console.jumpcloud.com/api/v2/systemgroups/{id}\n\
        ```"
      operationId: "groups_system_patch"
      parameters:
      - name: "id"
        in: "path"
        description: "ObjectID of the System Group."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SystemGroupData"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SystemGroup"
          examples:
            application/json:
              id: "00000"
              name: "group1"
              type: "system_group"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "groups_system_patch"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
  /systeminsights/apps:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights Apps"
      description: "Valid filter fields are `system_id` and `bundle_name`."
      operationId: "systeminsights_list_apps"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-apps"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_apps"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/bitlocker_info:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights Bitlocker Info"
      description: "Valid filter fields are `system_id` and `protection_status`."
      operationId: "systeminsights_list_bitlocker_info"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-bitlocker-info"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_bitlocker_info"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/browser_plugins:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights Browser Plugins"
      description: "Valid filter fields are `system_id` and `name`."
      operationId: "systeminsights_list_browser_plugins"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-browser-plugins"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_browser_plugins"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/chrome_extensions:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights Chrome Extensions"
      description: "Valid filter fields are `system_id` and `name`."
      operationId: "systeminsights_list_chrome_extensions"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-chrome-extensions"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_chrome_extensions"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/disk_encryption:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights Disk Encryption"
      description: "Valid filter fields are `system_id` and `encryption_status`."
      operationId: "systeminsights_list_disk_encryption"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-disk-encryption"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_disk_encryption"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/disk_info:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights Disk Info"
      description: "Valid filter fields are `system_id` and `disk_index`."
      operationId: "systeminsights_list_disk_info"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-disk-info"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_disk_info"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/etc_hosts:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights Etc Hosts"
      description: "Valid filter fields are `system_id` and `address`."
      operationId: "systeminsights_list_etc_hosts"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-etc-hosts"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_etc_hosts"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/firefox_addons:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights Firefox Addons"
      description: "Valid filter fields are `system_id` and `name`."
      operationId: "systeminsights_list_firefox_addons"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-firefox-addons"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_firefox_addons"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/groups:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights Groups"
      description: "Valid filter fields are `system_id` and `groupname`."
      operationId: "systeminsights_list_groups"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-groups"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_groups"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/interface_addresses:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights Interface Addresses"
      description: "Valid filter fields are `system_id` and `address`."
      operationId: "systeminsights_list_interface_addresses"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-interface-addresses"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_interface_addresses"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/kernel_info:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights Kernel Info"
      description: "Valid filter fields are `system_id` and `version`."
      operationId: "systeminsights_list_kernel_info"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-kernel-info"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_kernel_info"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/logical_drives:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights Logical Drives"
      description: "Valid filter fields are `system_id` and `device_id`."
      operationId: "systeminsights_list_logical_drives"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-logical-drvies"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_logical_drives"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/mounts:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights Mounts"
      description: "Valid filter fields are `system_id` and `path`."
      operationId: "systeminsights_list_mounts"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-mounts"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_mounts"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/os_version:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights OS Version"
      description: "Valid filter fields are `system_id` and `version`."
      operationId: "systeminsights_list_os_version"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-os-version"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_os_version"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/patches:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights Patches"
      description: "Valid filter fields are `system_id` and `hotfix_id`."
      operationId: "systeminsights_list_patches"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-patches"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_patches"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/programs:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights Programs"
      description: "Valid filter fields are `system_id` and `name`."
      operationId: "systeminsights_list_programs"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-programs"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_programs"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/safari_extensions:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights Safari Extensions"
      description: "Valid filter fields are `system_id` and `name`."
      operationId: "systeminsights_list_safari_extensions"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-safari-extensions"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_safari_extensions"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/system_controls:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights System Control"
      description: "Valid filter fields are `system_id` and `name`."
      operationId: "systeminsights_list_system_controls"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-system-controls"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_system_controls"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/system_info:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights System Info"
      description: "Valid filter fields are `system_id` and `cpu_subtype`."
      operationId: "systeminsights_list_system_info"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-system-info"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_system_info"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/uptime:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights Uptime"
      description: "Valid filter fields are `system_id` and `days`."
      operationId: "systeminsights_list_uptime"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-uptime"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_uptime"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/users:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights Users"
      description: "Valid filter fields are `system_id` and `username`."
      operationId: "systeminsights_list_users"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-users"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_users"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/{system_id}/apps:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights System Apps"
      description: "Valid filter fields are `bundle_name`."
      operationId: "systeminsights_list_apps"
      parameters:
      - name: "system_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-apps"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_apps"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/{system_id}/bitlocker_info:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights System Bitlocker Info"
      description: "Valid filter fields are `protection_status`."
      operationId: "systeminsights_list_bitlocker_info"
      parameters:
      - name: "system_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-bitlocker-info"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_bitlocker_info"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/{system_id}/browser_plugins:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights System Browser Plugins"
      description: "Valid filter fields are `name`."
      operationId: "systeminsights_list_browser_plugins"
      parameters:
      - name: "system_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-browser-plugins"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_browser_plugins"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/{system_id}/chrome_extensions:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights System Chrome Extensions"
      description: "Valid filter fields are `name`."
      operationId: "systeminsights_list_chrome_extensions"
      parameters:
      - name: "system_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-chrome-extensions"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_chrome_extensions"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/{system_id}/disk_encryption:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights System Disk Encryption"
      description: "Valid filter fields are `encryption_status`."
      operationId: "systeminsights_list_disk_encryption"
      parameters:
      - name: "system_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-disk-encryption"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_disk_encryption"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/{system_id}/disk_info:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights System Disk Info"
      description: "Valid filter fields are `disk_index`."
      operationId: "systeminsights_list_disk_info"
      parameters:
      - name: "system_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-bitlocker-info"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_disk_info"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/{system_id}/etc_hosts:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights System Etc Hosts"
      description: "Valid filter fields are `address`."
      operationId: "systeminsights_list_etc_hosts"
      parameters:
      - name: "system_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-bitlocker-info"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_etc_hosts"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/{system_id}/firefox_addons:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights System Firefox Addons"
      description: "Valid filter fields are `name`."
      operationId: "systeminsights_list_firefox_addons"
      parameters:
      - name: "system_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-firefox-addons"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_firefox_addons"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/{system_id}/groups:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights System Groups"
      description: "Valid filter fields are `groupname`."
      operationId: "systeminsights_list_groups"
      parameters:
      - name: "system_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-groups"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_groups"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/{system_id}/interface_addresses:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights System Interface Addresses"
      description: "Valid filter fields are `address`."
      operationId: "systeminsights_list_interface_addresses"
      parameters:
      - name: "system_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-interface-addresses"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_interface_addresses"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/{system_id}/kernel_info:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights System Kernel Info"
      description: "Valid filter fields are `version`."
      operationId: "systeminsights_list_kernel_info"
      parameters:
      - name: "system_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-kernel-info"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_kernel_info"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/{system_id}/logical_drives:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights System Logical Drives"
      description: "Valid filter fields are `device_id`."
      operationId: "systeminsights_list_logical_drives"
      parameters:
      - name: "system_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-logical-drvies"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_logical_drives"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/{system_id}/mounts:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights System Mounts"
      description: "Valid filter fields are `path`."
      operationId: "systeminsights_list_mounts"
      parameters:
      - name: "system_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-mounts"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_mounts"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/{system_id}/os_version:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights System OS Version"
      description: "Valid filter fields are `version`."
      operationId: "systeminsights_list_os_version"
      parameters:
      - name: "system_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-os-version"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_os_version"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/{system_id}/patches:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights System Patches"
      description: "Valid filter fields are `hotfix_id  `."
      operationId: "systeminsights_list_patches"
      parameters:
      - name: "system_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-patches"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_patches"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/{system_id}/programs:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights System Programs"
      description: "Valid filter fields are `name`."
      operationId: "systeminsights_list_programs"
      parameters:
      - name: "system_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-programs"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_programs"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/{system_id}/safari_extensions:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights System Safari Extensions"
      description: "Valid filter fields are `name`."
      operationId: "systeminsights_list_safari_extensions"
      parameters:
      - name: "system_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-safari-extensions"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_safari_extensions"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/{system_id}/system_controls:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights System System Controls"
      description: "Valid filter fields are `name`."
      operationId: "systeminsights_list_system_controls"
      parameters:
      - name: "system_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-system-controls"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_system_controls"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/{system_id}/system_info:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights System System Info"
      description: "Valid filter fields are `cpu_subtype`."
      operationId: "systeminsights_list_system_info"
      parameters:
      - name: "system_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-system-info"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_system_info"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/{system_id}/uptime:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights System Uptime"
      description: "Valid filter fields are `days`."
      operationId: "systeminsights_list_uptime"
      parameters:
      - name: "system_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-uptime"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_uptime"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systeminsights/{system_id}/users:
    get:
      tags:
      - "System Insights"
      summary: "List System Insights System Users"
      description: "Valid filter fields are `username`."
      operationId: "systeminsights_list_users"
      parameters:
      - name: "system_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        minimum: 0
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/system-insights-users"
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systeminsights_list_users"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systems/{system_id}/associations:
    get:
      tags:
      - "Graph"
      - "Systems"
      summary: "List the associations of a System"
      description: "This endpoint returns the _direct_ associations of a System.\n\
        \nA direct association can be a non-homogeneous relationship between 2 different\
        \ objects, for example Systems and Users.\n\n\n#### Sample Request\n```\n\
        curl -X GET https://console.jumpcloud.com/api/v2/systems/{System_ID}/associations?targets=user\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n\n```"
      operationId: "graph_systemAssociationsList"
      parameters:
      - name: "system_id"
        in: "path"
        description: "ObjectID of the System."
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "Date"
        in: "header"
        description: "Current date header for the System Context API"
        required: false
        type: "string"
        x-exportParamName: "Date"
      - name: "Authorization"
        in: "header"
        description: "Authorization header for the System Context API"
        required: false
        type: "string"
        x-exportParamName: "Authorization"
      - name: "targets"
        in: "query"
        description: ""
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "active_directory"
          - "application"
          - "command"
          - "g_suite"
          - "ldap_server"
          - "office_365"
          - "policy"
          - "radius_server"
          - "user"
          - "user_group"
        x-exportParamName: "Targets"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphConnection"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_systemAssociationsList"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    post:
      tags:
      - "Graph"
      - "Systems"
      summary: "Manage associations of a System"
      description: "This endpoint allows you to manage the _direct_ associations of\
        \ a System.\n\nA direct association can be a non-homogeneous relationship\
        \ between 2 different objects, for example Systems and Users.\n\n\n#### Sample\
        \ Request\n```\ncurl -X POST https://console.jumpcloud.com/api/v2/systems/{System_ID}/associations\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n   \"attributes\": {\n    \
        \  \"sudo\": {\n         \"enabled\": true,\n         \"withoutPassword\"\
        : false\n      }\n   },\n    \"op\": \"add\",\n    \"type\": \"user\",\n \
        \   \"id\": \"UserID\"\n}'\n\n```"
      operationId: "graph_systemAssociationsPost"
      parameters:
      - name: "system_id"
        in: "path"
        description: "ObjectID of the System."
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SystemGraphManagementReq"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "Date"
        in: "header"
        description: "Current date header for the System Context API"
        required: false
        type: "string"
        x-exportParamName: "Date"
      - name: "Authorization"
        in: "header"
        description: "Authorization header for the System Context API"
        required: false
        type: "string"
        x-exportParamName: "Authorization"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        204:
          description: "OK"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_systemAssociationsPost"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    x-swagger-jumpcloud-auto-insert: true
  /systems/{system_id}/commands:
    get:
      tags:
      - "Graph"
      - "Systems"
      summary: "List the Commands bound to a System"
      description: "This endpoint will return all Commands bound to a System, either\
        \ directly or indirectly, essentially traversing the JumpCloud Graph for your\
        \ Organization.\n\nEach element will contain the type, id, attributes and\
        \ paths.\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this System to the corresponding Command; this array represents\
        \ all grouping and/or associations that would have to be removed to deprovision\
        \ the Command from this System.\n\nSee `/members` and `/associations` endpoints\
        \ to manage those collections.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/systems/{System_ID}/commands\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n\n```"
      operationId: "graph_systemTraverseCommand"
      parameters:
      - name: "system_id"
        in: "path"
        description: "ObjectID of the System."
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_systemTraverseCommand"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systems/{system_id}/fdekey:
    get:
      tags:
      - "fde"
      - "Systems"
      summary: "Get System FDE Key"
      description: "This endpoint will return the current (latest) fde key saved for\
        \ a system."
      operationId: "systems_getFDEKey"
      parameters:
      - name: "system_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/systemfdekey"
          examples:
            application/json:
              key: "cupidatat consequat occaecat proident"
        400:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        401:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        403:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        404:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        409:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        500:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "systems_getFDEKey"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systems/{system_id}/memberof:
    get:
      tags:
      - "Graph"
      - "Systems"
      summary: "List the parent Groups of a System"
      description: "This endpoint returns all the System Groups a System is a member\
        \ of.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/systems/{System_ID}/memberof\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n\n```"
      operationId: "graph_systemMemberOf"
      parameters:
      - name: "system_id"
        in: "path"
        description: "ObjectID of the System."
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "Date"
        in: "header"
        description: "Current date header for the System Context API"
        required: false
        type: "string"
        x-exportParamName: "Date"
      - name: "Authorization"
        in: "header"
        description: "Authorization header for the System Context API"
        required: false
        type: "string"
        x-exportParamName: "Authorization"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_systemMemberOf"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systems/{system_id}/policies:
    get:
      tags:
      - "Graph"
      - "Systems"
      summary: "List the Policies bound to a System"
      description: "This endpoint will return all Policies bound to a System, either\
        \ directly or indirectly, essentially traversing the JumpCloud Graph for your\
        \ Organization.\n\nEach element will contain the type, id, attributes and\
        \ paths.\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this System to the corresponding Policy; this array represents\
        \ all grouping and/or associations that would have to be removed to deprovision\
        \ the Policy from this System.\n\nSee `/members` and `/associations` endpoints\
        \ to manage those collections.\n\nThis endpoint is not yet public as we have\
        \ finish the code.\n\n##### Sample Request\n\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/{System_ID}/policies\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n\n```"
      operationId: "graph_systemTraversePolicy"
      parameters:
      - name: "system_id"
        in: "path"
        description: "ObjectID of the System."
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_systemTraversePolicy"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systems/{system_id}/policystatuses:
    get:
      tags:
      - "Graph"
      - "Policies"
      summary: "List the policy statuses for a system"
      description: "This endpoint returns the policy results for a particular system.\n\
        \n##### Sample Request\n\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/systems/{System_ID}/policystatuses\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n\n```"
      operationId: "policystatuses_list"
      parameters:
      - name: "system_id"
        in: "path"
        description: "ObjectID of the System."
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "fields"
        in: "query"
        description: "The comma separated fields included in the returned records.\n\
          If omitted, the default list of fields will be returned.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PolicyResult"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "policystatuses_list"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systems/{system_id}/usergroups:
    get:
      tags:
      - "Graph"
      - "Systems"
      summary: "List the User Groups bound to a System"
      description: "This endpoint will return all User Groups bound to a System, either\
        \ directly or indirectly essentially traversing the JumpCloud Graph for your\
        \ Organization.\n\nEach element will contain the type, id, attributes and\
        \ paths.\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this System to the corresponding User Group; this array represents\
        \ all grouping and/or associations that would have to be removed to deprovision\
        \ the User Group from this System.\n\nSee `/members` and `/associations` endpoints\
        \ to manage those collections.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/systems/{System_ID}/usergroups\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n\n```"
      operationId: "graph_systemTraverseUserGroup"
      parameters:
      - name: "system_id"
        in: "path"
        description: "ObjectID of the System."
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "Date"
        in: "header"
        description: "Current date header for the System Context API"
        required: false
        type: "string"
        x-exportParamName: "Date"
      - name: "Authorization"
        in: "header"
        description: "Authorization header for the System Context API"
        required: false
        type: "string"
        x-exportParamName: "Authorization"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_systemTraverseUserGroup"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /systems/{system_id}/users:
    get:
      tags:
      - "Graph"
      - "Systems"
      summary: "List the Users bound to a System"
      description: "This endpoint will return all Users bound to a System, either\
        \ directly or indirectly essentially traversing the JumpCloud Graph for your\
        \ Organization.\n\nEach element will contain the type, id, attributes and\
        \ paths.\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this System to the corresponding User; this array represents all\
        \ grouping and/or associations that would have to be removed to deprovision\
        \ the User from this System.\n\nSee `/members` and `/associations` endpoints\
        \ to manage those collections.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/systems/{System_ID}/users\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n\n```"
      operationId: "graph_systemTraverseUser"
      parameters:
      - name: "system_id"
        in: "path"
        description: "ObjectID of the System."
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "Date"
        in: "header"
        description: "Current date header for the System Context API"
        required: false
        type: "string"
        x-exportParamName: "Date"
      - name: "Authorization"
        in: "header"
        description: "Authorization header for the System Context API"
        required: false
        type: "string"
        x-exportParamName: "Authorization"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_systemTraverseUser"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /usergroups:
    get:
      tags:
      - "User Groups"
      summary: "List all User Groups"
      description: "This endpoint returns all User Groups.\n\nAvailable filter fields:\n\
        \  - `name`\n  - `disabled`\n  - `type`\n\n#### Sample Request\n```\ncurl\
        \ -X GET https://console.jumpcloud.com/api/v2/usergroups \\\n  -H 'Accept:\
        \ application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key:\
        \ {API_KEY}'\n```"
      operationId: "groups_user_list"
      parameters:
      - name: "fields"
        in: "query"
        description: "The comma separated fields included in the returned records.\n\
          If omitted, the default list of fields will be returned.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/UserGroup"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "groups_user_list"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    post:
      tags:
      - "User Groups"
      summary: "Create a new User Group"
      description: "This endpoint allows you to create a new User Group.\n\n#### Sample\
        \ Request\n```\ncurl -X POST https://console.jumpcloud.com/api/v2/usergroups\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n \"name\": \"{Group_Name}\"\
        \n}'\n\n```"
      operationId: "groups_user_post"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/UserGroupPost"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/UserGroup"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "groups_user_post"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /usergroups/{group_id}/activedirectories:
    get:
      tags:
      - "Graph"
      - "User Groups"
      - "User Group Associations"
      summary: "List the Active Directories bound to a User Group"
      description: "This endpoint will return all Active Directory Instances bound\
        \ to a User Group, either directly or indirectly, essentially traversing the\
        \ JumpCloud Graph for your Organization.\n\nThe `attributes` object is a key/value\
        \ hash of compiled graph attributes for all paths followed.\n\nThe `paths`\
        \ array enumerates each path from this User Group to the corresponding Active\
        \ Directory; this array represents all grouping and/or associations that would\
        \ have to be removed to deprovision the Active Directory from this User Group.\n\
        \nSee `/members` and `/associations` endpoints to manage those collections.\n\
        \n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/activedirectories\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_userGroupTraverseActiveDirectory"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the User Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userGroupTraverseActiveDirectory"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
  /usergroups/{group_id}/applications:
    get:
      tags:
      - "Graph"
      - "User Groups"
      - "User Group Associations"
      summary: "List the Applications bound to a User Group"
      description: "This endpoint will return all Applications bound to a User Group,\
        \ either directly or indirectly, essentially traversing the JumpCloud Graph\
        \ for your Organization.\n\nEach element will contain the type, id, attributes\
        \ and paths\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this User Group to the corresponding Application; this array represents\
        \ all grouping and/or associations that would have to be removed to deprovision\
        \ the Application from this User Group.\n\nSee `/members` and `/associations`\
        \ endpoints to manage those collections.\n\n#### Sample Request\n```\ncurl\
        \ -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/applications\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_userGroupTraverseApplication"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the User Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userGroupTraverseApplication"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /usergroups/{group_id}/associations:
    get:
      tags:
      - "Graph"
      - "User Groups"
      - "User Group Associations"
      summary: "List the associations of a User Group."
      description: "This endpoint returns the _direct_ associations of this User Group.\n\
        \nA direct association can be a non-homogeneous relationship between 2 different\
        \ objects, for example User Groups and Users.\n\n\n#### Sample Request\n```\n\
        curl -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/associations?targets=system\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_userGroupAssociationsList"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the User Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "targets"
        in: "query"
        description: ""
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "active_directory"
          - "application"
          - "command"
          - "g_suite"
          - "ldap_server"
          - "office_365"
          - "policy"
          - "radius_server"
          - "system"
          - "system_group"
        x-exportParamName: "Targets"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphConnection"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userGroupAssociationsList"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    post:
      tags:
      - "Graph"
      - "User Groups"
      - "User Group Associations"
      summary: "Manage the associations of a User Group"
      description: "This endpoint manages the _direct_ associations of this User Group.\n\
        \nA direct association can be a non-homogeneous relationship between 2 different\
        \ objects, for example User Groups and Users.\n\n\n#### Sample Request\n```\n\
        curl -X POST https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/associations\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n    \"op\": \"add\",\n    \"\
        type\": \"system\",\n    \"id\": \"{SystemID}\"\n}'\n\n```"
      operationId: "graph_userGroupAssociationsPost"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the User Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/UserGroupGraphManagementReq"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        204:
          description: "OK"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userGroupAssociationsPost"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    x-swagger-jumpcloud-auto-insert: true
  /usergroups/{group_id}/directories:
    get:
      tags:
      - "Graph"
      - "User Groups"
      - "User Group Associations"
      summary: "List the Directories bound to a User Group"
      description: "This endpoint will return all Directories bound to a User Group,\
        \ either directly or indirectly, essentially traversing the JumpCloud Graph\
        \ for your Organization.\n\nEach element will contain the type, id, attributes\
        \ and paths\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this User Group to the corresponding Directory; this array represents\
        \ all grouping and/or associations that would have to be removed to deprovision\
        \ the Directories from this User Group.\n\nSee `/members` and `/associations`\
        \ endpoints to manage those collections.\n\n#### Sample Request\n```\ncurl\
        \ -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/directories\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n\n```"
      operationId: "graph_userGroupTraverseDirectory"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the User Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userGroupTraverseDirectory"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /usergroups/{group_id}/gsuites:
    get:
      tags:
      - "Graph"
      - "User Groups"
      - "User Group Associations"
      summary: "List the G Suite instances bound to a User Group"
      description: "This endpoint will return all G Suite Instances bound to a User\
        \ Group, either directly or indirectly, essentially traversing the JumpCloud\
        \ Graph for your Organization.\n\nEach element will contain the type, id,\
        \ attributes and paths\n\nThe `attributes` object is a key/value hash of compiled\
        \ graph attributes for all paths followed.\n\nThe `paths` array enumerates\
        \ each path from this User Group to the corresponding G Suite instance; this\
        \ array represents all grouping and/or associations that would have to be\
        \ removed to deprovision the G Suite instance from this User Group.\n\nSee\
        \ `/members` and `/associations` endpoints to manage those collections.\n\n\
        #### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID/gsuites\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n\n```"
      operationId: "graph_userGroupTraverseGSuite"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the User Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userGroupTraverseGSuite"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /usergroups/{group_id}/ldapservers:
    get:
      tags:
      - "Graph"
      - "User Groups"
      - "User Group Associations"
      summary: "List the LDAP Servers bound to a User Group"
      description: "This endpoint will return all LDAP Servers bound to a User Group,\
        \ either directly or indirectly, essentially traversing the JumpCloud Graph\
        \ for your Organization.\n\nEach element will contain the type, id, attributes\
        \ and paths\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this User Group to the corresponding LDAP Server; this array represents\
        \ all grouping and/or associations that would have to be removed to deprovision\
        \ the LDAP Server from this User Group.\n\nSee `/members` and `/associations`\
        \ endpoints to manage those collections.\n\n#### Sample Request\n```\ncurl\
        \ -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/ldapservers\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_userGroupTraverseLdapServer"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the User Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userGroupTraverseLdapServer"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /usergroups/{group_id}/memberof:
    get:
      tags:
      - "Graph"
      - "User Groups"
      - "User Group Members & Membership"
      summary: "List the User Group's parents"
      description: "This endpoint returns all User Groups a User Group is a member\
        \ of.\n\n#### Sample Request\n```\nhttps://console.jumpcloud.com/api/v2/usergroups/{group_id}/memberof\n\
        ```\n\nNot public yet, as the code is not finished,"
      operationId: "graph_userGroupMemberOf"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the User Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userGroupMemberOf"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
  /usergroups/{group_id}/members:
    get:
      tags:
      - "Graph"
      - "User Groups"
      - "User Group Members & Membership"
      summary: "List the members of a User Group"
      description: "This endpoint returns the user members of a User Group.\n\n####\
        \ Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/members\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_userGroupMembersList"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the User Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphConnection"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userGroupMembersList"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    post:
      tags:
      - "Graph"
      - "User Groups"
      - "User Group Members & Membership"
      summary: "Manage the members of a User Group"
      description: "This endpoint allows you to manage the user members of a User\
        \ Group.\n\n#### Sample Request\n```\ncurl -X POST https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/members\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n    \"op\": \"add\",\n    \"\
        type\": \"user\",\n    \"id\": \"{User_ID}\"\n}'\n```"
      operationId: "graph_userGroupMembersPost"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the User Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/UserGroupMembersReq"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        204:
          description: "OK"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userGroupMembersPost"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    x-swagger-jumpcloud-auto-insert: true
  /usergroups/{group_id}/membership:
    get:
      tags:
      - "Graph"
      - "User Groups"
      - "User Group Members & Membership"
      summary: "List the User Group's membership"
      description: "This endpoint returns all users members that are a member of this\
        \ User Group.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/membership\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_userGroupMembership"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the User Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userGroupMembership"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /usergroups/{group_id}/office365s:
    get:
      tags:
      - "Graph"
      - "User Groups"
      - "User Group Associations"
      summary: "List the Office 365 instances bound to a User Group"
      description: "This endpoint will return all Office 365 instances bound to a\
        \ User Group, either directly or indirectly, essentially traversing the JumpCloud\
        \ Graph for your Organization.\n\nEach element will contain the type, id,\
        \ attributes and paths\n\nThe `attributes` object is a key/value hash of compiled\
        \ graph attributes for all paths followed.\n\nThe `paths` array enumerates\
        \ each path from this User Group to the corresponding Office 365 instance;\
        \ this array represents all grouping and/or associations that would have to\
        \ be removed to deprovision the Office 365 instance from this User Group.\n\
        \nSee `/members` and `/associations` endpoints to manage those collections.\n\
        \n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/office365s\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_userGroupTraverseOffice365"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the User Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userGroupTraverseOffice365"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /usergroups/{group_id}/radiusservers:
    get:
      tags:
      - "Graph"
      - "User Groups"
      - "User Group Associations"
      summary: "List the RADIUS Servers bound to a User Group"
      description: "This endpoint will return all RADIUS servers bound to a User Group,\
        \ either directly or indirectly, essentially traversing the JumpCloud Graph\
        \ for your Organization.\n\nEach element will contain the type, id, attributes\
        \ and paths\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this User Group to the corresponding RADIUS Server; this array\
        \ represents all grouping and/or associations that would have to be removed\
        \ to deprovision the RADIUS Server from this User Group.\n\nSee `/members`\
        \ and `/associations` endpoints to manage those collections.\n\n#### Sample\
        \ Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/radiusservers\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n\n```"
      operationId: "graph_userGroupTraverseRadiusServer"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the User Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userGroupTraverseRadiusServer"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /usergroups/{group_id}/systemgroups:
    get:
      tags:
      - "Graph"
      - "User Groups"
      - "User Group Associations"
      summary: "List the System Groups bound to User Groups"
      description: "This endpoint will return all System Groups bound to a User Group,\
        \ either directly or indirectly, essentially traversing the JumpCloud Graph\
        \ for your Organization.\n\nEach element will contain the type, id, attributes\
        \ and paths.\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this User Group to the corresponding System Group; this array\
        \ represents all grouping and/or associations that would have to be removed\
        \ to deprovision the System Group from this User Group.\n\nSee `/members`\
        \ and `/associations` endpoints to manage those collections.\n\n#### Sample\
        \ Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/systemgroups\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_userGroupTraverseSystemGroup"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the User Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userGroupTraverseSystemGroup"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /usergroups/{group_id}/systems:
    get:
      tags:
      - "Graph"
      - "User Groups"
      - "User Group Associations"
      summary: "List the Systems bound to a User Group"
      description: "This endpoint will return all Systems bound to a User Group, either\
        \ directly or indirectly, essentially traversing the JumpCloud Graph for your\
        \ Organization.\n\nEach element will contain the type, id, attributes and\
        \ paths\n\nThe `attributes` object is a key/value hash of compiled graph attributes\
        \ for all paths followed.\n\nThe `paths` array enumerates each path from this\
        \ User Group to the corresponding System; this array represents all grouping\
        \ and/or associations that would have to be removed to deprovision the System\
        \ from this User Group.\n\nSee `/members` and `/associations` endpoints to\
        \ manage those collections.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/systems\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_userGroupTraverseSystem"
      parameters:
      - name: "group_id"
        in: "path"
        description: "ObjectID of the User Group."
        required: true
        type: "string"
        x-exportParamName: "GroupId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userGroupTraverseSystem"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /usergroups/{id}:
    get:
      tags:
      - "User Groups"
      summary: "View an individual User Group details"
      description: "This endpoint returns the details of a User Group.\n\n#### Sample\
        \ Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "groups_user_get"
      parameters:
      - name: "id"
        in: "path"
        description: "ObjectID of the User Group."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/UserGroup"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "groups_user_get"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    put:
      tags:
      - "User Groups"
      summary: "Update a User Group"
      description: "This endpoint allows you to do a full update of the User Group.\n\
        \n#### Sample Request\n```\ncurl -X PUT https://console.jumpcloud.com/api/v2/usergroups/{Group_ID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY' \\\n  -d '{\n \"name\": \"group_update\"\n\
        }'\n\n```"
      operationId: "groups_user_put"
      parameters:
      - name: "id"
        in: "path"
        description: "ObjectID of the User Group."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/UserGroupPut"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/UserGroup"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "groups_user_put"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    delete:
      tags:
      - "User Groups"
      summary: "Delete a User Group"
      description: "This endpoint allows you to delete a User Group.\n\n#### Sample\
        \ Request\n```\ncurl -X DELETE https://console.jumpcloud.com/api/v2/usergroups/{GroupID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n\n```"
      operationId: "groups_user_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "ObjectID of the User Group."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        204:
          description: "No Content"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "groups_user_delete"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    patch:
      tags:
      - "User Groups"
      summary: "Partial update a User Group"
      description: "We have hidden PATCH on the systemgroups and usergroups for now;\
        \ we don't have that implemented correctly yet, people should use PUT until\
        \ we do a true PATCH operation.\n\n#### Sample Request\n```\nhttps://console.jumpcloud.com/api/v2/usergroups/{id}\n\
        ```"
      operationId: "groups_user_patch"
      parameters:
      - name: "id"
        in: "path"
        description: "ObjectID of the User Group."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/UserGroupPost"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/UserGroup"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "groups_user_patch"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
  /users/{user_id}/applications:
    get:
      tags:
      - "Graph"
      - "Users"
      summary: "List the Applications bound to a User"
      description: "This endpoint will return all Applications bound to a User, either\
        \ directly or indirectly, essentially traversing the JumpCloud Graph for your\
        \ Organization.\n\nEach element will contain the type, id, attributes and\
        \ paths.\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this User to the corresponding Application; this array represents\
        \ all grouping and/or associations that would have to be removed to deprovision\
        \ the Application from this User.\n\nSee `/members` and `/associations` endpoints\
        \ to manage those collections.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/users/{UserID}/applications\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_userTraverseApplication"
      parameters:
      - name: "user_id"
        in: "path"
        description: "ObjectID of the User."
        required: true
        type: "string"
        x-exportParamName: "UserId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userTraverseApplication"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /users/{user_id}/associations:
    get:
      tags:
      - "Graph"
      - "Users"
      summary: "List the associations of a User"
      description: "This endpoint returns the _direct_ associations of a User.\n\n\
        A direct association can be a non-homogeneous relationship between 2 different\
        \ objects, for example Users and Systems.\n\n\n#### Sample Request\n```\n\
        curl -X GET https://console.jumpcloud.com/api/v2/users/{UserID}/associations?targets=system_group\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n\n```"
      operationId: "graph_userAssociationsList"
      parameters:
      - name: "user_id"
        in: "path"
        description: "ObjectID of the User."
        required: true
        type: "string"
        x-exportParamName: "UserId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "targets"
        in: "query"
        description: ""
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "active_directory"
          - "application"
          - "command"
          - "g_suite"
          - "ldap_server"
          - "office_365"
          - "policy"
          - "radius_server"
          - "system"
          - "system_group"
        x-exportParamName: "Targets"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphConnection"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userAssociationsList"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    post:
      tags:
      - "Graph"
      - "Users"
      summary: "Manage the associations of a User"
      description: "This endpoint allows you to manage the _direct_ associations of\
        \ a User.\n\nA direct association can be a non-homogeneous relationship between\
        \ 2 different objects, for example Users and Systems.\n\n\n#### Sample Request\n\
        ```\ncurl -X POST https://console.jumpcloud.com/api/v2/users/{UserID}/associations\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n   \"attributes\": {\n    \
        \  \"sudo\": {\n         \"enabled\": true,\n         \"withoutPassword\"\
        : false\n      }\n   },\n   \"op\": \"add\",\n   \"type\": \"system_group\"\
        ,\n   \"id\": \"{GroupID}\"\n}'"
      operationId: "graph_userAssociationsPost"
      parameters:
      - name: "user_id"
        in: "path"
        description: "ObjectID of the User."
        required: true
        type: "string"
        x-exportParamName: "UserId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/UserGraphManagementReq"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        204:
          description: "OK"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userAssociationsPost"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    x-swagger-jumpcloud-auto-insert: true
  /users/{user_id}/directories:
    get:
      tags:
      - "Graph"
      - "Users"
      summary: "List the Directories bound to a User"
      description: "This endpoint will return all Directories bound to a User, either\
        \ directly or indirectly, essentially traversing the JumpCloud Graph for your\
        \ Organization.\n\nEach element will contain the type, id, attributes and\
        \ paths.\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this User to the corresponding Directory; this array represents\
        \ all grouping and/or associations that would have to be removed to deprovision\
        \ the Directory from this User.\n\nSee `/members` and `/associations` endpoints\
        \ to manage those collections.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/users/{UserID}/directories\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_userTraverseDirectory"
      parameters:
      - name: "user_id"
        in: "path"
        description: "ObjectID of the User."
        required: true
        type: "string"
        x-exportParamName: "UserId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userTraverseDirectory"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /users/{user_id}/emails:
    post:
      tags:
      - "Users"
      summary: "Send User Emails"
      description: "This endpoint allows you to send a specific email to a user without\
        \ waiting for or triggering a workflow."
      operationId: "users_sendEmails"
      parameters:
      - name: "user_id"
        in: "path"
        description: "ObjectID of the User."
        required: true
        type: "string"
        x-exportParamName: "UserId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/emailrequest"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        204:
          description: "OK"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "users_sendEmails"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
  /users/{user_id}/gsuites:
    get:
      tags:
      - "Graph"
      - "Users"
      summary: "List the G Suite instances bound to a User"
      description: "This endpoint will return all G-Suite Instances bound to a User,\
        \ either directly or indirectly, essentially traversing the JumpCloud Graph\
        \ for your Organization.\n\nEach element will contain the type, id, attributes\
        \ and paths.\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this User to the corresponding G Suite instance; this array represents\
        \ all grouping and/or associations that would have to be removed to deprovision\
        \ the G Suite instance from this User.\n\nSee `/members` and `/associations`\
        \ endpoints to manage those collections.\n\n#### Sample Request\n```\ncurl\
        \ -X GET https://console.jumpcloud.com/api/v2/users/{UserID}/gsuites \\\n\
        \  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_userTraverseGSuite"
      parameters:
      - name: "user_id"
        in: "path"
        description: "ObjectID of the User."
        required: true
        type: "string"
        x-exportParamName: "UserId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userTraverseGSuite"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /users/{user_id}/ldapservers:
    get:
      tags:
      - "Graph"
      - "Users"
      summary: "List the LDAP servers bound to a User"
      description: "This endpoint will return all LDAP Servers bound to a User, either\
        \ directly or indirectly, essentially traversing the JumpCloud Graph for your\
        \ Organization.\n\nEach element will contain the type, id, attributes and\
        \ paths.\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this User to the corresponding LDAP Server; this array represents\
        \ all grouping and/or associations that would have to be removed to deprovision\
        \ the LDAP Server from this User.\n\nSee `/members` and `/associations` endpoints\
        \ to manage those collections.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/users/{UserID}/ldapservers\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_userTraverseLdapServer"
      parameters:
      - name: "user_id"
        in: "path"
        description: "ObjectID of the User."
        required: true
        type: "string"
        x-exportParamName: "UserId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userTraverseLdapServer"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /users/{user_id}/memberof:
    get:
      tags:
      - "Graph"
      - "Users"
      summary: "List the parent Groups of a User"
      description: "This endpoint returns all the User Groups a User is a member of.\n\
        \n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/users/{UserID}/memberof\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_userMemberOf"
      parameters:
      - name: "user_id"
        in: "path"
        description: "ObjectID of the User."
        required: true
        type: "string"
        x-exportParamName: "UserId"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userMemberOf"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /users/{user_id}/office365s:
    get:
      tags:
      - "Graph"
      - "Users"
      summary: "List the Office 365 instances bound to a User"
      description: "This endpoint will return all Office 365 Instances bound to a\
        \ User, either directly or indirectly, essentially traversing the JumpCloud\
        \ Graph for your Organization.\n\nEach element will contain the type, id,\
        \ attributes and paths.\n\nThe `attributes` object is a key/value hash of\
        \ compiled graph attributes for all paths followed.\n\nThe `paths` array enumerates\
        \ each path from this User to the corresponding Office 365 instance; this\
        \ array represents all grouping and/or associations that would have to be\
        \ removed to deprovision the Office 365 instance from this User.\n\nSee `/members`\
        \ and `/associations` endpoints to manage those collections.\n\n#### Sample\
        \ Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/users/{UserID}/office365s\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_userTraverseOffice365"
      parameters:
      - name: "user_id"
        in: "path"
        description: "ObjectID of the User."
        required: true
        type: "string"
        x-exportParamName: "UserId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userTraverseOffice365"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /users/{user_id}/radiusservers:
    get:
      tags:
      - "Graph"
      - "Users"
      summary: "List the RADIUS Servers bound to a User"
      description: "This endpoint will return all RADIUS Servers bound to a User,\
        \ either directly or indirectly, essentially traversing the JumpCloud Graph\
        \ for your Organization.\n\nEach element will contain the type, id, attributes\
        \ and paths.\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this User to the corresponding RADIUS Server; this array represents\
        \ all grouping and/or associations that would have to be removed to deprovision\
        \ the RADIUS Server from this User.\n\nSee `/members` and `/associations`\
        \ endpoints to manage those collections.\n\n#### Sample Request\n```\ncurl\
        \ -X GET https://console.jumpcloud.com/api/v2/users/{UserID}/radiusservers\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_userTraverseRadiusServer"
      parameters:
      - name: "user_id"
        in: "path"
        description: "ObjectID of the User."
        required: true
        type: "string"
        x-exportParamName: "UserId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userTraverseRadiusServer"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /users/{user_id}/systemgroups:
    get:
      tags:
      - "Graph"
      - "Users"
      summary: "List the System Groups bound to a User"
      description: "This endpoint will return all System Groups bound to a User, either\
        \ directly or indirectly, essentially traversing the JumpCloud Graph for your\
        \ Organization.\n\nEach element will contain the type, id, attributes and\
        \ paths.\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this User to the corresponding System Group; this array represents\
        \ all grouping and/or associations that would have to be removed to deprovision\
        \ the System Group from this User.\n\nSee `/members` and `/associations` endpoints\
        \ to manage those collections.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/users/{UserID}/systemgroups\\\
        \n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_userTraverseSystemGroup"
      parameters:
      - name: "user_id"
        in: "path"
        description: "ObjectID of the User."
        required: true
        type: "string"
        x-exportParamName: "UserId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userTraverseSystemGroup"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /users/{user_id}/systems:
    get:
      tags:
      - "Graph"
      - "Users"
      summary: "List the Systems bound to a User"
      description: "This endpoint will return all Systems bound to a User, either\
        \ directly or indirectly, essentially traversing the JumpCloud Graph for your\
        \ Organization.\n\nEach element will contain the type, id, attributes and\
        \ paths.\n\nThe `attributes` object is a key/value hash of compiled graph\
        \ attributes for all paths followed.\n\nThe `paths` array enumerates each\
        \ path from this User to the corresponding System; this array represents all\
        \ grouping and/or associations that would have to be removed to deprovision\
        \ the System from this User.\n\nSee `/members` and `/associations` endpoints\
        \ to manage those collections.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/users/{UserID}/systems\\\
        \n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "graph_userTraverseSystem"
      parameters:
      - name: "user_id"
        in: "path"
        description: "ObjectID of the User."
        required: true
        type: "string"
        x-exportParamName: "UserId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GraphObjectWithPaths"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "graph_userTraverseSystem"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /workdays:
    get:
      tags:
      - "Workday Import"
      summary: "List Workdays"
      description: "This endpoint will return  all the available information about\
        \ all your instances of Workday.\n\n##### Sample Request\n```\ncurl -X GET\
        \ https://console.jumpcloud.com/api/v2/workdays/ \\\n  -H 'Accept: application/json'\
        \ \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n\
        \  ```"
      operationId: "workdays_list"
      parameters:
      - name: "fields"
        in: "query"
        description: "The comma separated fields included in the returned records.\n\
          If omitted, the default list of fields will be returned.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Fields"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      - name: "filter"
        in: "query"
        description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
          \ in"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Filter"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/workday-output"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "workdays_list"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    post:
      tags:
      - "Workday Import"
      summary: "Create new Workday"
      description: "This endpoint allows you to create a new workday instance.\n\n\
        You must supply a username and password for `Basic Authentication` that is\
        \ the same as your WorkDay Integrator System User.  Failure to provide these\
        \ credentials  will result in the request being rejected.\n\nCurrently `O-Auth`\
        \ isn't a supported authentication protocol for WorkDay, but will be in the\
        \ future.\n\nCurrently, only one instance is allowed and it must be `Workday\
        \ Import`.\n\n#### Sample Request\n```\ncurl -X POST https://console.jumpcloud.com/api/v2/workdays/\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n  \"name\": \"Workday2\",\n\
        \  \"reportUrl\":\"https://workday.com/ccx/service/customreport2/gms/user/reportname?format=json\"\
        ,\n  \"auth\": {\n    \"basic\": {\n      \"username\": \"someDeveloper\"\
        ,\n      \"password\": \"notTheRealPassword\"\n    }\n  }\n}'\n```"
      operationId: "workdays_post"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/workday-input"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
        201:
          description: ""
          schema:
            $ref: "#/definitions/workday-output"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "workdays_post"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /workdays/settings:
    get:
      tags:
      - "Workday Import"
      summary: "Get Workday Settings (incomplete)"
      description: "This endpoint allows you to obtain all settings needed for creating\
        \ a workday instance, specifically the URL to initiate Basic Authentication\
        \ with WorkDay.\n\n**This functionality is currently not enable for users.**"
      operationId: "workdays_settings"
      parameters:
      - name: "state"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "State"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "workdays_settings"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
  /workdays/{id}:
    get:
      tags:
      - "Workday Import"
      summary: "Get Workday"
      description: "This endpoint will return  all the available information about\
        \ an instance of Workday.\n\n#### Sample Request\n\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/workdays/\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "workdays_get"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/workday-output"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "workdays_get"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    put:
      tags:
      - "Workday Import"
      summary: "Update Workday"
      description: "This endpoint allows you to update the name and Custom Report\
        \ URL for a Workday Instance.\n\nCurrently, the name can not be changed from\
        \ the default of `Workday Import`.\n\n##### Sample Request\n```\ncurl -X PUT\
        \ https://console.jumpcloud.com/api/v2/workdays/{WorkdayID} \\\n  -H 'Accept:\
        \ application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key:\
        \ {API_KEY}' \\\n  -d '{\n\t\"reportUrl\":\"{Report_URL}\",\n\t\"name\":\"\
        {Name}\"\n}\t'\n```"
      operationId: "workdays_put"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/workday-fields"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/workday-output"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "workdays_put"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    delete:
      tags:
      - "Workday Import"
      summary: "Delete Workday"
      description: "This endpoint allows you to delete an instance of Workday.\n\n\
        **This functionality is currently not enable for users.**"
      operationId: "workdays_delete"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        204:
          description: ""
          schema:
            type: "object"
            properties: {}
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "workdays_delete"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: false
  /workdays/{id}/import/{job_id}/results:
    get:
      tags:
      - "Workday Import"
      summary: "List Import Results"
      description: "This endpoint provides a list of job results from the workday\
        \ import and will contain all imported data from Workday.\n\n#### Sample Request\n\
        ```\ncurl -X GET https://console.jumpcloud.com/api/v2/workdays/{WorkdayID}/import/{ImportJobID}/results\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "workdays_importresults"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "job_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/job-workresult"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "workdays_importresults"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /workdays/{workday_id}/auth:
    post:
      tags:
      - "Workday Import"
      summary: "Authorize Workday"
      description: "This endpoint adds an authorization method to a workday instance.\n\
        \nYou must supply a username and password for `Basic Authentication` that\
        \ is the same as your WorkDay Integrator System User.  Failure to provide\
        \ these credentials  will result in the request being rejected.\n\nCurrently\
        \ `O-Auth` isn't a supported authentication protocol for WorkDay, but will\
        \ be in the future.\n\n#### Sample Request\n\n```\ncurl -X POST https://console.jumpcloud.com/api/v2/workdays/{WorkDayID}/auth\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n\t\"auth\":{\n\t  \"basic\"\
        : {\n\t\t\"username\": \"someDeveloper\",\t  \n\t\t\"password\": \"notTheRealPassword\"\
        \n\n\t  }\n\t}\n}'\n\n```"
      operationId: "workdays_authorize"
      parameters:
      - name: "workday_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "WorkdayId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/auth-input-object"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        204:
          description: ""
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "workdays_authorize"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
    delete:
      tags:
      - "Workday Import"
      summary: "Deauthorize Workday"
      description: "Removes any and all authorization methods from the workday instance\n\
        \n##### Sample Request\n```\ncurl -X DELETE https://console.jumpcloud.com/api/v2/workdays/{WorkDayID}/auth\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "workdays_deauthorize"
      parameters:
      - name: "workday_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "WorkdayId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        204:
          description: ""
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "workdays_deauthorize"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /workdays/{workday_id}/import:
    post:
      tags:
      - "Workday Import"
      summary: "Workday Import"
      description: "The endpoint allows you to create a Workday Import request.\n\n\
        #### Sample Request \n```\ncurl -X POST https://console.jumpcloud.com/api/v2/workdays/{WorkdayID}/import\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '[\n\t{\n\t\t\"email\":\"{email}\"\
        ,\n\t\t\"firstname\":\"{firstname}\",\n\t\t\"lastname\":\"{firstname}\",\n\
        \t\t\"username\":\"{username}\",\n\t\t\"attributes\":[\n\t\t\t{\"name\":\"\
        EmployeeID\",\"value\":\"0000\"},\n\t\t\t{\"name\":\"WorkdayID\",\"value\"\
        :\"name.name\"}\n\t\t\t]\n\t\t\n\t}\n]\n```"
      operationId: "workdays_import"
      parameters:
      - name: "workday_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "WorkdayId"
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "array"
          items:
            $ref: "#/definitions/bulk-user-create"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        201:
          description: ""
          schema:
            $ref: "#/definitions/job-id"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "workdays_import"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
  /workdays/{workday_id}/workers:
    get:
      tags:
      - "Workday Import"
      summary: "List Workday Workers"
      description: "This endpoint will return all of the data in your WorkDay Custom\
        \ Report that has been associated with your WorkDay Instance in JumpCloud.\n\
        \n##### Sample Request\n\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/workdays/{WorkDayID}/workers\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n\n\n```"
      operationId: "workdays_workers"
      parameters:
      - name: "workday_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "WorkdayId"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "Sort"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/workday-worker"
          examples:
            application/json:
            - lastName: "sint dolore Excepteur ad"
            - attributes: {}
              email: "nostrud tempor anim ips"
              firstName: "et ad"
              username: "Excepteur culpa nulla aliqua"
            - attributes: {}
              email: "veniam ullamco"
            - {}
            - lastName: "do"
      security:
      - x-api-key: []
      x-stoplight:
        afterScript: null
        beforeScript: null
        id: "workdays_workers"
        mock:
          dynamic: false
          enabled: false
          statusCode: 200
        public: true
securityDefinitions:
  x-api-key:
    type: "apiKey"
    name: "x-api-key"
    in: "header"
definitions:
  Administrator:
    type: "object"
    properties:
      email:
        type: "string"
      enableMultiFactor:
        type: "boolean"
      firstname:
        type: "string"
      id:
        type: "string"
      lastname:
        type: "string"
      registered:
        type: "boolean"
    title: "Administrator"
    example:
      email: "joe@example.com"
      enableMultiFactor: true
      firstname: "Joe"
      id: "0123456789abcdef01234567"
      lastname: "Blough"
      registered: false
    x-stoplight:
      id: "Administrator"
      name: "Administrator"
      public: true
  Directory:
    type: "object"
    required:
    - "id"
    - "name"
    - "type"
    properties:
      id:
        type: "string"
        description: "The ObjectID of the directory."
      name:
        type: "string"
        description: "The name of the directory."
      type:
        type: "string"
        description: "The type of directory."
        enum:
        - "g_suite"
        - "ldap_server"
        - "office_365"
        - "workday"
    title: "Directory"
    example:
      name: "name"
      id: "id"
      type: "g_suite"
    x-stoplight:
      id: "Directory"
      name: "Directory"
      public: true
  DuoAccount:
    type: "object"
    required:
    - "id"
    - "registrationApplication"
    properties:
      id:
        type: "string"
        description: "object ID"
      name:
        type: "string"
        description: "Duo application name."
      registrationApplication:
        $ref: "#/definitions/DuoRegistrationApplication"
    title: "DuoAccount"
    example:
      name: "name"
      id: "id"
      registrationApplication:
        secretKey: "secretKey"
        apiHost: "apiHost"
        integrationKey: "integrationKey"
    x-stoplight:
      id: "DuoAccount"
      name: "DuoAccount"
      public: true
  DuoApplication:
    type: "object"
    required:
    - "apiHost"
    - "id"
    - "integrationKey"
    - "name"
    - "secretKey"
    properties:
      apiHost:
        type: "string"
      id:
        type: "string"
      integrationKey:
        type: "string"
      name:
        type: "string"
      secretKey:
        type: "string"
    title: "DuoApplication"
    example:
      secretKey: "secretKey"
      apiHost: "apiHost"
      name: "name"
      id: "id"
      integrationKey: "integrationKey"
    x-stoplight:
      id: "DuoApplication"
      name: "DuoApplication"
      public: true
  DuoApplicationReq:
    type: "object"
    required:
    - "apiHost"
    - "integrationKey"
    - "name"
    - "secretKey"
    properties:
      apiHost:
        type: "string"
      integrationKey:
        type: "string"
      name:
        type: "string"
      secretKey:
        type: "string"
    title: "DuoApplicationReq"
    example:
      secretKey: "secretKey"
      apiHost: "apiHost"
      name: "name"
      integrationKey: "integrationKey"
    x-stoplight:
      id: "DuoApplicationReq"
      name: "DuoApplicationReq"
      public: true
  DuoRegistrationApplication:
    type: "object"
    required:
    - "apiHost"
    - "integrationKey"
    - "secretKey"
    properties:
      apiHost:
        type: "string"
        description: "Duo Application host name."
      integrationKey:
        type: "string"
        description: "Duo Application integration key."
      secretKey:
        type: "string"
        description: "Duo Application secret key."
    title: "DuoRegistrationApplication"
    example:
      secretKey: "secretKey"
      apiHost: "apiHost"
      integrationKey: "integrationKey"
    x-stoplight:
      id: "DuoRegistrationApplication"
      name: "DuoRegistrationApplication"
      public: true
  DuoRegistrationApplicationReq:
    type: "object"
    required:
    - "registrationApplication"
    properties:
      registrationApplication:
        $ref: "#/definitions/DuoRegistrationApplication"
    title: "DuoRegistrationApplicationReq"
    example:
      registrationApplication:
        secretKey: "secretKey"
        apiHost: "apiHost"
        integrationKey: "integrationKey"
    x-stoplight:
      id: "DuoRegistrationApplicationReq"
      name: "DuoRegistrationApplicationReq"
      public: true
  Error:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      fields:
        type: "string"
      message:
        type: "string"
    title: "Error"
    x-stoplight:
      id: "Error"
      name: "Error"
      public: true
  GSuiteBuiltinTranslation:
    type: "string"
    title: "G Suite BuiltIn Translation"
    description: "Built-in translations for G Suite export:\n* `user_home_addresses`\
      \ - Translate all JumpCloud user addresses of type `home` to G Suite Directory\
      \ user addresses of type `home`\n* `user_work_addresses` - Translate all JumpCloud\
      \ user addresses of type `work` to G Suite Directory user addresses of type\
      \ `work`\n* `user_other_addresses` - Translate all JumpCloud user addresses\
      \ of type `other` to G Suite Directory user addresses of type `other`\n* `user_home_phone_numbers`\
      \ - Translate all JumpCloud user phoneNumbers of type `home` to G Suite Directory\
      \ user phones of type `home`\n* `user_mobile_phone_numbers` - Translate all\
      \ JumpCloud user phoneNumbers of type `mobile` to G Suite Directory user phones\
      \ of type `mobile`\n* `user_other_phone_numbers` - Translate all JumpCloud user\
      \ phoneNumbers of type `other` to G Suite Directory user phones of type `other`\n\
      * `user_work_phone_numbers` - Translate all JumpCloud user phoneNumbers of type\
      \ `work` to G Suite Directory user phones of type `work`\n* `user_work_fax_phone_numbers`\
      \ - Translate all JumpCloud user phoneNumbers of type `work_fax` to G Suite\
      \ Directory user phones of type `work_fax`\n* `user_work_mobile_phone_numbers`\
      \ - Translate all JumpCloud user phoneNumbers of type `work_mobile` to G Suite\
      \ Directory user phones of type `work_mobile`\n* `user_primary_organization_cost_center`\
      \ - Translate JumpCloud user  `costCenter` to G Suite Directory user `costCenter`\
      \ for `primary` organization\n* `user_primary_organization_department` - Translate\
      \ JumpCloud user  `department` to G Suite Directory user `department` for `primary`\
      \ organization\n* `user_primary_organization_description` - Translate JumpCloud\
      \ user  `employeeType` to G Suite Directory user `description` for `primary`\
      \ organization\n* `user_primary_organization_employee_id` - Translate JumpCloud\
      \ user  `employeeIdentifier` to G Suite Directory user `externalIds` element\
      \ of type `organization`\n* `user_primary_organization_title` - Translate JumpCloud\
      \ user  `jobTitle` to G Suite Directory user `title` for `primary` organization\n"
    enum:
    - "user_home_addresses"
    - "user_work_addresses"
    - "user_other_addresses"
    - "user_home_phone_numbers"
    - "user_mobile_phone_numbers"
    - "user_other_phone_numbers"
    - "user_work_phone_numbers"
    - "user_work_fax_phone_numbers"
    - "user_work_mobile_phone_numbers"
    - "user_primary_organization_cost_center"
    - "user_primary_organization_department"
    - "user_primary_organization_description"
    - "user_primary_organization_employee_id"
    - "user_primary_organization_title"
    x-stoplight:
      id: "GSuiteBuiltinTranslation"
      name: "G Suite BuiltIn Translation"
      public: true
  GSuiteTranslationRule:
    type: "object"
    properties:
      builtIn:
        $ref: "#/definitions/GSuiteBuiltinTranslation"
      id:
        type: "string"
        description: "ObjectId uniquely identifying a Translation Rule."
    title: "G Suite Translation Rule"
    example:
      builtIn: {}
      id: "id"
    x-stoplight:
      id: "GSuiteTranslationRule"
      name: "G Suite Translation Rule"
      public: true
  GSuiteTranslationRuleRequest:
    type: "object"
    properties:
      builtIn:
        $ref: "#/definitions/GSuiteBuiltinTranslation"
    title: "G Suite Translation Rule Request"
    example:
      builtIn: "user_home_addresses"
    x-stoplight:
      id: "GSuiteTranslationRuleRequest"
      name: "G Suite Translation Rule Request"
      public: true
  GraphConnection:
    type: "object"
    required:
    - "to"
    properties:
      from:
        $ref: "#/definitions/GraphObject"
      to:
        $ref: "#/definitions/GraphObject"
    title: "GraphConnection"
    description: "Represents an edge between two graph objects. From can be omitted\
      \ if it is clear from context."
    example:
      from:
        id: "id"
        type: "type"
      to:
        id: "id"
        type: "type"
    x-stoplight:
      id: "GraphConnection"
      name: "GraphConnection"
      public: true
  GraphManagementReq:
    type: "object"
    required:
    - "id"
    - "op"
    - "type"
    properties:
      id:
        type: "string"
        description: "The ObjectID of graph object being added or removed as an association."
      op:
        type: "string"
        description: "How to modify the graph connection."
        enum:
        - "add"
        - "remove"
        - "update"
      type:
        $ref: "#/definitions/GraphType"
    title: "GraphManagementReq"
    example:
      op: "add"
      id: "id"
      type: {}
    x-stoplight:
      id: "GraphManagementReq"
      name: "GraphManagementReq"
      public: true
  GraphObject:
    type: "object"
    required:
    - "id"
    - "type"
    properties:
      id:
        type: "string"
        description: "The ObjectID of the graph object."
      type:
        type: "string"
        description: "The type of graph object."
    title: "GraphObject"
    example:
      id: "id"
      type: "type"
    x-stoplight:
      id: "GraphObject"
      name: "GraphObject"
      public: true
  GraphObjectWithPaths:
    type: "object"
    required:
    - "id"
    - "paths"
    - "type"
    properties:
      id:
        type: "string"
        description: "Object ID of this graph object."
      paths:
        type: "array"
        description: "A path through the graph between two graph objects."
        items:
          type: "array"
          items:
            $ref: "#/definitions/GraphConnection"
      type:
        $ref: "#/definitions/GraphType"
    title: "GraphObjectWithPaths"
    example:
      paths:
      - - from:
            id: "id"
            type: "type"
          to:
            id: "id"
            type: "type"
        - from:
            id: "id"
            type: "type"
          to:
            id: "id"
            type: "type"
      - - from:
            id: "id"
            type: "type"
          to:
            id: "id"
            type: "type"
        - from:
            id: "id"
            type: "type"
          to:
            id: "id"
            type: "type"
      id: "id"
      type: {}
    x-stoplight:
      id: "GraphObjectWithPaths"
      name: "GraphObjectWithPaths"
      public: true
  GraphType:
    type: "string"
    title: "GraphType"
    description: "The graph type."
    enum:
    - "active_directory"
    - "application"
    - "command"
    - "g_suite"
    - "ldap_server"
    - "office_365"
    - "policy"
    - "radius_server"
    - "system"
    - "system_group"
    - "user"
    - "user_group"
    x-stoplight:
      id: "GraphType"
      name: "GraphType"
      public: true
  Group:
    type: "object"
    properties:
      id:
        type: "string"
        description: "ObjectId uniquely identifying a Group."
      name:
        type: "string"
        description: "Display name of a Group."
      type:
        $ref: "#/definitions/GroupType"
    title: "Group"
    example:
      name: "name"
      id: "id"
      type: {}
    x-stoplight:
      id: "Group"
      name: "Group"
      public: true
  GroupType:
    type: "string"
    title: "GroupType"
    description: "The group type."
    enum:
    - "system_group"
    - "user_group"
    x-stoplight:
      id: "GroupType"
      name: "GroupType"
      public: true
  LdapServerAction:
    type: "string"
    title: "LDAP Server Action"
    enum:
    - "disable"
    - "remove"
    x-stoplight:
      id: "LdapServerAction"
      name: "LDAP Server Action"
      public: true
  Office365BuiltinTranslation:
    type: "string"
    title: "Office 365 BuiltIn Translation"
    description: "Built-in translations for Office 365 (Microsoft Graph) export:\n\
      * `user_street_address` - Translate `streetAddress` field of JumpCloud user\
      \ address of type `work` to `city` field of Microsoft Graph user\n* `user_city`\
      \ - Translate `locality` field of JumpCloud user address of type `work` to `city`\
      \ field of Microsoft Graph user\n* `user_state` - Translate `region` field of\
      \ JumpCloud user address of type `work` to `state` field of Microsoft Graph\
      \ `user` \n* `user_country` - Translate `country` field of JumpCloud user address\
      \ of type `work` to `country` field of Microsoft Graph `user` \n* `user_postal_code`\
      \ - Translate `postalCode` field of JumpCloud user address of type `work` to\
      \ `postalCode` field of Microsoft Graph `user` \n* `user_business_phones` -\
      \ Translate `number` field of first JumpCloud user `phoneNumber` of type `work`\
      \ to `businessPhones` field of Microsoft Graph `user` \n* `user_mobile_phone`\
      \ - Translate `number` field of first JumpCloud user `phoneNumber` of type `mobile`\
      \ to `mobilePhone` field of Microsoft Graph `user` \n* `user_department` - Translate\
      \ `department` field of JumpCloud user to `department` field of Microsoft Graph\
      \ `user` \n* `user_job_title` - Translate `jobTitle` field of JumpCloud user\
      \ to `jobTitle` field of Microsoft Graph `user` \n* `user_office_location` -\
      \ Translate `location` field of JumpCloud user to `officeLocation` field of\
      \ Microsoft Graph `user` "
    enum:
    - "user_street_address"
    - "user_city"
    - "user_state"
    - "user_country"
    - "user_postal_code"
    - "user_business_phones"
    - "user_mobile_phone"
    - "user_department"
    - "user_job_title"
    - "user_office_location"
    x-stoplight:
      id: "Office365BuiltinTranslation"
      name: "Office 365 BuiltIn Translation"
      public: true
  Office365TranslationRule:
    type: "object"
    properties:
      builtIn:
        $ref: "#/definitions/Office365BuiltinTranslation"
      id:
        type: "string"
        description: "ObjectId uniquely identifying a Translation Rule."
    title: "Office 365 Translation Rule"
    example:
      builtIn: {}
      id: "id"
    x-stoplight:
      id: "Office365TranslationRule"
      name: "Office 365 Translation Rule"
      public: true
  Office365TranslationRuleRequest:
    type: "object"
    properties:
      builtIn:
        $ref: "#/definitions/Office365BuiltinTranslation"
    title: "Office 365 Translation Rule Request"
    example:
      builtIn: "user_department"
    x-stoplight:
      id: "Office365TranslationRuleRequest"
      name: "Office 365 Translation Rule Request"
      public: true
  Policy:
    type: "object"
    properties:
      id:
        type: "string"
        description: "ObjectId uniquely identifying a Policy."
      name:
        type: "string"
        description: "The description for this specific Policy."
      template:
        $ref: "#/definitions/PolicyTemplate"
    title: "Policy"
    description: "An instance of a policy template."
    example:
      template:
        displayName: "displayName"
        osMetaFamily: "linux"
        name: "name"
        description: "description"
        id: "id"
        state: "state"
        activation: "activation"
        behavior: "behavior"
      name: "name"
      id: "id"
    x-stoplight:
      id: "Policy"
      name: "Policy"
      public: true
  PolicyRequest:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "The description for this specific Policy."
      template:
        $ref: "#/definitions/PolicyRequest_template"
      values:
        type: "array"
        items:
          $ref: "#/definitions/PolicyValue"
    title: "PolicyRequest"
    description: "An instance of a policy template."
    example:
      template:
        id: "id"
      values:
      - configFieldID: "configFieldID"
      - configFieldID: "configFieldID"
      name: "name"
    x-stoplight:
      id: "PolicyRequest"
      name: "PolicyRequest"
      public: true
  PolicyResult:
    type: "object"
    properties:
      detail:
        type: "string"
        description: "Details pertaining to the policy result."
      endedAt:
        type: "string"
        format: "date-time"
        description: "The end of the policy application."
      exitStatus:
        type: "integer"
        description: "The 32-bit unsigned exit status from the applying the policy."
      id:
        type: "string"
        description: "ObjectId uniquely identifying a Policy Result."
      policyID:
        type: "string"
        description: "ObjectId uniquely identifying the parent Policy."
      startedAt:
        type: "string"
        format: "date-time"
        description: "The start of the policy application."
      state:
        type: "string"
        description: "Enumeration describing the state of the policy. Success, failed,\
          \ or pending."
      stdErr:
        type: "string"
        description: "The STDERR output from applying the policy."
      stdOut:
        type: "string"
        description: "The STDOUT output from applying the policy."
      success:
        type: "boolean"
        description: "True if the policy was successfully applied; false otherwise."
      systemID:
        type: "string"
        description: "ObjectId uniquely identifying the parent System."
    title: "PolicyResult"
    example:
      systemID: "systemID"
      policyID: "policyID"
      stdOut: "stdOut"
      endedAt: "2000-01-23T04:56:07.000+00:00"
      success: true
      startedAt: "2000-01-23T04:56:07.000+00:00"
      detail: "detail"
      id: "id"
      state: "state"
      stdErr: "stdErr"
      exitStatus: 0
    x-stoplight:
      id: "PolicyResult"
      name: "PolicyResult"
      public: true
  PolicyTemplate:
    type: "object"
    properties:
      activation:
        type: "string"
        description: "Requirements before the policy can be activated."
      behavior:
        type: "string"
        description: "Specifics about the behavior of the policy."
      description:
        type: "string"
        description: "The default description for the Policy."
      displayName:
        type: "string"
        description: "The default display name for the Policy."
      id:
        type: "string"
        description: "ObjectId uniquely identifying a Policy Template."
      name:
        type: "string"
        description: "The unique name for the Policy Template."
      osMetaFamily:
        type: "string"
        enum:
        - "linux"
        - "darwin"
        - "windows"
      state:
        type: "string"
        description: "String describing the release status of the policy template."
        default: ""
    title: "PolicyTemplate"
    description: "The shallow information about a Policy Template."
    example:
      displayName: "displayName"
      osMetaFamily: "linux"
      name: "name"
      description: "description"
      id: "id"
      state: "state"
      activation: "activation"
      behavior: "behavior"
    x-stoplight:
      id: "PolicyTemplate"
      name: "PolicyTemplate"
      public: true
  PolicyTemplateConfigField:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      displayType:
        type: "string"
        description: "The default rendering for this field."
        enum:
        - "checkbox"
        - "date"
        - "email"
        - "number"
        - "select"
        - "text"
        - "textarea"
      id:
        type: "string"
        description: "ObjectId uniquely identifying a Policy Template Configuration\
          \ Field"
      label:
        type: "string"
        description: "The default label for this field."
      name:
        type: "string"
        description: "A unique name identifying this config field."
      position:
        type: "number"
        description: "The default position to render this field."
      readOnly:
        type: "boolean"
        description: "If an admin is allowed to modify this field."
      required:
        type: "boolean"
        description: "If this field is required for this field."
      tooltip:
        $ref: "#/definitions/PolicyTemplateConfigField_tooltip"
    title: "PolicyTemplateConfigField"
    example:
      displayType: "checkbox"
      name: "name"
      tooltip:
        template: "template"
        variables:
          icon: "icon"
          message: "message"
      readOnly: true
      id: "id"
      label: "label"
      position: 0.80082819046101150206595775671303272247314453125
      required: true
    x-stoplight:
      id: "PolicyTemplateConfigField"
      name: "PolicyTemplateConfigField"
      public: true
  PolicyTemplateWithDetails:
    type: "object"
    properties:
      activation:
        type: "string"
        description: "Requirements before the policy can be activated."
      behavior:
        type: "string"
        description: "Specifics about the behavior of the policy."
      configFields:
        type: "array"
        description: "An unordered list of all the fields that can be configured for\
          \ this Policy Template."
        items:
          $ref: "#/definitions/PolicyTemplateConfigField"
      description:
        type: "string"
        description: "The default description for the Policy."
      displayName:
        type: "string"
        description: "The default display name for the Policy."
      id:
        type: "string"
        description: "ObjectId uniquely identifying a Policy Template."
      name:
        type: "string"
        description: "The unique name for the Policy Template."
      osMetaFamily:
        type: "string"
        enum:
        - "linux"
        - "darwin"
        - "windows"
    title: "PolicyTemplateWithDetails"
    description: "The shallow information about a Policy Template."
    example:
      displayName: "displayName"
      osMetaFamily: "linux"
      name: "name"
      description: "description"
      id: "id"
      activation: "activation"
      behavior: "behavior"
      configFields:
      - displayType: "checkbox"
        name: "name"
        tooltip:
          template: "template"
          variables:
            icon: "icon"
            message: "message"
        readOnly: true
        id: "id"
        label: "label"
        position: 0.80082819046101150206595775671303272247314453125
        required: true
      - displayType: "checkbox"
        name: "name"
        tooltip:
          template: "template"
          variables:
            icon: "icon"
            message: "message"
        readOnly: true
        id: "id"
        label: "label"
        position: 0.80082819046101150206595775671303272247314453125
        required: true
    x-stoplight:
      id: "PolicyTemplateWithDetails"
      name: "PolicyTemplateWithDetails"
      public: true
  PolicyValue:
    type: "object"
    properties:
      configFieldID:
        type: "string"
        description: "The ObjectId of the corresponding Policy Template configuration\
          \ field."
    title: "PolicyValue"
    example:
      configFieldID: "configFieldID"
    x-stoplight:
      id: "PolicyValue"
      name: "PolicyValue"
      public: true
  PolicyWithDetails:
    type: "object"
    properties:
      configFields:
        type: "array"
        items:
          $ref: "#/definitions/PolicyTemplateConfigField"
      id:
        type: "string"
        description: "ObjectId uniquely identifying a Policy."
      name:
        type: "string"
        description: "The description for this specific Policy."
      template:
        $ref: "#/definitions/PolicyTemplate"
      values:
        type: "array"
        items:
          $ref: "#/definitions/PolicyValue"
    title: "PolicyWithDetails"
    description: "An instance of a policy template."
    example:
      template:
        displayName: "displayName"
        osMetaFamily: "linux"
        name: "name"
        description: "description"
        id: "id"
        state: "state"
        activation: "activation"
        behavior: "behavior"
      values:
      - configFieldID: "configFieldID"
      - configFieldID: "configFieldID"
      name: "name"
      id: "id"
      configFields:
      - displayType: "checkbox"
        name: "name"
        tooltip:
          template: "template"
          variables:
            icon: "icon"
            message: "message"
        readOnly: true
        id: "id"
        label: "label"
        position: 0.80082819046101150206595775671303272247314453125
        required: true
      - displayType: "checkbox"
        name: "name"
        tooltip:
          template: "template"
          variables:
            icon: "icon"
            message: "message"
        readOnly: true
        id: "id"
        label: "label"
        position: 0.80082819046101150206595775671303272247314453125
        required: true
    x-stoplight:
      id: "PolicyWithDetails"
      name: "PolicyWithDetails"
      public: true
  Provider:
    type: "object"
    properties:
      contact:
        $ref: "#/definitions/Provider_contact"
      name:
        type: "string"
    title: "Provider"
    example:
      contact:
        email: "joe.blough@example.com"
        name: "Joe Blough"
      name: "Joe Bloughs MSP"
    x-stoplight:
      id: "Provider"
      name: "Provider"
      public: true
  ProviderAdminReq:
    type: "object"
    required:
    - "email"
    properties:
      email:
        type: "string"
      enableMultiFactor:
        type: "boolean"
      firstname:
        type: "string"
      lastname:
        type: "string"
    title: "ProviderAdminReq"
    example:
      firstname: "firstname"
      enableMultiFactor: true
      email: "email"
      lastname: "lastname"
    x-stoplight:
      id: "ProviderAdminReq"
      name: "ProviderAdminReq"
      public: true
  SystemGraphManagementReq:
    type: "object"
    required:
    - "id"
    - "op"
    - "type"
    properties:
      attributes:
        $ref: "#/definitions/SystemGraphManagementReq_attributes"
      id:
        type: "string"
        description: "The ObjectID of graph object being added or removed as an association."
      op:
        type: "string"
        description: "How to modify the graph connection."
        enum:
        - "add"
        - "remove"
        - "update"
      type:
        type: "string"
        enum:
        - "active_directory"
        - "application"
        - "command"
        - "g_suite"
        - "ldap_server"
        - "office_365"
        - "policy"
        - "radius_server"
        - "user"
        - "user_group"
    title: "SystemGraphManagementReq"
    example:
      op: "add"
      attributes:
        sudo:
          withoutPassword: true
          enabled: true
      id: "id"
      type: "active_directory"
    x-stoplight:
      id: "SystemGraphManagementReq"
      name: "SystemGraphManagementReq"
      public: true
  SystemGroup:
    type: "object"
    properties:
      id:
        type: "string"
        description: "ObjectId uniquely identifying a System Group."
      name:
        type: "string"
        description: "Display name of a System Group."
      type:
        type: "string"
        description: "The type of the group; always 'system' for a System Group."
        enum:
        - "system_group"
    title: "SystemGroup"
    example:
      name: "name"
      id: "id"
      type: "system_group"
    x-stoplight:
      id: "SystemGroup"
      name: "SystemGroup"
      public: true
  SystemGroupData:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "Display name of a System Group."
    title: "SystemGroupData"
    example:
      name: "name"
    x-stoplight:
      id: "SystemGroupData"
      name: "SystemGroupData"
      public: true
  SystemGroupGraphManagementReq:
    type: "object"
    required:
    - "id"
    - "op"
    - "type"
    properties:
      id:
        type: "string"
        description: "The ObjectID of graph object being added or removed as an association."
      op:
        type: "string"
        description: "How to modify the graph connection."
        enum:
        - "add"
        - "remove"
        - "update"
      type:
        type: "string"
        enum:
        - "active_directory"
        - "application"
        - "command"
        - "g_suite"
        - "ldap_server"
        - "office_365"
        - "policy"
        - "radius_server"
        - "user"
        - "user_group"
    title: "SystemGroupGraphManagementReq"
    example:
      op: "add"
      id: "id"
      type: "active_directory"
    x-stoplight:
      id: "SystemGroupGraphManagementReq"
      name: "SystemGroupGraphManagementReq"
      public: true
  SystemGroupMembersReq:
    type: "object"
    required:
    - "id"
    - "op"
    - "type"
    properties:
      id:
        type: "string"
        description: "The ObjectID of member being added or removed."
      op:
        type: "string"
        description: "How to modify the membership connection."
        enum:
        - "add"
        - "remove"
      type:
        type: "string"
        description: "The member type."
        enum:
        - "system"
    title: "SystemGroupMembersReq"
    example:
      op: "add"
      id: "id"
      type: "system"
    x-stoplight:
      id: "SystemGroupMembersReq"
      name: "SystemGroupMembersReq"
      public: true
  UserGraphManagementReq:
    type: "object"
    required:
    - "id"
    - "op"
    - "type"
    properties:
      attributes:
        $ref: "#/definitions/SystemGraphManagementReq_attributes"
      id:
        type: "string"
        description: "The ObjectID of graph object being added or removed as an association."
      op:
        type: "string"
        description: "How to modify the graph connection."
        enum:
        - "add"
        - "remove"
        - "update"
      type:
        type: "string"
        enum:
        - "active_directory"
        - "application"
        - "command"
        - "g_suite"
        - "ldap_server"
        - "office_365"
        - "policy"
        - "radius_server"
        - "system"
        - "system_group"
    title: "UserGraphManagementReq"
    example:
      op: "add"
      attributes:
        sudo:
          withoutPassword: true
          enabled: true
      id: "id"
      type: "active_directory"
    x-stoplight:
      id: "UserGraphManagementReq"
      name: "UserGraphManagementReq"
      public: true
  UserGroup:
    type: "object"
    properties:
      id:
        type: "string"
        description: "ObjectId uniquely identifying a User Group."
      name:
        type: "string"
        description: "Display name of a User Group."
      type:
        type: "string"
        description: "The type of the group."
        enum:
        - "user_group"
    title: "UserGroup"
    example:
      name: "name"
      id: "id"
      type: "user_group"
    x-stoplight:
      id: "UserGroup"
      name: "UserGroup"
      public: true
  UserGroupGraphManagementReq:
    type: "object"
    required:
    - "id"
    - "op"
    - "type"
    properties:
      id:
        type: "string"
        description: "The ObjectID of graph object being added or removed as an association."
      op:
        type: "string"
        description: "How to modify the graph connection."
        enum:
        - "add"
        - "remove"
        - "update"
      type:
        type: "string"
        description: "The graph type"
        enum:
        - "active_directory"
        - "application"
        - "command"
        - "g_suite"
        - "ldap_server"
        - "office_365"
        - "policy"
        - "radius_server"
        - "system"
        - "system_group"
    title: "UserGroupGraphManagementReq"
    example:
      op: "add"
      id: "id"
      type: "active_directory"
    x-stoplight:
      id: "UserGroupGraphManagementReq"
      name: "UserGroupGraphManagementReq"
      public: true
  UserGroupMembersReq:
    type: "object"
    required:
    - "id"
    - "op"
    - "type"
    properties:
      id:
        type: "string"
        description: "The ObjectID of member being added or removed."
      op:
        type: "string"
        description: "How to modify the membership connection."
        enum:
        - "add"
        - "remove"
      type:
        type: "string"
        description: "The member type."
        enum:
        - "user"
    title: "UserGroupMembersReq"
    example:
      op: "add"
      id: "id"
      type: "user"
    x-stoplight:
      id: "UserGroupMembersReq"
      name: "UserGroupMembersReq"
      public: true
  UserGroupPost:
    type: "object"
    required:
    - "name"
    properties:
      attributes:
        $ref: "#/definitions/UserGroupPost_attributes"
      name:
        type: "string"
        description: "Display name of a User Group."
    title: "UserGroupPost"
    example:
      name: "name"
      attributes:
        sambaEnabled: true
        posixGroups:
        - name: "name"
          id: 0
        - name: "name"
          id: 0
    x-stoplight:
      id: "UserGroupPost"
      name: "UserGroupPost"
      public: true
  UserGroupPut:
    type: "object"
    required:
    - "name"
    properties:
      attributes:
        $ref: "#/definitions/UserGroupPut_attributes"
      name:
        type: "string"
        description: "Display name of a User Group."
    title: "UserGroupPut"
    example:
      name: "name"
      attributes:
        sambaEnabled: true
    x-stoplight:
      id: "UserGroupPut"
      name: "UserGroupPut"
      public: true
  active-directory-agent-get-output:
    type: "object"
    required:
    - "id"
    properties:
      connectKey:
        type: "string"
        description: "The connect key to use when installing the Agent on a Domain\
          \ Controller."
      id:
        type: "string"
        description: "ObjectID of this Active Directory Agent."
    title: "Active Directory Agent Get Output"
    example:
      connectKey: "connectKey"
      id: "id"
    x-stoplight:
      id: "active-directory-agent-get-output"
      name: "Active Directory Agent Get Output"
      public: true
  active-directory-agent-input:
    type: "object"
    title: "Active Directory Agent Input"
    x-stoplight:
      id: "active-directory-agent-input"
      name: "Active Directory Agent Input"
      public: true
  active-directory-agent-list-output:
    type: "object"
    properties:
      id:
        type: "string"
        description: "ObjectID of this Active Directory Agent."
      state:
        type: "string"
        enum:
        - "unsealed"
        - "active"
        - "inactive"
    title: "Active Directory Agent List Output"
    example:
      id: "id"
      state: "unsealed"
    x-stoplight:
      id: "active-directory-agent-list-output"
      name: "Active Directory Agent List Output"
      public: true
  active-directory-input:
    type: "object"
    properties:
      domain:
        type: "string"
        description: "Domain name for this Active Directory instance."
    title: "Active Directory Input"
    x-stoplight:
      id: "active-directory-input"
      name: "Active Directory Input"
      public: true
  active-directory-output:
    title: "Active Directory Output"
    allOf:
    - type: "object"
      required:
      - "id"
      properties:
        id:
          type: "string"
          description: "ObjectID of this Active Directory instance."
    - $ref: "#/definitions/active-directory-input"
    x-stoplight:
      id: "active-directory-output"
      name: "Active Directory Output"
      public: true
  auth-info:
    type: "object"
    properties:
      expiry:
        type: "string"
      isValid:
        type: "boolean"
      message:
        type: "string"
    title: "Auth Info"
    example:
      isValid: true
      expiry: "expiry"
      message: "message"
    x-stoplight:
      id: "auth-info"
      name: "Auth Info"
      public: true
  auth-input:
    type: "object"
    properties:
      basic:
        $ref: "#/definitions/authinput_basic"
      oauth:
        $ref: "#/definitions/authinput_oauth"
    title: "Auth Input"
    x-stoplight:
      id: "auth-input"
      name: "Auth Input"
      public: true
  auth-input-object:
    type: "object"
    properties:
      auth:
        $ref: "#/definitions/auth-input"
    title: "Auth Input Object"
    x-stoplight:
      id: "auth-input-object"
      name: "Auth Input Object"
      public: true
  bulk-user-create:
    type: "object"
    properties:
      attributes:
        type: "array"
        description: "Map of additional attributes."
        items:
          type: "object"
          properties: {}
      email:
        type: "string"
      firstname:
        type: "string"
      lastname:
        type: "string"
      username:
        type: "string"
    title: "Bulk User Create"
    description: "See [V1 system user creation](https://docs.jumpcloud.com/1.0/systemusers/create-a-system-user)\
      \ for full list of attributes."
    x-stoplight:
      id: "bulk-user-create"
      name: "Bulk User Create"
      public: true
  bulk-user-update:
    type: "object"
    properties:
      attributes:
        type: "array"
        description: "Map of additional attributes."
        items:
          type: "object"
          properties: {}
      email:
        type: "string"
      firstname:
        type: "string"
      id:
        type: "string"
        description: "Object ID of the systemuser being updated"
      lastname:
        type: "string"
      username:
        type: "string"
    title: "Bulk User Update"
    description: "See [V1 system user update](https://docs.jumpcloud.com/1.0/systemusers/update-a-system-user)\
      \ for full list of attributes."
    x-stoplight:
      id: "bulk-user-update"
      name: "Bulk User Update"
      public: true
  emailrequest:
    type: "object"
    properties:
      emailType:
        type: "string"
        enum:
        - "activation"
    title: "EmailRequest"
    example:
      emailType: "activation"
    x-stoplight:
      id: "emailrequest"
      name: "EmailRequest"
      public: true
  errorresponse:
    type: "object"
    properties:
      message:
        type: "string"
    title: "ErrorResponse"
    x-stoplight:
      id: "errorresponse"
      name: "ErrorResponse"
      public: true
  gsuite-output:
    title: "GSuite Output"
    allOf:
    - properties:
        id:
          type: "string"
        userLockoutAction:
          type: "string"
          enum:
          - "suspend"
          - "maintain"
        userPasswordExpirationAction:
          type: "string"
          enum:
          - "suspend"
          - "maintain"
    x-stoplight:
      id: "gsuite-output"
      name: "GSuite Output"
      public: true
  gsuite-patch-input:
    type: "object"
    properties:
      userLockoutAction:
        type: "string"
        enum:
        - "suspend"
        - "maintain"
      userPasswordExpirationAction:
        type: "string"
        enum:
        - "suspend"
        - "maintain"
    title: "GSuite Patch Input"
    x-stoplight:
      id: "gsuite-patch-input"
      name: "GSuite Patch Input"
      public: true
  job-details:
    type: "object"
    properties:
      adminId:
        type: "string"
      id:
        type: "string"
      meta:
        type: "object"
        properties: {}
      name:
        type: "string"
      persistedFields:
        type: "array"
        items:
          type: "string"
      status:
        type: "string"
      updatedAt:
        type: "string"
      workUnitsCount:
        type: "integer"
    title: "Job Details"
    example:
      workUnitsCount: 0
      meta: "{}"
      adminId: "adminId"
      name: "name"
      id: "id"
      persistedFields:
      - "persistedFields"
      - "persistedFields"
      status: "status"
      updatedAt: "updatedAt"
    x-stoplight:
      id: "job-details"
      name: "Job Details"
      public: true
  job-id:
    type: "object"
    properties:
      jobId:
        type: "string"
    title: "Job ID"
    example:
      jobId: "jobId"
    x-stoplight:
      id: "job-id"
      name: "Job ID"
      public: true
  job-workresult:
    type: "object"
    properties:
      meta:
        type: "object"
        properties: {}
    title: "Job WorkResult"
    example:
      meta: "{}"
    x-stoplight:
      id: "job-workresult"
      name: "Job WorkResult"
      public: true
  ldap-server-input:
    type: "object"
    properties:
      name:
        type: "string"
        description: "The name of this LDAP server"
      userLockoutAction:
        type: "string"
        description: "action to take; one of 'remove' or 'disable'"
        enum:
        - "disable"
        - "remove"
      userPasswordExpirationAction:
        type: "string"
        description: "action to take; one of 'remove' or 'disable'"
        enum:
        - "disable"
        - "remove"
    title: "LDAP Server Input"
    x-stoplight:
      id: "ldap-server-input"
      name: "LDAP Server Input"
      public: true
  ldap-server-output:
    title: "LDAP Server Output"
    allOf:
    - type: "object"
      required:
      - "id"
      properties:
        id:
          type: "string"
          description: "Unique identifier of this LDAP server"
    - $ref: "#/definitions/ldap-server-input"
    x-stoplight:
      id: "ldap-server-output"
      name: "LDAP Server Output"
      public: true
  mfa:
    type: "object"
    properties:
      configured:
        type: "boolean"
      exclusion:
        type: "boolean"
      exclusionUntil:
        type: "string"
        format: "date-time"
    title: "mfa"
    x-stoplight:
      id: "mfa"
      name: "mfa"
      public: true
  oauth-code-input:
    type: "object"
    properties:
      code:
        type: "string"
    title: "OAuth Code Input"
    x-stoplight:
      id: "oauth-code-input"
      name: "OAuth Code Input"
      public: true
  org-crypto-settings:
    type: "object"
    properties:
      sshKeys:
        $ref: "#/definitions/orgcryptosettings_sshKeys"
    title: "Org Crypto Settings"
    example:
      sshKeys:
        keySize: 0
        validateKeySize: true
        validate: true
    x-stoplight:
      id: "org-crypto-settings"
      name: "Org Crypto Settings"
      public: true
  samba-domain-input:
    type: "object"
    required:
    - "name"
    - "sid"
    properties:
      name:
        type: "string"
        description: "Name of this domain's WorkGroup"
      sid:
        type: "string"
        description: "Security identifier of this domain"
    title: "Samba Domain Input"
    x-stoplight:
      id: "samba-domain-input"
      name: "Samba Domain Input"
      public: true
  samba-domain-output:
    title: "Samba Domain Output"
    allOf:
    - type: "object"
      required:
      - "id"
      properties:
        id:
          type: "string"
          description: "Unique identifier of this domain"
    - $ref: "#/definitions/samba-domain-input"
    x-stoplight:
      id: "samba-domain-output"
      name: "Samba Domain Output"
      public: true
  sshkeylist:
    type: "object"
    properties:
      _id:
        type: "string"
        description: "The ID of the SSH key."
      create_date:
        type: "string"
        description: "The date the SSH key was created."
      name:
        type: "string"
        description: "The name of the SSH key."
      public_key:
        type: "string"
        description: "The Public SSH key."
    title: "SSHKeyList"
    x-stoplight:
      id: "sshkeylist"
      name: "SSHKeyList"
      public: true
  system-insights-apps:
    type: "object"
    properties:
      applescript_enabled:
        type: "string"
      bundle_executable:
        type: "string"
      bundle_identifier:
        type: "string"
      bundle_name:
        type: "string"
      bundle_package_type:
        type: "string"
      bundle_short_version:
        type: "string"
      bundle_version:
        type: "string"
      category:
        type: "string"
      collection_time:
        type: "string"
      compiler:
        type: "string"
      copyright:
        type: "string"
      development_region:
        type: "string"
      display_name:
        type: "string"
      element:
        type: "string"
      environment:
        type: "string"
      info_string:
        type: "string"
      last_opened_time:
        type: "number"
      minimum_system_version:
        type: "string"
      name:
        type: "string"
      path:
        type: "string"
      system_id:
        type: "string"
    title: "System Insights Apps"
    example:
      applescript_enabled: "1"
      bundle_executable: "App Store"
      bundle_identifier: "com.apple.appstore"
      bundle_name: "App Store"
      bundle_package_type: "APPL"
      bundle_short_version: "2.4"
      bundle_version: "658.1"
      category: "public.app-category.utilities"
      collection_time: "2019-06-03T19:41:30.658Z"
      compiler: "com.apple.compilers.llvm.clang.1_0"
      copyright: ""
      development_region: "English"
      display_name: "App Store"
      element: ""
      environment: ""
      info_string: ""
      last_opened_time: 1.55668896350383E9
      minimum_system_version: "10.13"
      name: "App Store.app"
      path: "/Applications/App Store.app"
      system_id: "5c9e51a13c5146f89bae12d9"
    x-stoplight:
      id: "system-insights-apps"
      name: "System Insights Apps"
      public: true
  system-insights-bitlocker-info:
    type: "object"
    properties:
      collection_time:
        type: "string"
      conversion_status:
        type: "integer"
      device_id:
        type: "string"
      drive_letter:
        type: "string"
      encryption_method:
        type: "string"
      persistent_volume_id:
        type: "string"
      protection_status:
        type: "integer"
      system_id:
        type: "string"
    title: "System Insights Bitlocker Info"
    example:
      collection_time: "2019-06-03T19:41:30.658Z"
      conversion_status: 0
      devide_id: "\\\\\\\\?\\\\Volume{3ba5cc52-e0fd-45fa-b8b8-5c88f44f8b17}\\"
      drive_letter: "C:"
      encryption_method: "None"
      persistent_volume_id: ""
      protection_status: 0
      system_id: "5c9e51a13c5146f89bae12d9"
    x-stoplight:
      id: "system-insights-bitlocker-info"
      name: "System Insights Bitlocker Info"
      public: true
  system-insights-browser-plugins:
    type: "object"
    properties:
      collection_time:
        type: "string"
      description:
        type: "string"
      development_region:
        type: "string"
      disabled:
        type: "integer"
      identifier:
        type: "string"
      name:
        type: "string"
      native:
        type: "integer"
      path:
        type: "string"
      sdk:
        type: "string"
      system_id:
        type: "string"
      uid:
        type: "string"
      version:
        type: "string"
    title: "System Insights Browser Plugins"
    example:
      collection_time: "2019-06-03T19:41:30.858Z"
      description: "LastPass Plugin"
      development_region: "en-US"
      disabled: 0
      identifier: "com.lastpass.nplastpass"
      name: "LastPass"
      native: 0
      path: "/Library/Internet Plug-Ins/nplastpass.plugin/"
      sdk: "7D175"
      system_id: "5c9e51a13c5146f89bae12d9"
      uid: "0"
      version: "4.1.7"
    x-stoplight:
      id: "system-insights-browser-plugins"
      name: "System Insights Browser Plugins"
      public: true
  system-insights-chrome-extensions:
    type: "object"
    properties:
      author:
        type: "string"
      collection_time:
        type: "string"
      description:
        type: "string"
      identifier:
        type: "string"
      locale:
        type: "string"
      name:
        type: "string"
      path:
        type: "string"
      permissions:
        type: "string"
      persistent:
        type: "integer"
      system_id:
        type: "string"
      uid:
        type: "string"
      update_url:
        type: "string"
      version:
        type: "string"
    title: "System Insights Chrome Extensions"
    example:
      author: ""
      collection_time: "2019-06-03T19:41:31.125Z"
      description: "Provider for discovery and services for mirroring of Chrome Media\
        \ Router"
      identifier: "pkedcjkdefgpdelpbcmbmeomcjbeemfm"
      locale: "en"
      name: "Chrome Media Router"
      path: "/Users/thomas/Library/Application Support/Google/Chrome/Default/Extensions/pkedcjkdefgpdelpbcmbmeomcjbeemfm/7419.311.0.1_0/"
      permissions: "alarms, cast, cast.streaming, declarativeWebRequest, desktopCapture,\
        \ gcm, http://*/*, identity, identity.email, management, mdns, mediaRouterPrivate,\
        \ metricsPrivate, networkingPrivate, processes, storage, system.cpu, settingsPrivate,\
        \ tabCapture, tabs, webview, https://hangouts.google.com/*, https://*.google.com/cast/chromecast/home/gsse"
      persistent: 0
      system_id: "5c9e51a13c5146f89bae12d9"
      uid: "501"
      update_url: "https://clients2.google.com/service/update2/crx"
      version: "7419.311.0.1"
    x-stoplight:
      id: "system-insights-chrome-extensions"
      name: "System Insights Chrome Extensions"
      public: true
  system-insights-disk-encryption:
    type: "object"
    properties:
      collection_time:
        type: "string"
      encrypted:
        type: "integer"
      encryption_status:
        type: "string"
      name:
        type: "string"
      system_id:
        type: "string"
      type:
        type: "string"
      uid:
        type: "string"
      user_uuid:
        type: "string"
      uuid:
        type: "string"
    title: "System Insights Disk Encryption"
    example:
      collection_time: "2019-06-03T19:41:31.557Z"
      encrypted: 0
      encryption_status: "undefined"
      name: "/dev/disk8"
      system_id: "5c9e51a13c5146f89bae12d9"
      type: ""
      uid: ""
      user_uuid: ""
      uuid: ""
    x-stoplight:
      id: "system-insights-disk-encryption"
      name: "System Insights Disk Encryption"
      public: true
  system-insights-disk-info:
    type: "object"
    properties:
      collection_time:
        type: "string"
      description:
        type: "string"
      disk_index:
        type: "integer"
      disk_size:
        type: "string"
      hardware_model:
        type: "string"
      id:
        type: "string"
      manufacturer:
        type: "string"
      name:
        type: "string"
      partitions:
        type: "integer"
      pnp_device_id:
        type: "string"
      serial:
        type: "string"
      system_id:
        type: "string"
      type:
        type: "string"
    title: "System Insights Disk Info"
    example:
      collection_time: "2019-06-03T19:41:30.658Z"
      description: "Disk drive"
      disk_index: 0
      disk_size: "64420392960"
      hardware_model: "VMware, VMware Virtual S SCSI Disk Device"
      id: "\\\\.\\PHYSICALDRIVE0"
      manufacturer: "(Standard disk drives)"
      name: "\\\\.\\PHYSICALDRIVE0"
      partitions: 3
      pnp_device_id: "SCSI\\DISK&VEN_VMWARE_&PROD_VMWARE_VIRTUAL_S\\5&1EC51BF7&0&000000"
      serial: ""
      system_id: "5c9e51a13c5146f89bae12d9"
      type: "SCSI"
    x-stoplight:
      id: "system-insights-disk-info"
      name: "System Insights Disk Info"
      public: true
  system-insights-etc-hosts:
    type: "object"
    properties:
      address:
        type: "string"
      collection_time:
        type: "string"
      hostnames:
        type: "string"
      system_id:
        type: "string"
    title: "System Insights Etc Hosts"
    example:
      address: "192.168.2.21"
      collection_time: "2019-06-03T19:41:30.658Z"
      hostnames: "hosty hosty.local"
      system_id: "5c9e51a13c5146f89bae12d9"
    x-stoplight:
      id: "system-insights-etc-hosts"
      name: "System Insights Etc Hosts"
      public: true
  system-insights-firefox-addons:
    type: "object"
    properties:
      active:
        type: "integer"
      autoupdate:
        type: "integer"
      collection_time:
        type: "string"
      creator:
        type: "string"
      description:
        type: "string"
      disabled:
        type: "integer"
      identifier:
        type: "string"
      location:
        type: "string"
      name:
        type: "string"
      path:
        type: "string"
      source_url:
        type: "string"
      system_id:
        type: "string"
      type:
        type: "string"
      uid:
        type: "string"
      version:
        type: "string"
      visible:
        type: "integer"
    title: "System Insights Firefox Addons"
    example:
      active: 1
      autoupdate: 1
      collection_time: "2019-06-03T19:41:31.204Z"
      creator: "null"
      description: ""
      disabled: 0
      identifier: "fxmonitor@mozilla.org"
      location: "app-system-addons"
      name: "Firefox Monitor"
      path: ""
      source_url: "file:///var/folders/dn/zjm_0lzn4lv6bgnt5b3nkgxh0000gn/T/tmpaddon-9fb449"
      system_id: "5c9e51a13c5146f89bae12d9"
      type: "extension"
      uid: "501"
      version: "2.8"
      visible: 1
    x-stoplight:
      id: "system-insights-firefox-addons"
      name: "System Insights Firefox Addons"
      public: true
  system-insights-groups:
    type: "object"
    properties:
      collection_time:
        type: "string"
      comment:
        type: "string"
      gid:
        type: "string"
      gid_signed:
        type: "string"
      group_sid:
        type: "string"
      groupname:
        type: "string"
      system_id:
        type: "string"
    title: "System Insights Groups"
    example:
      collection_time: "2019-06-03T19:41:31.673Z"
      comment: ""
      gid: "701"
      gid_signed: "701"
      group_sid: ""
      groupname: "1"
      system_id: "5c9e51a13c5146f89bae12d9"
    x-stoplight:
      id: "system-insights-groups"
      name: "System Insights Groups"
      public: true
  system-insights-interface-addresses:
    type: "object"
    properties:
      address:
        type: "string"
      broadcast:
        type: "string"
      collection_time:
        type: "string"
      friendly_name:
        type: "string"
      interface:
        type: "string"
      mask:
        type: "string"
      point_to_point:
        type: "string"
      system_id:
        type: "string"
      type:
        type: "string"
    title: "System Insights Interface Addresses"
    example:
      address: "::1"
      broadcast: ""
      collection_time: "2019-06-03T19:41:31.008Z"
      friendly_name: ""
      interface: "lo0"
      mask: "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff"
      point_to_point: "::1"
      system_id: "5c9e51a13c5146f89bae12d9"
      type: "unknown"
    x-stoplight:
      id: "system-insights-interface-addresses"
      name: "System Insights Interface Addresses"
      public: true
  system-insights-kernel-info:
    type: "object"
    properties:
      arguments:
        type: "string"
      collection_time:
        type: "string"
      device:
        type: "string"
      path:
        type: "string"
      system_id:
        type: "string"
      version:
        type: "string"
    title: "System Insights Kernel Info"
    example:
      path: "path"
      system_id: "system_id"
      arguments: "arguments"
      collection_time: "collection_time"
      device: "device"
      version: "version"
    x-stoplight:
      id: "system-insights-kernel-info"
      name: "System Insights Kernel Info"
      public: true
  system-insights-logical-drvies:
    type: "object"
    properties:
      boot_partition:
        type: "integer"
      collection_time:
        type: "string"
      device_id:
        type: "string"
      file_system:
        type: "string"
      free_space:
        type: "string"
      size:
        type: "string"
      system_id:
        type: "string"
      type:
        type: "string"
    title: "System Insights Logical Drvies"
    example:
      boot_partition: 0
      collection_time: "2019-06-03T19:41:30.658Z"
      device_id: "C:"
      file_system: "NTFS"
      free_space: "43194331136"
      size: "63778582528"
      system_id: "5c9e51a13c5146f89bae12d9"
      type: "Unknown"
    x-stoplight:
      id: "system-insights-logical-drvies"
      name: "System Insights Logical Drvies"
      public: true
  system-insights-mounts:
    type: "object"
    properties:
      blocks:
        type: "string"
      blocks_available:
        type: "string"
      blocks_free:
        type: "string"
      blocks_size:
        type: "string"
      collection_time:
        type: "string"
      device:
        type: "string"
      device_alias:
        type: "string"
      flags:
        type: "string"
      inodes:
        type: "string"
      inodes_free:
        type: "string"
      path:
        type: "string"
      system_id:
        type: "string"
      type:
        type: "string"
    title: "System Insights Mounts"
    example:
      blocks: "388086"
      blocks_available: "95135"
      blocks_free: "95135"
      blocks_size: "4096"
      collection_time: "2019-06-03T19:41:31.746Z"
      device: "/dev/disk5s1"
      device_alias: "/dev/disk5s1"
      flags: "70292505"
      inodes: "4294967279"
      inodes_free: "4294966853"
      path: "/private/var/folders/zz/zyxvpxvq6csfxvn_n0000000000000/T/.vbfolder_1dQavK"
      system_id: "5c9e51a13c5146f89bae12d9"
      type: "hfs"
    x-stoplight:
      id: "system-insights-mounts"
      name: "System Insights Mounts"
      public: true
  system-insights-os-version:
    type: "object"
    properties:
      build:
        type: "string"
      codename:
        type: "string"
      collection_time:
        type: "string"
      install_date:
        type: "string"
      major:
        type: "integer"
      minor:
        type: "integer"
      name:
        type: "string"
      patch:
        type: "integer"
      platform:
        type: "string"
      platform_like:
        type: "string"
      system_id:
        type: "string"
      version:
        type: "string"
    title: "System Insights OS Version"
    example:
      build: "17G65"
      codename: ""
      collection_time: "2019-06-03T19:41:30.933Z"
      install_date: ""
      major: 10
      minor: 13
      name: "Mac OS X"
      patch: 6
      platform: "darwin"
      platform_like: "darwin"
      system_id: "5c9e51a13c5146f89bae12d9"
      version: "10.13.6"
    x-stoplight:
      id: "system-insights-os-version"
      name: "System Insights OS Version"
      public: true
  system-insights-patches:
    type: "object"
    properties:
      caption:
        type: "string"
      collection_time:
        type: "string"
      csname:
        type: "string"
      description:
        type: "string"
      fix_comments:
        type: "string"
      hotfix_id:
        type: "string"
      install_date:
        type: "string"
      installed_by:
        type: "string"
      installed_on:
        type: "string"
      system_id:
        type: "string"
    title: "System Insights Patches"
    example:
      caption: "http://support.microsoft.com/?kbid=4503308"
      collection_time: "2019-06-03T19:41:31.673Z"
      csname: "DESKTOP-B17DUKP"
      description: "Security Update"
      fix_comments: ""
      hotfix_id: "KB4503308"
      install_date: ""
      installed_by: "NT AUTHORITY\\SYSTEM"
      installed_on: "7/30/2019"
      system_id: "5c9e51a13c5146f89bae12d9"
    x-stoplight:
      id: "system-insights-patches"
      name: "System Insights Patches"
      public: true
  system-insights-programs:
    type: "object"
    properties:
      collection_time:
        type: "string"
      identifying_number:
        type: "string"
      install_date:
        type: "string"
      install_location:
        type: "string"
      install_source:
        type: "string"
      language:
        type: "string"
      name:
        type: "string"
      publisher:
        type: "string"
      system_id:
        type: "string"
      uninstall_string:
        type: "string"
      version:
        type: "string"
    title: "System Insights Programs"
    example:
      collection_time: "2019-06-03T19:41:31.673Z"
      identifying_number: "{2E8B8BDD-03DF-4C1C-8C99-E6A4BCBF43CE}"
      install_date: "20190724"
      install_location: ""
      install_source: "C:\\Windows\\SoftwareDistribution\\Download\\b78f29c88063bd09e7afd48e257d0126\\\
        img\\"
      language: "0"
      name: "Update for Windows 10 for x64-based Systems (KB4480730)"
      publisher: "Microsoft Corporation"
      system_id: "5c9e51a13c5146f89bae12d9"
      uninstall_string: "MsiExec.exe /X{2E8B8BDD-03DF-4C1C-8C99-E6A4BCBF43CE}"
      version: "2.51.0.0"
    x-stoplight:
      id: "system-insights-programs"
      name: "System Insights Programs"
      public: true
  system-insights-safari-extensions:
    type: "object"
    properties:
      author:
        type: "string"
      collection_time:
        type: "string"
      description:
        type: "string"
      developer_id:
        type: "string"
      identifier:
        type: "string"
      name:
        type: "string"
      path:
        type: "string"
      sdk:
        type: "string"
      system_id:
        type: "string"
      uid:
        type: "string"
      update_url:
        type: "string"
      version:
        type: "string"
    title: "System Insights Safari Extensions"
    example:
      author: "Eyeo GmbH"
      collection_time: "2019-05-16T18:58:15.673Z"
      description: "Used by over 50 million people, a free ad blocker that blocks\
        \ ALL annoying ads, malware and tracking."
      developer_id: "GRYYZR985A"
      identifier: "org.adblockplus.adblockplussafari"
      name: "Adblock Plus"
      path: "/Users/samuelharvanek/Library/Safari/Extensions/Adblock Plus.safariextz"
      sdk: "6.0"
      system_id: "5cdb13e85a0e0719283583c0"
      uid: "501"
      update_url: "https://update.adblockplus.org/adblockplussafari/updates.plist"
      version: "1.12.5"
    x-stoplight:
      id: "system-insights-safari-extensions"
      name: "System Insights Safari Extensions"
      public: true
  system-insights-system-controls:
    type: "object"
    properties:
      collection_time:
        type: "string"
      config_value:
        type: "string"
      current_value:
        type: "string"
      field_name:
        type: "string"
      name:
        type: "string"
      oid:
        type: "string"
      subsystem:
        type: "string"
      system_id:
        type: "string"
      type:
        type: "string"
    title: "System Insights System Controls"
    example:
      config_value: "config_value"
      system_id: "system_id"
      name: "name"
      subsystem: "subsystem"
      collection_time: "collection_time"
      oid: "oid"
      type: "type"
      current_value: "current_value"
      field_name: "field_name"
    x-stoplight:
      id: "system-insights-system-controls"
      name: "System Insights System Controls"
      public: true
  system-insights-system-info:
    type: "object"
    properties:
      collection_time:
        type: "string"
      computer_name:
        type: "string"
      cpu_brand:
        type: "string"
      cpu_logical_cores:
        type: "integer"
      cpu_microcode:
        type: "string"
      cpu_physical_cores:
        type: "integer"
      cpu_subtype:
        type: "string"
      cpu_type:
        type: "string"
      hardware_model:
        type: "string"
      hardware_serial:
        type: "string"
      hardware_vendor:
        type: "string"
      hardware_version:
        type: "string"
      hostname:
        type: "string"
      local_hostname:
        type: "string"
      physical_memory:
        type: "string"
      system_id:
        type: "string"
      uuid:
        type: "string"
    title: "System Insights System Info"
    example:
      collection_time: "2019-06-03T19:41:30.771Z"
      computer_name: "Johnny’s MacBook Pro (2)"
      cpu_brand: "Intel(R) Core(TM) i7-7820HQ CPU @ 2.90GHz"
      cpu_logical_cores: 8
      cpu_microcode: ""
      cpu_physical_cores: 4
      cpu_subtype: "Intel x86-64h Haswell"
      cpu_type: "x86_64h"
      hardware_model: "MacBookPro14,3 "
      hardware_serial: "111111FFFFFF"
      hardware_vendor: "Apple Inc. "
      hardware_version: "1.0 "
      hostname: "johnnys-macbook-pro-2.local"
      local_hostname: "Jonnys-MacBook-Pro-2"
      physical_memory: "17179869184"
      system_id: "5c9e51a13c5146f89bae12d9"
      uuid: "11111111-FFFF-1111-FFFF-111111111111"
    x-stoplight:
      id: "system-insights-system-info"
      name: "System Insights System Info"
      public: true
  system-insights-uptime:
    type: "object"
    properties:
      collection_time:
        type: "string"
      days:
        type: "integer"
      hours:
        type: "integer"
      minutes:
        type: "integer"
      seconds:
        type: "integer"
      system_id:
        type: "string"
      total_seconds:
        type: "string"
    title: "System Insights Uptime"
    example:
      hours: 6
      seconds: 5
      total_seconds: "total_seconds"
      minutes: 1
      system_id: "system_id"
      days: 0
      collection_time: "collection_time"
    x-stoplight:
      id: "system-insights-uptime"
      name: "System Insights Uptime"
      public: true
  system-insights-users:
    type: "object"
    properties:
      collection_time:
        type: "string"
      description:
        type: "string"
      directory:
        type: "string"
      gid:
        type: "string"
      gid_signed:
        type: "string"
      shell:
        type: "string"
      system_id:
        type: "string"
      type:
        type: "string"
      uid:
        type: "string"
      uid_signed:
        type: "string"
      username:
        type: "string"
      uuid:
        type: "string"
    title: "System Insights Users"
    example:
      collection_time: "2019-06-03T19:41:29.710Z"
      description: "AppleEvents Daemon"
      directory: "/var/empty"
      gid: "55"
      gid_signed: "55"
      shell: "/usr/bin/false"
      system_id: "5c9e51a13c5146f89bae12d9"
      type: ""
      uid: "55"
      uid_signed: "55"
      username: "_appleevents"
      uuid: "FFFFEEEE-DDDD-CCCC-BBBB-AAAA00000037"
    x-stoplight:
      id: "system-insights-users"
      name: "System Insights Users"
      public: true
  systemfdekey:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
    title: "SystemFDEKey"
    x-stoplight:
      id: "systemfdekey"
      name: "SystemFDEKey"
      public: true
  systemuser:
    type: "object"
    properties:
      _id:
        type: "string"
      account_locked:
        type: "boolean"
      activated:
        type: "boolean"
      allow_public_key:
        type: "boolean"
      associatedTagCount:
        type: "integer"
        minimum: 0
      attributes:
        type: "array"
        items:
          type: "object"
          properties: {}
      company:
        type: "string"
        maxLength: 1024
      costCenter:
        type: "string"
        maxLength: 1024
      created:
        type: "string"
      department:
        type: "string"
        maxLength: 1024
      description:
        type: "string"
        maxLength: 1024
      displayname:
        type: "string"
        maxLength: 1024
      email:
        type: "string"
        maxLength: 1024
      employeeIdentifier:
        type: "string"
        description: "Must be unique per user. "
        maxLength: 256
      employeeType:
        type: "string"
        maxLength: 1024
      enable_managed_uid:
        type: "boolean"
      enable_user_portal_multifactor:
        type: "boolean"
      external_dn:
        type: "string"
      external_source_type:
        type: "string"
      externally_managed:
        type: "boolean"
      firstname:
        type: "string"
        maxLength: 1024
      jobTitle:
        type: "string"
        maxLength: 1024
      lastname:
        type: "string"
        maxLength: 1024
      ldap_binding_user:
        type: "boolean"
      location:
        type: "string"
        maxLength: 1024
      mfa:
        $ref: "#/definitions/mfa"
      middlename:
        type: "string"
        maxLength: 1024
      password_expiration_date:
        type: "string"
      password_expired:
        type: "boolean"
      password_never_expires:
        type: "boolean"
      passwordless_sudo:
        type: "boolean"
      public_key:
        type: "string"
      samba_service_user:
        type: "boolean"
      ssh_keys:
        type: "array"
        items:
          $ref: "#/definitions/sshkeylist"
      sudo:
        type: "boolean"
      tags:
        type: "array"
        items:
          type: "string"
      totp_enabled:
        type: "boolean"
      unix_guid:
        type: "integer"
        minimum: 1
      unix_uid:
        type: "integer"
        minimum: 1
      username:
        type: "string"
        maxLength: 1024
    title: "SystemUser"
    x-stoplight:
      id: "systemuser"
      name: "SystemUser"
      public: true
  systemuserputpost:
    type: "object"
    required:
    - "email"
    - "username"
    properties:
      account_locked:
        type: "boolean"
      activated:
        type: "boolean"
      addresses:
        type: "array"
        items:
          $ref: "#/definitions/systemuserputpost_addresses"
      allow_public_key:
        type: "boolean"
      attributes:
        type: "array"
        items:
          type: "object"
          properties: {}
      company:
        type: "string"
      costCenter:
        type: "string"
      department:
        type: "string"
      description:
        type: "string"
        maxLength: 1024
      displayname:
        type: "string"
      email:
        type: "string"
        maxLength: 1024
      employeeIdentifier:
        type: "string"
        description: "Must be unique per user. "
        maxLength: 256
      employeeType:
        type: "string"
      enable_managed_uid:
        type: "boolean"
      enable_user_portal_multifactor:
        type: "boolean"
      external_dn:
        type: "string"
      external_source_type:
        type: "string"
      externally_managed:
        type: "boolean"
      firstname:
        type: "string"
      jobTitle:
        type: "string"
      lastname:
        type: "string"
      ldap_binding_user:
        type: "boolean"
      location:
        type: "string"
      mfa:
        $ref: "#/definitions/mfa"
      middlename:
        type: "string"
      password:
        type: "string"
      password_never_expires:
        type: "boolean"
      passwordless_sudo:
        type: "boolean"
      phoneNumbers:
        type: "array"
        items:
          $ref: "#/definitions/systemuserputpost_phoneNumbers"
      public_key:
        type: "string"
      relationships:
        type: "array"
        items:
          type: "object"
          properties: {}
      samba_service_user:
        type: "boolean"
      sudo:
        type: "boolean"
      tags:
        type: "array"
        items:
          type: "string"
      unix_guid:
        type: "integer"
        minimum: 1
      unix_uid:
        type: "integer"
        minimum: 1
      username:
        type: "string"
    title: "SystemUserPost"
    x-stoplight:
      id: "systemuserputpost"
      name: "SystemUserPost"
      public: true
  workday-fields:
    type: "object"
    properties:
      name:
        type: "string"
      reportUrl:
        type: "string"
    title: "Workday Fields"
    x-stoplight:
      id: "workday-fields"
      name: "Workday Fields"
      public: true
  workday-input:
    type: "object"
    properties:
      auth:
        $ref: "#/definitions/auth-input"
      name:
        type: "string"
      reportUrl:
        type: "string"
    title: "Workday Input"
    example:
      auth:
        auth:
          ?
          : domain: "veniam"
          credentials:
            password: "cillum occaecat id eiusmod ullamco"
            username: "mollit ex"
      name: "in voluptate ullamco"
      reportUrl: "eu est sint Lorem"
    x-stoplight:
      id: "workday-input"
      name: "Workday Input"
      public: true
  workday-output:
    type: "object"
    properties:
      auth:
        $ref: "#/definitions/workdayoutput_auth"
      id:
        type: "string"
      lastImport:
        type: "string"
      name:
        type: "string"
      reportUrl:
        type: "string"
    title: "Workday Output"
    example:
      lastImport: "lastImport"
      auth:
        basic:
          isValid: true
          expiry: "expiry"
          message: "message"
        oauth:
          isValid: true
          expiry: "expiry"
          message: "message"
      name: "name"
      id: "id"
      reportUrl: "reportUrl"
    x-stoplight:
      id: "workday-output"
      name: "Workday Output"
      public: true
  workday-request:
    type: "object"
    properties:
      name:
        type: "string"
      objectId:
        type: "string"
    title: "Workday Request"
    x-stoplight:
      id: "workday-request"
      name: "Workday Request"
      public: true
  workday-worker:
    type: "object"
    properties:
      attributes:
        type: "object"
        properties: {}
      email:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      username:
        type: "string"
    title: "Workday Worker"
    x-stoplight:
      id: "workday-worker"
      name: "Workday Worker"
      public: true
  body:
    type: "object"
    properties:
      id:
        type: "string"
      userLockoutAction:
        $ref: "#/definitions/LdapServerAction"
      userPasswordExpirationAction:
        $ref: "#/definitions/LdapServerAction"
  inline_response_200:
    properties:
      id:
        type: "string"
      name:
        type: "string"
      userLockoutAction:
        $ref: "#/definitions/LdapServerAction"
      userPasswordExpirationAction:
        $ref: "#/definitions/LdapServerAction"
    example:
      userLockoutAction: {}
      name: "name"
      userPasswordExpirationAction: null
      id: "id"
  inline_response_400:
    properties:
      message:
        type: "string"
  inline_response_200_1:
    properties:
      results:
        type: "array"
        items:
          $ref: "#/definitions/Administrator"
      totalCount:
        type: "integer"
  PolicyRequest_template:
    properties:
      id:
        type: "string"
        description: "ObjectId uniquely identifying a Policy instance; only allowed\
          \ on POST requests."
    example:
      id: "id"
  PolicyTemplateConfigField_tooltip_variables:
    properties:
      icon:
        type: "string"
      message:
        type: "string"
    example:
      icon: "icon"
      message: "message"
  PolicyTemplateConfigField_tooltip:
    properties:
      template:
        type: "string"
      variables:
        $ref: "#/definitions/PolicyTemplateConfigField_tooltip_variables"
    example:
      template: "template"
      variables:
        icon: "icon"
        message: "message"
  Provider_contact:
    properties:
      email:
        type: "string"
      name:
        type: "string"
  SystemGraphManagementReq_attributes_sudo:
    properties:
      enabled:
        type: "boolean"
      withoutPassword:
        type: "boolean"
    example:
      withoutPassword: true
      enabled: true
  SystemGraphManagementReq_attributes:
    properties:
      sudo:
        $ref: "#/definitions/SystemGraphManagementReq_attributes_sudo"
    description: "The graph connection's attributes"
    example:
      sudo:
        withoutPassword: true
        enabled: true
  UserGroupPost_attributes_posixGroups:
    properties:
      id:
        type: "integer"
      name:
        type: "string"
    example:
      name: "name"
      id: 0
  UserGroupPost_attributes:
    properties:
      posixGroups:
        type: "array"
        items:
          $ref: "#/definitions/UserGroupPost_attributes_posixGroups"
      sambaEnabled:
        type: "boolean"
    description: "The group object's attributes."
    example:
      sambaEnabled: true
      posixGroups:
      - name: "name"
        id: 0
      - name: "name"
        id: 0
  UserGroupPut_attributes:
    properties:
      sambaEnabled:
        type: "boolean"
    description: "The group object's attributes."
    example:
      sambaEnabled: true
  authinput_basic:
    properties:
      password:
        type: "string"
      username:
        type: "string"
  authinput_oauth:
    properties:
      code:
        type: "string"
  orgcryptosettings_sshKeys:
    properties:
      keySize:
        type: "integer"
      validate:
        type: "boolean"
      validateKeySize:
        type: "boolean"
    example:
      keySize: 0
      validateKeySize: true
      validate: true
  systemuserputpost_addresses:
    properties:
      country:
        type: "string"
      extendedAddress:
        type: "string"
      locality:
        type: "string"
      poBox:
        type: "string"
      postalCode:
        type: "string"
      region:
        type: "string"
      streetAddress:
        type: "string"
      type:
        type: "string"
  systemuserputpost_phoneNumbers:
    properties:
      number:
        type: "string"
      type:
        type: "string"
  workdayoutput_auth:
    properties:
      basic:
        $ref: "#/definitions/auth-info"
      oauth:
        $ref: "#/definitions/auth-info"
    example:
      basic:
        isValid: true
        expiry: "expiry"
        message: "message"
      oauth:
        isValid: true
        expiry: "expiry"
        message: "message"
parameters:
  trait:aggregate:aggregate:
    name: "aggregate"
    in: "query"
    required: false
    type: "array"
    items:
      type: "string"
    x-exportParamName: "Aggregate"
  trait:fields:fields:
    name: "fields"
    in: "query"
    description: "The comma separated fields included in the returned records.\nIf\
      \ omitted, the default list of fields will be returned.\n"
    required: false
    type: "array"
    items:
      type: "string"
    x-exportParamName: "Fields"
  trait:filter:filter:
    name: "filter"
    in: "query"
    description: "Supported operators are: eq, ne, gt, ge, lt, le, between, search,\
      \ in"
    required: false
    type: "array"
    items:
      type: "string"
    x-exportParamName: "Filter"
  trait:graphSystemGroupTargets:targets:
    name: "targets"
    in: "query"
    description: ""
    required: true
    type: "array"
    items:
      type: "string"
      enum:
      - "active_directory"
      - "application"
      - "command"
      - "g_suite"
      - "ldap_server"
      - "office_365"
      - "policy"
      - "radius_server"
      - "user"
      - "user_group"
    x-exportParamName: "Targets"
  trait:graphSystemTargets:targets:
    name: "targets"
    in: "query"
    description: ""
    required: true
    type: "array"
    items:
      type: "string"
      enum:
      - "active_directory"
      - "application"
      - "command"
      - "g_suite"
      - "ldap_server"
      - "office_365"
      - "policy"
      - "radius_server"
      - "user"
      - "user_group"
    x-exportParamName: "Targets"
  trait:graphTargets:targets:
    name: "targets"
    in: "query"
    description: ""
    required: true
    type: "array"
    items:
      type: "string"
      enum:
      - "active_directory"
      - "application"
      - "command"
      - "g_suite"
      - "ldap_server"
      - "office_365"
      - "policy"
      - "radius_server"
      - "system"
      - "system_group"
      - "user"
      - "user_group"
    x-exportParamName: "Targets"
  trait:graphUserGroupTargets:targets:
    name: "targets"
    in: "query"
    description: ""
    required: true
    type: "array"
    items:
      type: "string"
      enum:
      - "active_directory"
      - "application"
      - "command"
      - "g_suite"
      - "ldap_server"
      - "office_365"
      - "policy"
      - "radius_server"
      - "system"
      - "system_group"
    x-exportParamName: "Targets"
  trait:graphUserTargets:targets:
    name: "targets"
    in: "query"
    description: ""
    required: true
    type: "array"
    items:
      type: "string"
      enum:
      - "active_directory"
      - "application"
      - "command"
      - "g_suite"
      - "ldap_server"
      - "office_365"
      - "policy"
      - "radius_server"
      - "system"
      - "system_group"
    x-exportParamName: "Targets"
  trait:limit:limit:
    name: "limit"
    in: "query"
    description: "The number of records to return at once. Limited to 100."
    required: false
    type: "integer"
    default: 10
    x-exportParamName: "Limit"
  trait:limitMax100:limit:
    name: "limit"
    in: "query"
    required: false
    type: "integer"
    default: 10
    maximum: 100
    minimum: 0
    x-exportParamName: "Limit"
  trait:listCount:x-total-count:
    name: "x-total-count"
    in: "header"
    required: false
    type: "integer"
  trait:multiTenantRequestHeaders:x-org-id:
    name: "x-org-id"
    in: "header"
    description: ""
    required: false
    type: "string"
    x-exportParamName: "XOrgId"
  trait:requestHeaders:Accept:
    name: "Accept"
    in: "header"
    required: true
    type: "string"
    default: "application/json"
    x-exportParamName: "Accept"
  trait:requestHeaders:Content-Type:
    name: "Content-Type"
    in: "header"
    required: true
    type: "string"
    default: "application/json"
    x-exportParamName: "ContentType"
  trait:skip:skip:
    name: "skip"
    in: "query"
    description: "The offset into the records to return."
    required: false
    type: "integer"
    default: 0
    minimum: 0
    x-exportParamName: "Skip"
  trait:sort:sort:
    name: "sort"
    in: "query"
    description: "The comma separated fields used to sort the collection.\nDefault\
      \ sort is ascending, prefix with `-` to sort descending.\n"
    required: false
    type: "array"
    items:
      type: "string"
    x-exportParamName: "Sort"
  trait:systemContextAuth:Authorization:
    name: "Authorization"
    in: "header"
    description: "Authorization header for the System Context API"
    required: false
    type: "string"
    x-exportParamName: "Authorization"
  trait:systemContextAuth:Date:
    name: "Date"
    in: "header"
    description: "Current date header for the System Context API"
    required: false
    type: "string"
    x-exportParamName: "Date"
  trait:systemInsightsFilter:filter:
    name: "filter"
    in: "query"
    description: "Supported operators are: eq"
    required: false
    type: "array"
    items:
      type: "string"
    x-exportParamName: "Filter"
responses:
  trait:standardErrors:400:
    description: ""
    schema:
      $ref: "#/definitions/errorresponse"
  trait:standardErrors:401:
    description: ""
    schema:
      $ref: "#/definitions/errorresponse"
  trait:standardErrors:403:
    description: ""
    schema:
      $ref: "#/definitions/errorresponse"
  trait:standardErrors:404:
    description: ""
    schema:
      $ref: "#/definitions/errorresponse"
  trait:standardErrors:409:
    description: ""
    schema:
      $ref: "#/definitions/errorresponse"
  trait:standardErrors:500:
    description: ""
    schema:
      $ref: "#/definitions/errorresponse"
x-stoplight:
  afterScript: ""
  beforeScript: ""
  functions: {}
  mock:
    dynamic: false
    enabled: false
  textSections:
    api-changelog:
      content: "A history of API changes introduced as of August 2018.\n\n### 08-01-2018\n\
        \n`minor release`\n\n- [Multi-Tenant x-org-id](https://docs.jumpcloud.com/2.0/authentication-and-authorization/multi-tenant-organization-api-headers)\
        \  documentation and functionality.\n- PolicyTemplate Config Model corrections.\n\
        \n- Removed workday import results & row functionality.\n\n\n### 09-12-2018\n\
        \n`minor release`\n\n- X-Org-Id Request Header\n- Misc Text Section updates\n\
        - GET System FDE Key endpoint"
      id: "api-changelog"
      name: "API Changelog"
      public: true
    authentication-and-authorization-overview:
      content: "#### Access Your API Key\n\nTo locate your API Key:\n1. Log into the\
        \ [JumpCloud Admin Console](https://console.jumpcloud.com/)\n2. Go to the\
        \ username drop down located in the top-right of the Console.\n3. Retrieve\
        \ your API key from API Settings.\n\n#### API Key Considerations\n\nThis API\
        \ key is associated to the currently logged in administrator. Other admins\
        \ will have different API keys.\n\nPlease keep this API key secret, as it\
        \ grants full access to any data accessible via your JumpCloud console account.\n\
        \nYou can also reset your API key in the same location in the JumpCloud Admin\
        \ Console.\n\n##### Recycling or Resetting Your API Key\n\nIn order to revoke\
        \ access with the current API key, simply reset your API key. This will render\
        \ all calls using the previous API key inaccessible.\n\nFor API V2 the API\
        \ key will be passed in as a header with the header name \"x-api-key\".\n\n\
        **Example**\n```\ncurl -H \"x-api-key: [YOUR_API_KEY_HERE]\" \"https://console.jumpcloud.com/api/v2/systemgroups\"\
        \n```"
      id: "authentication-and-authorization-overview"
      name: "API Key"
      public: true
    multi-tenant-organization-api-headers:
      content: "Multi-Tenant Organization API Headers are available for JumpCloud\
        \ Admins to use when making API requests from Organizations that have multiple\
        \ managed organizations.\n\nThe `x-org-id` is a required header for all multi-tenant\
        \ admins when making API requests to Jumpcloud as this header will define\
        \ what organization you would like to make the request for.\n\nPlease note\
        \ that Single Tenant Admins do not need to provide this header when making\
        \ an API request.\n\n#### Header Value\n\n`x-org-id`\n\n#### API Response\
        \ Codes\n\n- `400` Malformed ID.\n- `400` x-org-id and Organization path ID\
        \ do not match.\n- `401` ID not included for multi-tenant admin\n- `403` ID\
        \ included on unsupported route.\n- `404` Organization ID Not Found.\n\n####\
        \ Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/directories\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -H 'x-org-id: {ORG_ID}'\n\n```\n\n\
        #### To Obtain an Individual Organization ID via the UI\n\nAs a prerequisite\
        \ your Primary Organization will need to be setup for Multi-Tenancy which\
        \ will give you access to the Multi-Tenant Organization Admin Portal.\n\n\
        1. Log into JumpCloud [Admin Console](https://console.jumpcloud.com). If you\
        \ are a multi-tenant Admin, you will automatically be routed to the Multi-Tenant\
        \ Admin Portal.\n2. From the Multi-Tenant Portal's primary navigation bar,\
        \ select the Organization you'd like to access.\n3. You will automatically\
        \ be routed to that Organization's Admin Console.\n4. Go to Settings in the\
        \ sub-tenant's primary navigation.\n5. You can obtain your Organization ID\
        \ below your Organization's Contact Information on the Settings page.\n\n\
        #### To Obtain All Organization IDs via the API\n\n1. You can make an API\
        \ request to this endpoint using the API key of your Primary Organization.\
        \  `https://console.jumpcloud.com/api/organizations/` This will return all\
        \ your managed organizations.\n\n#### Sample Request\n```\ncurl -X GET \\\n\
        \  https://console.jumpcloud.com/api/organizations/ \\\n  -H 'Accept: application/json'\
        \ \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n\
        \n```"
      id: "multi-tenant-organization-api-headers"
      name: "Multi Tenant Organization API Headers"
      public: true
    system-context:
      content: "* [Introduction](#introduction)\n* [Supported endpoints](#supported-endpoints)\n\
        * [Response codes](#response-codes)\n* [Authentication](#authentication)\n\
        * [Additional examples](#additional-examples)\n* [Third party](#third-party)\n\
        \n### Introduction\n\nJumpCloud System Context Authorization is an alternative\
        \ way to authenticate with a subset of JumpCloud's REST APIs. Using this method\
        \ a system can manage its information and resource associations, allowing\
        \ modern auto provisioning environments to scale as needed.\n\n**Note: The\
        \ following documentation applies to Linux Operating Systems only.**\n\n###\
        \ Supported Endpoints\n\nJumpCloud System Context Authorization can be used\
        \ in conjunction with Systems endpoints found in the V1 API and certain System\
        \ Group endpoints found in the v2 API.\n\n- A system may fetch, alter, and\
        \ delete metadata about itself, including manipulating a system's Group and\
        \ Systemuser associations,\n  - `/api/systems/{system_id}` | [`GET`](https://docs.jumpcloud.com/1.0/systems/list-an-individual-system)\
        \ [`PUT`](https://docs.jumpcloud.com/1.0/systems/update-a-system)\n- A system\
        \ may delete itself from your JumpCloud organization\n  - `/api/systems/{system_id}`\
        \ | [`DELETE`](https://docs.jumpcloud.com/1.0/systems/delete-a-system)\n-\
        \ A system may fetch its direct resource associations under v2 (Groups)\n\
        \  - `/api/v2/systems/{system_id}/memberof` | [`GET`](https://docs.jumpcloud.com/2.0/systems/list-a-systems-group-membership)\n\
        \  - `/api/v2/systems/{system_id}/associations` | [`GET`](https://docs.jumpcloud.com/2.0/systems/list-associations-of-a-system)\n\
        \  - `/api/v2/systems/{system_id}/users` | [`GET`](https://docs.jumpcloud.com/2.0/systems/list-the-users-associated-with-a-system)\n\
        - A system may alter its direct resource associations under v2 (Groups)\n\
        \  - `/api/v2/systems/{system_id}/associations` | [`POST`](https://docs.jumpcloud.com/2.0/systems/manage-associations-of-a-system)\n\
        - A system may alter its System Group associations\n  - `/api/v2/systemgroups/{systemgroup_id}/members`\
        \ | [`POST`](https://docs.jumpcloud.com/2.0/system-groups/update-a-system-group)\n\
        \    - _NOTE_ If a system attempts to alter the system group membership of\
        \ a different system the request will be rejected\n\n\n### Response Codes\n\
        \nIf endpoints other than those described above are called using the System\
        \ Context API the server will return a `401` response.\n\n### Authentication\n\
        \nTo allow for secure access to our APIs, you must authenticate each API request.\n\
        JumpCloud System Context Authorization uses [HTTP Signatures](https://tools.ietf.org/html/draft-cavage-http-signatures-00)\
        \ to authenticate API requests.\nThe HTTP Signatures sent with each request\
        \ are similar to the signatures used by the Amazon Web Services REST API.\n\
        To help with the request-signing process, we have provided an [example bash\
        \ script](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/shell/SigningExample.sh).\
        \ This example API request simply requests the entire system record. You must\
        \ be root, or have permissions to access the contents of the `/opt/jc` directory\
        \ to generate a signature.\n\n\nHere is a breakdown of the example script,\
        \ with explanations.\n\nThe first thing the script does is extract the systemKey\
        \ from the JSON formatted `/opt/jc/jcagent.conf` file.\n\n```\n#!/bin/bash\n\
        \nconf=\"`cat /opt/jc/jcagent.conf`\"\nregex=\"systemKey\\\":\\\"(\\w+)\\\"\
        \"\n\nif [[ $conf =~ $regex ]] ; then\n  systemKey=\"${BASH_REMATCH[1]}\"\n\
        fi\n```\n\nThen the script retrieves the current date in the correct format.\n\
        \n```\nnow=`date -u \"+%a, %d %h %Y %H:%M:%S GMT\"`;\n```\n\nNext we build\
        \ a signing string to demonstrate the expected signature format. The signed\
        \ string must consist of the [request-line](https://tools.ietf.org/html/rfc2616#page-35)\
        \ and the date header, separated by a newline character.\n\n```\nsignstr=\"\
        GET /api/systems/${systemKey} HTTP/1.1\\ndate: ${now}\"\n```\n\nThe next step\
        \ is to calculate and apply the signature. This is a two-step process:\n\n\
        1. Create a signature from the signing string using the JumpCloud Agent private\
        \ key: ``printf \"$signstr\" | openssl dgst -sha256 -sign /opt/jc/client.key``\n\
        1. Then Base64-encode the signature string and trim off the newline characters:\
        \ ``| openssl enc -e -a | tr -d '\\n'``\n\nThe combined steps above result\
        \ in:\n\n```\nsignature=`printf \"$signstr\" | openssl dgst -sha256 -sign\
        \ /opt/jc/client.key | openssl enc -e -a | tr -d '\\n'` ;\n```\n\nFinally,\
        \ we make sure the API call sending the signature has the same Authorization\
        \ and Date header values, HTTP method, and URL that were used in the signing\
        \ string.\n\n```\ncurl -iq \\\n  -H \"Accept: application/json\" \\\n  -H\
        \ \"Content-Type: application/json\" \\\n  -H \"Date: ${now}\" \\\n  -H \"\
        Authorization: Signature keyId=\\\"system/${systemKey}\\\",headers=\\\"request-line\
        \ date\\\",algorithm=\\\"rsa-sha256\\\",signature=\\\"${signature}\\\"\" \\\
        \n  --url https://console.jumpcloud.com/api/systems/${systemKey}\n```\n\n\
        #### Input Data\n\nAll PUT and POST methods should use the HTTP Content-Type\
        \ header with a value of 'application/json'. PUT methods are used for updating\
        \ a record. POST methods are used to create a record.\n\nThe following example\
        \ demonstrates how to update the `displayName` of the system.\n\n```\nsignstr=\"\
        PUT /api/systems/${systemKey} HTTP/1.1\\ndate: ${now}\"\nsignature=`printf\
        \ \"$signstr\" | openssl dgst -sha256 -sign /opt/jc/client.key | openssl enc\
        \ -e -a | tr -d '\\n'` ;\n\ncurl -iq \\\n  -d \"{\\\"displayName\\\" : \\\"\
        updated-system-name-1\\\"}\" \\\n  -X \"PUT\" \\\n  -H \"Content-Type: application/json\"\
        \ \\\n  -H \"Accept: application/json\" \\\n  -H \"Date: ${now}\" \\\n  -H\
        \ \"Authorization: Signature keyId=\\\"system/${systemKey}\\\",headers=\\\"\
        request-line date\\\",algorithm=\\\"rsa-sha256\\\",signature=\\\"${signature}\\\
        \"\" \\\n  --url https://console.jumpcloud.com/api/systems/${systemKey}\n\
        ```\n\n\n#### Output Data\n\nAll results will be formatted as JSON.\n\nHere\
        \ is an abbreviated example of response output:\n\n```\n{\n  \"__v\": 0,\n\
        \  \"_id\": \"525ee96f52e144993e000015\",\n  \"agentServer\": \"lappy386\"\
        ,\n  \"agentVersion\": \"0.9.42\",\n  \"arch\": \"x86_64\",\n  \"connectionKey\"\
        : \"127.0.0.1_51812\",\n  \"displayName\": \"ubuntu-1204\",\n  \"firstContact\"\
        : \"2013-10-16T19:30:55.611Z\",\n  \"hostname\": \"ubuntu-1204\"\n  ...\n\
        ```\n\n\n### Additional Examples\n\n#### Signing Authentication Example\n\n\
        This example demonstrates how to make an authenticated request to fetch the\
        \ JumpCloud record for this system.\n\n[SigningExample.sh](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/shell/SigningExample.sh)\n\
        \n\n#### Shutdown Hook\n\nThis example demonstrates how to make authenticated\
        \ request on system shutdown.\nUsing an init.d script registered at run level\
        \ 0, you can call the System Context API as the system is shutting down.\n\
        \n[Instance-shutdown-initd](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/instance-shutdown-initd)\
        \ is an example of an init.d script that only runs at system shutdown.\n\n\
        After customizing the [instance-shutdown-initd](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/instance-shutdown-initd)\
        \ script, you should install it on the system(s) running the JumpCloud agent...\n\
        \n1. Copy the modified [instance-shutdown-initd](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/instance-shutdown-initd)\
        \ to `/etc/init.d/instance-shutdown`\n2. On Ubuntu systems, run `update-rc.d\
        \ instance-shutdown defaults`. On RedHat/CentOS systems, run `chkconfig --add\
        \ instance-shutdown`\n\n\n### Third Party\n\n#### Chef Cookbooks\n\n[https://github.com/nshenry03/jumpcloud](https://github.com/nshenry03/jumpcloud)\n\
        \n[https://github.com/cjs226/jumpcloud](https://github.com/cjs226/jumpcloud)"
      id: "system-context"
      name: "System Context"
      public: true
    v2-api:
      content: "### Directory Objects\n\nOur new API offers the ability to interact\
        \ with some of our core features; otherwise known as Directory Objects. The\
        \ Directory Objects are:\n\n* Commands\n* Policies\n* Applications\n* Systems\n\
        * Users\n* User Groups\n* System Groups\n* Radius Servers\n* Directories:\
        \ Office 365, LDAP,G-Suite, Active Directory\n* Duo accounts and applications.\n\
        \nThe Directory Object is an important concept to understand in order to successfully\
        \ use JumpCloud APIs.\n\n### JumpCloud Graph\n\nWe've also introduced the\
        \ concept of the JumpCloud Graph along with  Directory Objects. The Graph\
        \ is a powerful aspect of our platform which will enable you to associate\
        \ objects with each other, or establish membership for certain objects to\
        \ become members of other objects.\n\nSpecific `GET` endpoints will allow\
        \ you to traverse the JumpCloud Graph to return all indirect and directly\
        \ bound objects in your organization.\n\n\n### JumpCloud Graph Model Example\n\
        \nThe diagram below highlights our association and membership model as it\
        \ relates to Directory Objects.\n\n![alt text](https://s3.amazonaws.com/jumpcloud-kb/Knowledge+Base+Photos/API+Docs/jumpcloud_graph.png\
        \ \"JumpCloud Graph Model Example\")\n\n\n### API Considerations\n\nWe are\
        \ currently in the process of migrating our [API V1](https://docs.jumpcloud.com/1.0)\
        \  features to API V2. Depending on your type of integration you may be required\
        \ to use both V1 and V2 APIs.\n\nPlease refer to our [API V1](https://docs.jumpcloud.com/1.0)\
        \ docs to understand the functionality still available in that API set.\n\n\
        ### API SDKs\n\nYou can find language specific SDKs that can help you kickstart\
        \ your Integration with JumpCloud in the following GitHub repositories:\n\n\
        * [Python](https://github.com/TheJumpCloud/jcapi-python)\n* [Go](https://github.com/TheJumpCloud/jcapi-go)\n\
        * [Ruby](https://github.com/TheJumpCloud/jcapi-ruby)\n* [Java](https://github.com/TheJumpCloud/jcapi-java)"
      id: "v2-api"
      name: "V2 API"
      public: true
  version:
    groups:
      docs:
      - divider: false
        items:
        - _id: "org_crypto_put"
          type: "endpoints"
        - _id: "org_crypto_get"
          type: "endpoints"
        name: "Organizations"
      - divider: false
        items:
        - _id: "v2-api"
          type: "docTextSections"
        - _id: "api-changelog"
          type: "docTextSections"
        name: "API Overview"
      - description: ""
        divider: false
        items:
        - _id: "authentication-and-authorization-overview"
          type: "docTextSections"
        - _id: "system-context"
          type: "docTextSections"
        - _id: "multi-tenant-organization-api-headers"
          type: "docTextSections"
        name: "Authentication & Authorization"
      - description: "You can associate your groups of users to Active Directory."
        divider: false
        items:
        - _id: "graph_activeDirectoryAssociationsPost"
          type: "endpoints"
        - _id: "activedirectories_post"
          type: "endpoints"
        - _id: "activedirectories_delete"
          type: "endpoints"
        - _id: "activedirectories_list"
          type: "endpoints"
        - _id: "activedirectories_get"
          type: "endpoints"
        - _id: "graph_activeDirectoryTraverseUserGroup"
          type: "endpoints"
        - _id: "graph_activeDirectoryAssociationsList"
          type: "endpoints"
        - _id: "activedirectories_agentsList"
          type: "endpoints"
        - _id: "activedirectories_agentsGet"
          type: "endpoints"
        - _id: "activedirectories_agentsDelete"
          type: "endpoints"
        - _id: "activedirectories_agentsPost"
          type: "endpoints"
        name: "Active Directory"
      - description: "You can associate your Groups of Users with Applications that\
          \ are SSO enabled for easy access via JumpCloud's User Portal.\n\nPlease\
          \ see [this page](https://jumpcloud.com/daas-product/sso-single-sign-on)\
          \ for a full list of supported SSO apps."
        divider: false
        items:
        - _id: "oSvkKjXMXDRCDigPW"
          type: "endpoints"
        - _id: "graph_applicationAssociationsPost"
          type: "endpoints"
        - _id: "graph_applicationAssociationsList"
          type: "endpoints"
        - _id: "graph_applicationTraverseUser"
          type: "endpoints"
        - _id: "graph_applicationTraverseUserGroup"
          type: "endpoints"
        - _id: "GpsCqv5EJe7C8g3gi"
          type: "endpoints"
        name: "Applications"
      - divider: false
        items:
        - _id: "bulk_usersCreateResults"
          type: "endpoints"
        - _id: "bulk_usersCreate"
          type: "endpoints"
        - _id: "bulk_usersUpdate"
          type: "endpoints"
        - _id: "jobs_results"
          type: "endpoints"
        - _id: "jobs_get"
          type: "endpoints"
        name: "Bulk Job Requests"
      - description: "You can associate your Groups of Users or Systems with Commands.\n\
          \nPlease see [this page](https://support.jumpcloud.com/customer/portal/articles/2443893-using-the-commands-tab)\
          \ for more information on Commands."
        divider: false
        items:
        - _id: "4b2YvGPq7gRTpuNsk"
          type: "endpoints"
        - _id: "cubfZCh9HKWWqnSR7"
          type: "endpoints"
        - _id: "graph_commandAssociationsPost"
          type: "endpoints"
        - _id: "graph_commandAssociationsList"
          type: "endpoints"
        - _id: "graph_commandTraverseSystem"
          type: "endpoints"
        - _id: "graph_commandTraverseSystemGroup"
          type: "endpoints"
        - _id: "AC9tCEFMSDqk9hFKD"
          type: "schemas"
        - _id: "TkDovo4uYnDm6qNyj"
          type: "schemas"
        - _id: "5jEQyXrx8qSkQMm9q"
          type: "schemas"
        - _id: "Qs6Z9YexBXkHyTsPs"
          type: "schemas"
        - _id: "bbn5ztJs444czn3y7"
          type: "schemas"
        - _id: "aTdhv6ygRuaJZWEJp"
          type: "schemas"
        - _id: "WbYr4KDRGCQ2oj5wM"
          type: "schemas"
        - _id: "RCxMohSZD4WvRxB6e"
          type: "schemas"
        - _id: "p7ZrNkR7taQZ8xo5D"
          type: "schemas"
        - _id: "RRyEu9v9r8HRpGRHm"
          type: "schemas"
        - _id: "hXuvCC7TpQpMcoorZ"
          type: "schemas"
        - _id: "iGqpCFo43kXixJ4KE"
          type: "schemas"
        - _id: "cSMXzBSc73d3wLynW"
          type: "schemas"
        - _id: "QeMiCzxyEWwWb2BhL"
          type: "schemas"
        - _id: "fkLhQizgqFPsieegx"
          type: "schemas"
        - _id: "GYBhpRAqNLXBvTkfd"
          type: "schemas"
        - _id: "wBsqbJSy99t4xbq8f"
          type: "schemas"
        - _id: "icghut8wyMFmSD2fc"
          type: "schemas"
        - _id: "3YZP8o94zNs3TboQC"
          type: "schemas"
        - _id: "ar4AvRE4hLCyR3C5f"
          type: "schemas"
        - _id: "W9GEzqnBsESKuvRwp"
          type: "schemas"
        - _id: "J8Ju9fhzBZh5E94nH"
          type: "schemas"
        name: "Commands"
      - description: "You can associate your groups of users or systems with Directories.\
          \ (LDAP, Office 365, or G-Suite.)\n\nPlease see [this page](https://jumpcloud.com/daas-product/directory-services)\
          \ for more information on JumpCloud's Directories Services."
        divider: false
        items:
        - _id: "xaK74AR4z9LZSWQjy"
          type: "endpoints"
        - _id: "directories_list"
          type: "endpoints"
        - _id: "bt7NrBLGW3hjTcqFu"
          type: "endpoints"
        - _id: "fKHEZEPiAoAjdNnrs"
          type: "endpoints"
        - _id: "p78rXxMWTeeRazsHw"
          type: "endpoints"
        name: "Directories"
      - divider: false
        items:
        - _id: "duo_accountPost"
          type: "endpoints"
        - _id: "duo_accountGet"
          type: "endpoints"
        - _id: "duo_accountList"
          type: "endpoints"
        - _id: "duo_applicationPost"
          type: "endpoints"
        - _id: "duo_applicationGet"
          type: "endpoints"
        - _id: "duo_applicationList"
          type: "endpoints"
        - _id: "duo_applicationDelete"
          type: "endpoints"
        name: "Duo"
      - description: "Groups are designed to enhance JumpCloud's existing grouping\
          \ functionality which relied heavily on flexible “tags” to allow you to\
          \ organize users, systems and applications into hierarchies.\n\nOur Tagging\
          \ functionality worked well in the early days of JumpCloud, but as our our\
          \ users became more sophisticated, and our product’s reach has expanding\
          \ deeper into IT infrastructure we thought it was time to offer a more traditional\
          \ way of managing a directory’s hierarchy.\n\nYou can find more information\
          \ on Groups on [this page](https://support.jumpcloud.com/customer/en/portal/articles/2703450-getting-started-groups)."
        divider: false
        items:
        - _id: "byrbFjvbPaELLWEm9"
          type: "endpoints"
        - _id: "groups_list"
          type: "endpoints"
        name: "Groups"
      - description: "You can associate your Groups of Users to G-Suite.\nPlease see\
          \ [this page](https://support.jumpcloud.com/customer/portal/articles/2426953)\
          \ for more information on G-Suite."
        divider: false
        items:
        - _id: "gsuites_get"
          type: "endpoints"
        - _id: "gsuites_patch"
          type: "endpoints"
        - _id: "FDG6kMMJrX3kMJ9cn"
          type: "endpoints"
        - _id: "SSStLReXcKe4Dr4LD"
          type: "endpoints"
        - _id: "graph_gSuiteAssociationsPost"
          type: "endpoints"
        - _id: "graph_gSuiteAssociationsList"
          type: "endpoints"
        - _id: "graph_gSuiteTraverseUser"
          type: "endpoints"
        - _id: "graph_gSuiteTraverseUserGroup"
          type: "endpoints"
        - _id: "translationRules_gSuiteList"
          type: "endpoints"
        - _id: "translationRules_gSuitePost"
          type: "endpoints"
        - _id: "translationRules_gSuiteGet"
          type: "endpoints"
        - _id: "translationRules_gSuiteDelete"
          type: "endpoints"
        name: "G Suite"
      - description: "You can associate your groups of users to LDAP.   Please see\
          \ [this page](https://support.jumpcloud.com/customer/en/portal/topics/926832-ldap-as-a-service)\
          \ for more information on LDAP."
        divider: false
        items:
        - _id: "DG46bmf92DFRKBRuE"
          type: "endpoints"
        - _id: "XuTD8jvsNtCrbu3Sa"
          type: "endpoints"
        - _id: "graph_ldapServerAssociationsPost"
          type: "endpoints"
        - _id: "graph_ldapServerAssociationsList"
          type: "endpoints"
        - _id: "graph_ldapServerTraverseUser"
          type: "endpoints"
        - _id: "graph_ldapServerTraverseUserGroup"
          type: "endpoints"
        - _id: "ldapservers_list"
          type: "endpoints"
        - _id: "ldapservers_get"
          type: "endpoints"
        - _id: "ldapservers_patch"
          type: "endpoints"
        name: "LDAP Servers"
      - description: "You can associate your groups of users to Office 365.   Please\
          \ see [this page](https://support.jumpcloud.com/customer/en/portal/topics/926836-office-365-integration)\
          \ for more information on Office 365."
        divider: false
        items:
        - _id: "A7g5bR8ox8wEBLB6d"
          type: "endpoints"
        - _id: "graph_office365AssociationsPost"
          type: "endpoints"
        - _id: "graph_office365AssociationsList"
          type: "endpoints"
        - _id: "graph_office365TraverseUser"
          type: "endpoints"
        - _id: "graph_office365TraverseUserGroup"
          type: "endpoints"
        - _id: "translationRules_office365List"
          type: "endpoints"
        - _id: "translationRules_office365Post"
          type: "endpoints"
        - _id: "translationRules_office365Get"
          type: "endpoints"
        - _id: "translationRules_office365Delete"
          type: "endpoints"
        name: "Office 365"
      - description: "Jumpcloud provides a library of policy templates for Windows,\
          \ Mac and Linux which provide administrators the capability to set security\
          \ features or apply uniform configurations across a range of systems. These\
          \ endpoints allow you to interact with our Policies feature via the JumpCloud\
          \ API."
        divider: false
        items:
        - _id: "3j7iRXfuA4cJrRJi8"
          type: "endpoints"
        - _id: "policies_list"
          type: "endpoints"
        - _id: "policies_post"
          type: "endpoints"
        - _id: "policies_get"
          type: "endpoints"
        - _id: "policies_put"
          type: "endpoints"
        - _id: "policyresults_list"
          type: "endpoints"
        - _id: "policies_delete"
          type: "endpoints"
        - _id: "policystatuses_list"
          type: "endpoints"
        - _id: "graph_policyTraverseSystem"
          type: "endpoints"
        - _id: "graph_policyTraverseSystemGroup"
          type: "endpoints"
        - _id: "graph_policyAssociationsList"
          type: "endpoints"
        - _id: "graph_policyAssociationsPost"
          type: "endpoints"
        - _id: "policytemplates_list"
          type: "endpoints"
        - _id: "policytemplates_get"
          type: "endpoints"
        - _id: "policyresults_list"
          type: "endpoints"
        - _id: "policyresults_get"
          type: "endpoints"
        name: "Policies"
      - description: "Please contact support to get your ProviderID."
        divider: false
        items:
        - _id: "providers_listAdministrators"
          type: "endpoints"
        - _id: "providers_postAdmins"
          type: "endpoints"
        name: "Providers"
      - description: "You can associate your groups of users to Radius Servers.  \
          \ Please see [this page](https://support.jumpcloud.com/customer/en/portal/topics/926833-radius-as-a-service)\
          \ for more information on Radius."
        divider: false
        items:
        - _id: "graph_radiusServerAssociationsPost"
          type: "endpoints"
        - _id: "graph_radiusServerAssociationsList"
          type: "endpoints"
        - _id: "graph_radiusServerTraverseUser"
          type: "endpoints"
        - _id: "graph_radiusServerTraverseUserGroup"
          type: "endpoints"
        name: "RADIUS Servers"
      - divider: false
        items:
        - _id: "ldapservers_sambaDomainsPost"
          type: "endpoints"
        - _id: "ldapservers_sambaDomainsPut"
          type: "endpoints"
        - _id: "ldapservers_sambaDomainsDelete"
          type: "endpoints"
        - _id: "ldapservers_sambaDomainsList"
          type: "endpoints"
        - _id: "ldapservers_sambaDomainsGet"
          type: "endpoints"
        name: "Samba Domains"
      - description: "You can associate your Groups of Users with systems.\n\nTo obtain\
          \ your System IDs, you can use our [V1 Endpoints for Systems](https://docs.jumpcloud.com/1.0/systemusers).\n\
          \nPlease see [this page](https://support.jumpcloud.com/customer/en/portal/articles/2703450-getting-started-groups)\
          \ for more information on Groups and Systems."
        divider: false
        items:
        - _id: "4DjML5aWZnY3GXcDM"
          type: "endpoints"
        - _id: "Zdf254ynsk9DJR9oL"
          type: "endpoints"
        - _id: "graph_systemAssociationsPost"
          type: "endpoints"
        - _id: "graph_systemMemberOf"
          type: "endpoints"
        - _id: "graph_systemAssociationsList"
          type: "endpoints"
        - _id: "graph_systemTraversePolicy"
          type: "endpoints"
        - _id: "graph_systemTraverseUser"
          type: "endpoints"
        - _id: "graph_systemTraverseCommand"
          type: "endpoints"
        - _id: "graph_systemTraverseUserGroup"
          type: "endpoints"
        - _id: "policystatuses_list"
          type: "endpoints"
        - _id: "systems_getFDEKey"
          type: "endpoints"
        - _id: "6hSYwFNZPG6QLTd8o"
          type: "endpoints"
        - _id: "PqS5zb3kXFunF9FHs"
          type: "endpoints"
        name: "Systems"
      - description: "System Groups are designed to enhance JumpCloud's existing grouping\
          \ functionality which relied heavily on flexible “tags” to allow you to\
          \ organize users, systems and applications into hierarchies.\n\nWith System\
          \ Groups you can easily group Systems together and assign them to Groups\
          \ of Users.\n\nYou can find more information on Groups on [this page](https://support.jumpcloud.com/customer/en/portal/articles/2703450-getting-started-groups)."
        divider: false
        items:
        - _id: "e3ufsPvtsKCqCmPpA"
          type: "endpoints"
        - _id: "m5hjYe7nHomt75ghs"
          type: "endpoints"
        - _id: "jPih8cFWBWkA6x3cJ"
          type: "endpoints"
        - _id: "k3wxKsnGWNg6EhpnJ"
          type: "endpoints"
        - _id: "groups_system_post"
          type: "endpoints"
        - _id: "groups_system_put"
          type: "endpoints"
        - _id: "groups_system_patch"
          type: "endpoints"
        - _id: "groups_system_delete"
          type: "endpoints"
        - _id: "groups_system_list"
          type: "endpoints"
        - _id: "groups_system_get"
          type: "endpoints"
        name: "System Groups"
      - description: "Any Directory Object that supports grouping also has the ability\
          \ to allow management of the group members. This includes listing, adding\
          \ and removing Directory Objects and Groups of Directory Objects to and\
          \ from the Group. These endpoints allow you to control the members and membership\
          \ of System Objects.\n\nMembers are the direct objects of an object group.\
          \ \n\nMembership is defined as the direct and indirect members of an object\
          \ group."
        divider: false
        items:
        - _id: "graph_systemGroupMembersPost"
          type: "endpoints"
        - _id: "graph_systemGroupMemberOf"
          type: "endpoints"
        - _id: "graph_systemGroupMembership"
          type: "endpoints"
        - _id: "graph_systemGroupMembersList"
          type: "endpoints"
        name: "System Group Members & Membership"
      - description: "Directory Objects can be associated to one another to create\
          \ bidirectional member associations, i.e. users to systems, commands to\
          \ systems, users to applications, etc.  JumpCloud controls the types of\
          \ Directory Objects that exist and the pairings that can exist; but with\
          \ these set of endpoints we will allow you to leverage the JumpCloud Graph\
          \ to have more control over your System Group Associations."
        divider: false
        items:
        - _id: "graph_systemGroupAssociationsPost"
          type: "endpoints"
        - _id: "graph_systemGroupTraverseUser"
          type: "endpoints"
        - _id: "graph_systemGroupTraverseUserGroup"
          type: "endpoints"
        - _id: "graph_systemGroupTraversePolicy"
          type: "endpoints"
        - _id: "graph_systemGroupAssociationsList"
          type: "endpoints"
        - _id: "graph_systemGroupTraverseCommand"
          type: "endpoints"
        name: "System Group Associations"
      - divider: false
        items:
        - _id: "w3WqrWL3DFGYGzaaY"
          type: "endpoints"
        - _id: "systeminsights_list_chrome_extensions"
          type: "endpoints"
        - _id: "systeminsights_list_chrome_extensions"
          type: "endpoints"
        - _id: "system-insights-chrome-extensions"
          type: "schemas"
        - _id: "systeminsights_list_safari_extensions"
          type: "endpoints"
        - _id: "systeminsights_list_safari_extensions"
          type: "endpoints"
        - _id: "system-insights-safari-extensions"
          type: "schemas"
        - _id: "systeminsights_list_mounts"
          type: "endpoints"
        - _id: "systeminsights_list_mounts"
          type: "endpoints"
        - _id: "system-insights-mounts"
          type: "schemas"
        - _id: "systeminsights_list_browser_plugins"
          type: "endpoints"
        - _id: "systeminsights_list_browser_plugins"
          type: "endpoints"
        - _id: "system-insights-browser-plugins"
          type: "schemas"
        - _id: "systeminsights_list_firefox_addons"
          type: "endpoints"
        - _id: "systeminsights_list_firefox_addons"
          type: "endpoints"
        - _id: "system-insights-firefox-addons"
          type: "schemas"
        - _id: "systeminsights_list_apps"
          type: "endpoints"
        - _id: "systeminsights_list_apps"
          type: "endpoints"
        - _id: "system-insights-apps"
          type: "schemas"
        - _id: "systeminsights_list_disk_encryption"
          type: "endpoints"
        - _id: "systeminsights_list_disk_encryption"
          type: "endpoints"
        - _id: "system-insights-disk-encryption"
          type: "schemas"
        - _id: "systeminsights_list_os_version"
          type: "endpoints"
        - _id: "systeminsights_list_os_version"
          type: "endpoints"
        - _id: "system-insights-os-version"
          type: "schemas"
        - _id: "systeminsights_list_interface_addresses"
          type: "endpoints"
        - _id: "systeminsights_list_interface_addresses"
          type: "endpoints"
        - _id: "system-insights-interface-addresses"
          type: "schemas"
        - _id: "systeminsights_list_groups"
          type: "endpoints"
        - _id: "systeminsights_list_groups"
          type: "endpoints"
        - _id: "system-insights-groups"
          type: "schemas"
        - _id: "systeminsights_list_users"
          type: "endpoints"
        - _id: "systeminsights_list_users"
          type: "endpoints"
        - _id: "system-insights-users"
          type: "schemas"
        - _id: "systeminsights_list_system_info"
          type: "endpoints"
        - _id: "systeminsights_list_system_info"
          type: "endpoints"
        - _id: "system-insights-system-info"
          type: "schemas"
        - _id: "systeminsights_list_bitlocker_info"
          type: "endpoints"
        - _id: "systeminsights_list_bitlocker_info"
          type: "endpoints"
        - _id: "system-insights-bitlocker-info"
          type: "schemas"
        - _id: "systeminsights_list_disk_info"
          type: "endpoints"
        - _id: "systeminsights_list_disk_info"
          type: "endpoints"
        - _id: "system-insights-disk-info"
          type: "schemas"
        - _id: "systeminsights_list_etc_hosts"
          type: "endpoints"
        - _id: "systeminsights_list_etc_hosts"
          type: "endpoints"
        - _id: "system-insights-etc-hosts"
          type: "schemas"
        - _id: "systeminsights_list_logical_drives"
          type: "endpoints"
        - _id: "systeminsights_list_logical_drives"
          type: "endpoints"
        - _id: "system-insights-logical-drvies"
          type: "schemas"
        - _id: "systeminsights_list_patches"
          type: "endpoints"
        - _id: "systeminsights_list_patches"
          type: "endpoints"
        - _id: "system-insights-patches"
          type: "schemas"
        - _id: "systeminsights_list_programs"
          type: "endpoints"
        - _id: "systeminsights_list_programs"
          type: "endpoints"
        - _id: "system-insights-programs"
          type: "schemas"
        - _id: "systeminsights_list_kernel_info"
          type: "endpoints"
        - _id: "systeminsights_list_kernel_info"
          type: "endpoints"
        - _id: "system-insights-kernel-info"
          type: "schemas"
        - _id: "systeminsights_list_system_controls"
          type: "endpoints"
        - _id: "systeminsights_list_system_controls"
          type: "endpoints"
        - _id: "system-insights-system-controls"
          type: "schemas"
        - _id: "systeminsights_list_uptime"
          type: "endpoints"
        - _id: "systeminsights_list_uptime"
          type: "endpoints"
        - _id: "system-insights-uptime"
          type: "schemas"
        name: "System Insights"
      - description: "You can associate your Users with groups of Users, Systems,\
          \ Applications, Radius Servers, Commands and Directories.\n\nTo obtain you\
          \ your User IDs, you can use our V1 Endpoints for [System Users](https://docs.jumpcloud.com/1.0/systemusers)\n\
          \nPlease see [this page](https://support.jumpcloud.com/customer/en/portal/articles/2703450-getting-started-groups)\
          \ for more information on Groups and Systems."
        divider: false
        items:
        - _id: "5aNya5RzjgJed6BmL"
          type: "endpoints"
        - _id: "XpjQonbguJ55dy4TQ"
          type: "endpoints"
        - _id: "4uQMx676oTq4RTqF2"
          type: "endpoints"
        - _id: "BHuLmHMsdsTkF5f6H"
          type: "endpoints"
        - _id: "graph_userAssociationsPost"
          type: "endpoints"
        - _id: "graph_userMemberOf"
          type: "endpoints"
        - _id: "graph_userAssociationsList"
          type: "endpoints"
        - _id: "graph_userTraverseApplication"
          type: "endpoints"
        - _id: "graph_userTraverseDirectory"
          type: "endpoints"
        - _id: "graph_userTraverseGSuite"
          type: "endpoints"
        - _id: "graph_userTraverseLdapServer"
          type: "endpoints"
        - _id: "graph_userTraverseOffice365"
          type: "endpoints"
        - _id: "graph_userTraverseSystem"
          type: "endpoints"
        - _id: "graph_userTraverseRadiusServer"
          type: "endpoints"
        - _id: "graph_userTraverseSystemGroup"
          type: "endpoints"
        - _id: "users_sendEmails"
          type: "endpoints"
        name: "Users"
      - description: "User Groups are designed to enhance JumpCloud's existing grouping\
          \ functionality which relied heavily on flexible “tags” to allow you to\
          \ organize users, systems and applications into hierarchies.\n\nWith User\
          \ Groups you can easily group Users together and assign them to Systems.\n\
          \nYou can find more information on Groups on [this page](https://support.jumpcloud.com/customer/en/portal/articles/2703450-getting-started-groups)."
        divider: false
        items:
        - _id: "groups_user_post"
          type: "endpoints"
        - _id: "groups_user_put"
          type: "endpoints"
        - _id: "groups_user_patch"
          type: "endpoints"
        - _id: "groups_user_delete"
          type: "endpoints"
        - _id: "vycgDSzsLqZ4Ntdjk"
          type: "endpoints"
        - _id: "ExyRxHQtM8tZCmKiS"
          type: "endpoints"
        - _id: "HxDaihcTN24XfxTYT"
          type: "endpoints"
        - _id: "ycnNWjNDDW7b94ch2"
          type: "endpoints"
        - _id: "GbLmbD8YRLFqhaab8"
          type: "endpoints"
        - _id: "gF7r9PNuQ2PCkazSW"
          type: "endpoints"
        - _id: "h6EK4LxjcAFCx5pE2"
          type: "endpoints"
        - _id: "groups_user_list"
          type: "endpoints"
        - _id: "groups_user_get"
          type: "endpoints"
        name: "User Groups"
      - description: "Any Directory Object that supports grouping also has the ability\
          \ to allow management of the group members. This includes listing, adding\
          \ and removing Directory Objects and Groups of Directory Objects to and\
          \ from the Group. These endpoints allow you to control the members and membership\
          \ of User Objects.\n\nMembers are the direct objects of an object group.\
          \ \n\nMembership is defined as the direct and indirect members of an object\
          \ group."
        divider: false
        items:
        - _id: "graph_userGroupMembersPost"
          type: "endpoints"
        - _id: "graph_userGroupMemberOf"
          type: "endpoints"
        - _id: "graph_userGroupMembership"
          type: "endpoints"
        - _id: "graph_userGroupMembersList"
          type: "endpoints"
        name: "User Group Members & Membership"
      - description: "Directory Objects can be associated to one another to create\
          \ bidirectional membership associations, i.e. users to systems, commands\
          \ to systems, users to applications, etc. JumpCloud controls the types of\
          \ Directory Objects that exist and the pairings that can exist; but with\
          \ these set of endpoints we will allow you to leverage the JumpCloud Graph\
          \ to have more control over your User Group Associations."
        divider: false
        items:
        - _id: "graph_userGroupAssociationsPost"
          type: "endpoints"
        - _id: "graph_userGroupTraverseActiveDirectory"
          type: "endpoints"
        - _id: "graph_userGroupTraverseSystemGroup"
          type: "endpoints"
        - _id: "graph_userGroupAssociationsList"
          type: "endpoints"
        - _id: "graph_userGroupTraverseSystem"
          type: "endpoints"
        - _id: "graph_userGroupTraverseRadiusServer"
          type: "endpoints"
        - _id: "graph_userGroupTraverseOffice365"
          type: "endpoints"
        - _id: "graph_userGroupTraverseLdapServer"
          type: "endpoints"
        - _id: "graph_userGroupTraverseGSuite"
          type: "endpoints"
        - _id: "graph_userGroupTraverseDirectory"
          type: "endpoints"
        - _id: "graph_userGroupTraverseApplication"
          type: "endpoints"
        name: "User Group Associations"
      - divider: false
        items:
        - _id: "workdays_delete"
          type: "endpoints"
        - _id: "workdays_post"
          type: "endpoints"
        - _id: "workdays_get"
          type: "endpoints"
        - _id: "workdays_list"
          type: "endpoints"
        - _id: "workdays_put"
          type: "endpoints"
        - _id: "workdays_workers"
          type: "endpoints"
        - _id: "workdays_authorize"
          type: "endpoints"
        - _id: "workdays_deauthorize"
          type: "endpoints"
        - _id: "workdays_importresults"
          type: "endpoints"
        - _id: "workdays_import"
          type: "endpoints"
        - _id: "workdays_settings"
          type: "endpoints"
        name: "Workday Import"
      - description: "Models make up the core input and output structures in this\
          \ API. They are used in endpoint request and response bodies."
        divider: false
        items:
        - _id: "Administrator"
          type: "schemas"
        - _id: "auth-info"
          type: "schemas"
        - _id: "auth-input"
          type: "schemas"
        - _id: "auth-input-object"
          type: "schemas"
        - _id: "active-directory-output"
          type: "schemas"
        - _id: "active-directory-input"
          type: "schemas"
        - _id: "active-directory-agent-list-output"
          type: "schemas"
        - _id: "active-directory-agent-get-output"
          type: "schemas"
        - _id: "active-directory-agent-input"
          type: "schemas"
        - _id: "bulk-user-create"
          type: "schemas"
        - _id: "bulk-user-update"
          type: "schemas"
        - _id: "Directory"
          type: "schemas"
        - _id: "Error"
          type: "schemas"
        - _id: "GraphConnection"
          type: "schemas"
        - _id: "GraphManagementReq"
          type: "schemas"
        - _id: "GraphObject"
          type: "schemas"
        - _id: "GraphObjectWithPaths"
          type: "schemas"
        - _id: "GraphType"
          type: "schemas"
        - _id: "Group"
          type: "schemas"
        - _id: "GroupType"
          type: "schemas"
        - _id: "job-id"
          type: "schemas"
        - _id: "job-details"
          type: "schemas"
        - _id: "job-workresult"
          type: "schemas"
        - _id: "LdapServerAction"
          type: "schemas"
        - _id: "ldap-server-input"
          type: "schemas"
        - _id: "ldap-server-output"
          type: "schemas"
        - _id: "oauth-code-input"
          type: "schemas"
        - _id: "Policy"
          type: "schemas"
        - _id: "PolicyRequest"
          type: "schemas"
        - _id: "PolicyResult"
          type: "schemas"
        - _id: "PolicyTemplateConfigField"
          type: "schemas"
        - _id: "PolicyTemplate"
          type: "schemas"
        - _id: "PolicyTemplateWithDetails"
          type: "schemas"
        - _id: "PolicyValue"
          type: "schemas"
        - _id: "PolicyWithDetails"
          type: "schemas"
        - _id: "Provider"
          type: "schemas"
        - _id: "ProviderAdminReq"
          type: "schemas"
        - _id: "samba-domain-input"
          type: "schemas"
        - _id: "samba-domain-output"
          type: "schemas"
        - _id: "systemfdekey"
          type: "schemas"
        - _id: "SystemGraphManagementReq"
          type: "schemas"
        - _id: "SystemGroup"
          type: "schemas"
        - _id: "SystemGroupData"
          type: "schemas"
        - _id: "SystemGroupMembersReq"
          type: "schemas"
        - _id: "SystemGroupGraphManagementReq"
          type: "schemas"
        - _id: "UserGroup"
          type: "schemas"
        - _id: "UserGraphManagementReq"
          type: "schemas"
        - _id: "UserGroupGraphManagementReq"
          type: "schemas"
        - _id: "UserGroupMembersReq"
          type: "schemas"
        - _id: "UserGroupPut"
          type: "schemas"
        - _id: "UserGroupPost"
          type: "schemas"
        - _id: "hitWKRiHhPaZpAx7q"
          type: "schemas"
        - _id: "HaivXzJCYeryM9e35"
          type: "schemas"
        - _id: "workday-fields"
          type: "schemas"
        - _id: "workday-input"
          type: "schemas"
        - _id: "workday-output"
          type: "schemas"
        - _id: "workday-request"
          type: "schemas"
        - _id: "workday-worker"
          type: "schemas"
        - _id: "RY8pzvgBAsxtLMcXz"
          type: "schemas"
        - _id: "RaTvCDQQ3CezKdm3f"
          type: "schemas"
        - _id: "emailrequest"
          type: "schemas"
        - _id: "GSuiteBuiltinTranslation"
          type: "schemas"
        - _id: "Office365BuiltinTranslation"
          type: "schemas"
        - _id: "GSuiteTranslationRule"
          type: "schemas"
        - _id: "Office365TranslationRule"
          type: "schemas"
        - _id: "GSuiteTranslationRuleRequest"
          type: "schemas"
        - _id: "Office365TranslationRuleRequest"
          type: "schemas"
        - _id: "org-crypto-settings"
          type: "schemas"
        - _id: "gsuite-patch-input"
          type: "schemas"
        - _id: "gsuite-output"
          type: "schemas"
        - _id: "DuoAccount"
          type: "schemas"
        - _id: "DuoRegistrationApplication"
          type: "schemas"
        - _id: "DuoRegistrationApplicationReq"
          type: "schemas"
        - _id: "DuoApplication"
          type: "schemas"
        - _id: "DuoApplicationReq"
          type: "schemas"
        name: "Models"
      - description: "These Traits describe  the common behaviors or structures in\
          \ this API."
        divider: false
        items:
        - _id: "aggregate"
          type: "traits"
        - _id: "fields"
          type: "traits"
        - _id: "filter"
          type: "traits"
        - _id: "graphTargets"
          type: "traits"
        - _id: "graphSystemGroupTargets"
          type: "traits"
        - _id: "graphSystemTargets"
          type: "traits"
        - _id: "graphUserGroupTargets"
          type: "traits"
        - _id: "graphUserTargets"
          type: "traits"
        - _id: "limit"
          type: "traits"
        - _id: "listCount"
          type: "traits"
        - _id: "multiTenantRequestHeaders"
          type: "traits"
        - _id: "requestHeaders"
          type: "traits"
        - _id: "skip"
          type: "traits"
        - _id: "sort"
          type: "traits"
        - _id: "systemContextAuth"
          type: "traits"
        - _id: "limitMax100"
          type: "traits"
        - _id: "systemInsightsFilter"
          type: "traits"
        name: "Traits"
      savedEntries: []
      tests: []
      traits: []
      utilFuncs: []
x-tests: {}
