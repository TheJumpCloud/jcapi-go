---
swagger: "2.0"
info:
  description: " JumpCloud's V1 API. This set of endpoints allows JumpCloud customers\
    \ to manage commands, systems, & system users."
  version: "1.0"
  title: "JumpCloud APIs"
host: "console.jumpcloud.com"
basePath: "/api"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /applications:
    get:
      tags:
      - "Applications"
      summary: "Applications"
      description: "The endpoint returns all your SSO / SAML Applications.\n\n####\
        \ Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/applications\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n\n```"
      operationId: "applications_list"
      parameters:
      - name: "fields"
        in: "query"
        description: "The comma separated fields included in the returned records.\
          \ If omitted the default list of fields will be returned."
        required: false
        type: "string"
        x-exportParamName: "Fields"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        required: false
        type: "string"
        default: "The comma separated fields used to sort the collection. Default\
          \ sort is ascending, prefix with - to sort descending."
        x-exportParamName: "Sort"
      - name: "filter"
        in: "query"
        description: "A filter to apply to the query."
        required: false
        type: "string"
        x-exportParamName: "Filter"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/applicationslist"
      security:
      - x-api-key: []
      x-stoplight:
        id: "applications_list"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /command/trigger/{triggername}:
    post:
      tags:
      - "Command Triggers"
      summary: "Launch a command via a Trigger"
      description: "This endpoint allows you to launch a command based on a defined\
        \ trigger.\n\n#### Sample Requests\n\n**Launch a Command via a Trigger**\n\
        \n```\ncurl --silent \\\n     -X 'POST' \\\n     -H \"x-api-key: {API_KEY}\"\
        \ \\\n     \"https://console.jumpcloud.com/api/command/trigger/{TriggerName}\"\
        \n```\n**Launch a Command via a Trigger passing a JSON object to the command**\n\
        ```\ncurl --silent \\\n     -X 'POST' \\\n     -H \"x-api-key: {API_KEY}\"\
        \ \\\n     -H 'Accept: application/json' \\\n     -H 'Content-Type: application/json'\
        \ \\\n     -d '{ \"srcip\":\"192.168.2.32\", \"attack\":\"Cross Site Scripting\
        \ Attempt\" }' \\\n     \"https://console.jumpcloud.com/api/command/trigger/{TriggerName}\"\
        \n```"
      operationId: "command_trigger_webhook_post"
      parameters:
      - name: "triggername"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Triggername"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
        401:
          description: ""
      security:
      - x-api-key: []
      x-stoplight:
        id: "command_trigger_webhook_post"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          dynamic: false
          enabled: false
  /commands/:
    get:
      tags:
      - "Commands"
      summary: "List All Commands"
      description: "This endpoint returns all commands.\n\n#### Sample Request\n```\n\
        curl -X GET https://console.jumpcloud.com/api/commands/ \\\n  -H 'Accept:\
        \ application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key:\
        \ {API_KEY}'\n\n```"
      operationId: "commands_list"
      parameters:
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Skip"
      - name: "fields"
        in: "query"
        description: "Use a space seperated string of field parameters to include\
          \ the data in the response. If omitted, the default list of fields will\
          \ be returned.\n"
        required: false
        type: "string"
        x-exportParamName: "Fields"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "sort"
        in: "query"
        description: "Use space separated sort parameters to sort the collection.\n\
          Default sort is ascending. Prefix with `-` to sort descending.\n"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "filter"
        in: "query"
        description: "A filter to apply to the query."
        required: false
        type: "string"
        x-exportParamName: "Filter"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/commandslist"
        401:
          description: "Unauthorized"
      security:
      - x-api-key: []
      x-stoplight:
        id: "commands_list"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          dynamic: false
          enabled: false
    post:
      tags:
      - "Commands"
      summary: "Create A Command"
      description: "This endpoint allows you to create a new command.\n\n#### Sample\
        \ Request\n\n```\ncurl -X POST https://console.jumpcloud.com/api/commands/\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n\t\"name\":\"Test API Command\"\
        ,\n\t\"command\":\"String\",\n\t\"user\":\"{UserID}\",\n\t\"schedule\":\"\"\
        ,\n\t\"timeout\":\"100\"\n}'\n\n```"
      operationId: "commands_post"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/command"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/command"
        401:
          description: "Unauthorized"
      security:
      - x-api-key: []
      x-stoplight:
        id: "commands_post"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          dynamic: false
          enabled: false
  /commands/{id}:
    get:
      tags:
      - "Commands"
      summary: "List an individual Command"
      description: "This endpoint returns a specific command based on the command\
        \ ID.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/commands/{CommandID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "commands_get"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: "Use a space seperated string of field parameters to include\
          \ the data in the response. If omitted, the default list of fields will\
          \ be returned.\n"
        required: false
        type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "A filter to apply to the query."
        required: false
        type: "string"
        x-exportParamName: "Filter"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/command"
        401:
          description: "Unauthorized"
      security:
      - x-api-key: []
      x-stoplight:
        id: "commands_get"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          dynamic: false
          enabled: false
    put:
      tags:
      - "Commands"
      summary: "Update a Command"
      description: "This endpoint Updates a command based on the command ID and returns\
        \ the modified command record.\n\n#### Sample Request\n```\ncurl -X PUT https://console.jumpcloud.com/api/commands/{CommandID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n\t\"name\":\"Test API Command\"\
        ,\n\t\"command\":\"String\",\n\t\"user\":\"{UserID}\",\n\t\"schedule\":\"\"\
        ,\n\t\"timeout\":\"100\"\n}'\n\n```"
      operationId: "commands_put"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/command"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/command"
        401:
          description: "Unauthorized"
      security:
      - x-api-key: []
      x-stoplight:
        id: "commands_put"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          dynamic: false
          enabled: false
    delete:
      tags:
      - "Commands"
      summary: "Delete a Command"
      description: "This endpoint deletes a specific command based on the Command\
        \ ID.\n\n#### Sample Request\n```\ncurl -X DELETE https://console.jumpcloud.com/api/commands/{CommandID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n\n```"
      operationId: "commands_delete"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
        401:
          description: "Unauthorized"
      security:
      - x-api-key: []
      x-stoplight:
        id: "commands_delete"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          dynamic: false
          enabled: false
  /files/command/{id}:
    get:
      tags:
      - "Commands"
      summary: "Get a Command File"
      description: "This endpoint returns the uploaded file(s) associated with a specific\
        \ command.\n\n#### Sample Request\n\n```\ncurl -X GET https://console.jumpcloud.com/api/files/command/{commandID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "command_file_get"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: "Use a space seperated string of field parameters to include\
          \ the data in the response. If omitted, the default list of fields will\
          \ be returned.\n"
        required: false
        type: "string"
        x-exportParamName: "Fields"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Skip"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/commandfilereturn"
        400:
          description: ""
          schema:
            type: "object"
            properties: {}
      security:
      - x-api-key: []
      x-stoplight:
        id: "command_file_get"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /commandresults:
    get:
      tags:
      - "Command Results"
      summary: "List all Command Results"
      description: "This endpoint returns all command results.\n\n#### Sample Request\n\
        ```\ncurl -X GET https://console.jumpcloud.com/api/commandresults \\\n  -H\
        \ 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n\
        \  -H 'x-api-key:{API_KEY}'\n  ```"
      operationId: "command_results_list"
      parameters:
      - name: "fields"
        in: "query"
        description: "Use a space seperated string of field parameters to include\
          \ the data in the response. If omitted, the default list of fields will\
          \ be returned.\n"
        required: false
        type: "string"
        x-exportParamName: "Fields"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "Use space separated sort parameters to sort the collection.\n\
          Default sort is ascending. Prefix with `-` to sort descending.\n"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "filter"
        in: "query"
        description: "A filter to apply to the query."
        required: false
        type: "string"
        x-exportParamName: "Filter"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/commandresultslist"
        401:
          description: "Unauthorized"
      security:
      - x-api-key: []
      x-stoplight:
        id: "command_results_list"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          dynamic: false
          enabled: false
  /commandresults/{id}:
    get:
      tags:
      - "Command Results"
      summary: "List an individual Command result"
      description: "This endpoint returns a specific command result.\n\n#### Sample\
        \ Request\n```\ncurl -X GET https://console.jumpcloud.com/api/commandresults/{CommandResultID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "command_results_get"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: "Use a space seperated string of field parameters to include\
          \ the data in the response. If omitted, the default list of fields will\
          \ be returned.\n"
        required: false
        type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "A filter to apply to the query."
        required: false
        type: "string"
        x-exportParamName: "Filter"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/commandresult"
        401:
          description: "Unauthorized"
      security:
      - x-api-key: []
      x-stoplight:
        id: "command_results_get"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          dynamic: false
          enabled: false
    delete:
      tags:
      - "Command Results"
      summary: "Delete a Command result"
      description: "This endpoint deletes a specific command result.\n\n#### Sample\
        \ Request\n```\ncurl -X GET https://console.jumpcloud.com/api/commandresults/{CommandID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ````"
      operationId: "command_results_delete"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/commandresult"
        401:
          description: "Unauthorized"
      security:
      - x-api-key: []
      x-stoplight:
        id: "command_results_delete"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          dynamic: false
          enabled: false
  /organizations:
    get:
      tags:
      - "Organizations"
      summary: "Get Organization Details"
      description: "This endpoint returns Organization Details.\n\n#### Sample Request\n\
        \n```\ncurl -X GET \\\n  https://console.jumpcloud.com/api/organizations \\\
        \n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "organization_list"
      parameters:
      - name: "fields"
        in: "query"
        description: "Use a space seperated string of field parameters to include\
          \ the data in the response. If omitted, the default list of fields will\
          \ be returned.\n"
        required: false
        type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "A filter to apply to the query."
        required: false
        type: "string"
        x-exportParamName: "Filter"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "Use space separated sort parameters to sort the collection.\n\
          Default sort is ascending. Prefix with `-` to sort descending.\n"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "search"
        in: "query"
        description: "A nested object containing a string `searchTerm` and a list\
          \ of `fields` to search on."
        required: false
        type: "string"
        x-exportParamName: "Search"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/organizationslist"
      security:
      - x-api-key: []
      x-stoplight:
        id: "organization_list"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /radiusservers:
    get:
      tags:
      - "Radius Servers"
      summary: "List Radius Servers"
      description: "This endpoint allows you to get a list of all RADIUS servers in\
        \ your organization.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/radiusservers/\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n```"
      operationId: "radius_servers_list"
      parameters:
      - name: "fields"
        in: "query"
        description: "Use a space seperated string of field parameters to include\
          \ the data in the response. If omitted, the default list of fields will\
          \ be returned.\n"
        required: false
        type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "A filter to apply to the query."
        required: false
        type: "string"
        x-exportParamName: "Filter"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "Use space separated sort parameters to sort the collection.\n\
          Default sort is ascending. Prefix with `-` to sort descending.\n"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/radiusserverslist"
      security:
      - x-api-key: []
      x-stoplight:
        id: "radius_servers_list"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    post:
      tags:
      - "Radius Servers"
      summary: "Create a Radius Server"
      description: "This endpoint allows you to create RADIUS servers in your organization.\n\
        \n#### Sample Request\n```\ncurl -X POST https://console.jumpcloud.com/api/radiusservers/\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n    \"name\": \"{test_radius}\"\
        ,\n    \"networkSourceIp\": \"{0.0.0.0}\",\n    \"sharedSecret\":\"{secretpassword}\"\
        ,\n    \"userLockoutAction\": \"REMOVE\",\n    \"userPasswordExpirationAction\"\
        : \"MAINTAIN\"\n}'\n```"
      operationId: "radius_servers_post"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/radiusserverpost"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/radiusserverslist"
      security:
      - x-api-key: []
      x-stoplight:
        id: "radius_servers_post"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /radiusservers:id:
    put:
      tags:
      - "Radius Servers"
      summary: "Update Radius Servers"
      description: "This endpoint allows you to update RADIUS servers in your organization.\n\
        \n####\n```\ncurl -X PUT https://console.jumpcloud.com/api/radiusservers/{ServerID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n    \"name\": \"{name_update}\"\
        ,\n    \"networkSourceIp\": \"{0.0.0.0}\",\n    \"userLockoutAction\": \"\
        REMOVE\",\n    \"userPasswordExpirationAction\": \"MAINTAIN\"\n}'\n```"
      operationId: "radius_servers_put"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/body"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/radiusserverput"
      security:
      - x-api-key: []
      x-stoplight:
        id: "radius_servers_put"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /search/organizations:
    post:
      tags:
      - "Search"
      summary: "Search Organizations"
      description: "This endpoint will return Organization data based on your search\
        \ parameters. This endpoint WILL NOT allow you to add a new Organization.\n\
        \nYou can use the supported parameters and pass those in the body of request.\n\
        \nThe parameters must be passed as Content-Type application/json.\n\n\n####\
        \ Sample Request\n```\ncurl -X POST https://console.jumpcloud.com/api/search/organizations\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n  \"search\":{\n    \"fields\"\
        \ : [\"settings.name\"],\n    \"searchTerm\": \"Second\"\n    },\n  \"fields\"\
        : [\"_id\", \"displayName\", \"logoUrl\"],\n  \"limit\" : 0,\n  \"skip\" :\
        \ 0\n}'\n```"
      operationId: "search_organizations_post"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/search"
        x-exportParamName: "Body"
      - name: "fields"
        in: "query"
        description: "Use a space seperated string of field parameters to include\
          \ the data in the response. If omitted, the default list of fields will\
          \ be returned.\n"
        required: false
        type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "A filter to apply to the query."
        required: false
        type: "string"
        x-exportParamName: "Filter"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Skip"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/organizationslist"
        401:
          description: "Unauthorized"
      security:
      - x-api-key: []
      x-stoplight:
        id: "search_organizations_post"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          dynamic: false
          enabled: false
  /search/systems:
    post:
      tags:
      - "Search"
      summary: "Search Systems"
      description: "Return Systems in multi-record format allowing for the passing\
        \ of the `filter` and `searchFilter` parameters. This WILL NOT allow you to\
        \ add a new system.\n\nTo support advanced filtering you can use the `filter`\
        \ and `searchFilter` parameters that can only be passed in the body of POST\
        \ /api/search/* routes. The `filter` and `searchFilter` parameters must be\
        \ passed as Content-Type application/json.\n\nThe `filter` parameter is an\
        \ object with a single property, either `and` or `or` with the value of the\
        \ property being an array of query expressions.\n\nThis allows you to filter\
        \ records using the logic of matching ALL or ANY records in the array of query\
        \ expressions. If the `and` or `or` are not included the default behavior\
        \ is to match ALL query expressions.\n\nThe `searchFilter` parameter allows\
        \ text searching on supported fields by specifying a `searchTerm` and a list\
        \ of `fields` to query on. If any `field` has a partial text match on the`searchTerm`\
        \ the record will be returned.\n\n\n#### Sample Request\n\nExact search for\
        \ a list of hostnames\n```\ncurl -X POST https://console.jumpcloud.com/api/search/systems\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n  \"filter\": {\n    \"or\"\
        : [\n      {\"hostname\" : \"my-hostname\"},\n      {\"hostname\" : \"other-hostname\"\
        }\n    ]\n  },\n  \"fields\" : \"os hostname displayName\"\n}'\n```\n\nText\
        \ search for a hostname or display name\n```\ncurl -X POST https://console.jumpcloud.com/api/search/systems\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n  \"searchFilter\": {\n   \
        \ \"searchTerm\": \"my-host\",\n    \"fields\": [\"hostname\", \"displayName\"\
        ]\n  },\n  \"fields\": \"os hostname displayName\"\n}'\n```\n\nCombining `filter`\
        \ and `searchFilter` to search for names that match a given OS\n```\ncurl\
        \ -X POST https://console.jumpcloud.com/api/search/systems \\\n  -H 'Accept:\
        \ application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key:\
        \ {API_KEY}' \\\n  -d '{\n  \"searchFilter\": {\n    \"searchTerm\": \"my-host\"\
        ,\n    \"fields\": [\"hostname\", \"displayName\"]\n  },\n  \"filter\": {\n\
        \    \"or\": [\n      {\"os\" : \"Ubuntu\"},\n      {\"os\" : \"Mac OS X\"\
        }\n    ]\n  },\n  \"fields\": \"os hostname displayName\"\n}'\n```"
      operationId: "search_systems_post"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/search"
        x-exportParamName: "Body"
      - name: "fields"
        in: "query"
        description: "Use a space seperated string of field parameters to include\
          \ the data in the response. If omitted, the default list of fields will\
          \ be returned.\n"
        required: false
        type: "string"
        x-exportParamName: "Fields"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Skip"
      - name: "filter"
        in: "query"
        description: "A filter to apply to the query."
        required: false
        type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/systemslist"
        401:
          description: "Unauthorized"
      security:
      - x-api-key: []
      x-stoplight:
        id: "search_systems_post"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          dynamic: false
          enabled: false
  /search/systemusers:
    post:
      tags:
      - "Search"
      summary: "Search System Users"
      description: "Return System Users in multi-record format allowing for the passing\
        \ of the `filter` and `searchFilter` parameters. This WILL NOT allow you to\
        \ add a new system user.\n\nTo support advanced filtering you can use the\
        \ `filter` and `searchFilter` parameters that can only be passed in the body\
        \ of POST /api/search/* routes. The `filter` and `searchFilter` parameters\
        \ must be passed as Content-Type application/json.\n\nThe `filter` parameter\
        \ is an object with a single property, either `and` or `or` with the value\
        \ of the property being an array of query expressions.\n\nThis allows you\
        \ to filter records using the logic of matching ALL or ANY records in the\
        \ array of query expressions. If the `and` or `or` are not included the default\
        \ behavior is to match ALL query expressions.\n\nThe `searchFilter` parameter\
        \ allows text searching on supported fields by specifying a `searchTerm` and\
        \ a list of `fields` to query on. If any `field` has a partial text match\
        \ on the`searchTerm` the record will be returned.\n\n\n#### Sample Request\n\
        \nExact search for a list of system users in a department\n```\ncurl -X POST\
        \ https://console.jumpcloud.com/api/search/systemusers \\\n  -H 'Accept: application/json'\
        \ \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\
        \ \\\n  -d '{\n  \"filter\" : [{\"department\" : \"IT\"}],\n  \"fields\" :\
        \ \"email username sudo\"\n}'\n```\n\nText search for system users with and\
        \ email on a domain\n```\ncurl -X POST https://console.jumpcloud.com/api/search/systemusers\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n  \"searchFilter\" : {\n  \
        \  \"searchTerm\": \"@jumpcloud.com\",\n    \"fields\": [\"email\"]\n  },\n\
        \  \"fields\" : \"email username sudo\"\n}'\n```\n\nCombining `filter` and\
        \ `searchFilter` to text search for system users with and email on a domain\
        \ who are in a list of departments\n```\ncurl -X POST https://console.jumpcloud.com/api/search/systemusers\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n  \"searchFilter\": {\n   \
        \ \"searchTerm\": \"@jumpcloud.com\",\n    \"fields\": [\"email\"]\n  },\n\
        \  \"filter\": {\n    \"or\": [\n      {\"department\" : \"IT\"},\n      {\"\
        department\" : \"Sales\"}\n    ]\n  },\n  \"fields\" : \"email username sudo\"\
        \n}'\n```"
      operationId: "search_systemusers_post"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/search"
        x-exportParamName: "Body"
      - name: "fields"
        in: "query"
        description: "Use a space seperated string of field parameters to include\
          \ the data in the response. If omitted, the default list of fields will\
          \ be returned.\n"
        required: false
        type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "A filter to apply to the query."
        required: false
        type: "string"
        x-exportParamName: "Filter"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Skip"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/systemuserslist"
        401:
          description: "Unauthorized"
      security:
      - x-api-key: []
      x-stoplight:
        id: "search_systemusers_post"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          dynamic: false
          enabled: false
  /systems:
    get:
      tags:
      - "Systems"
      summary: "List All Systems"
      description: "This endpoint returns all Systems.\n\n#### Sample Requests\n```\n\
        curl -X GET https://console.jumpcloud.com/api/systems \\\n  -H 'Accept: application/json'\
        \ \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n\
        \n```"
      operationId: "systems_list"
      parameters:
      - name: "fields"
        in: "query"
        description: "Use a space seperated string of field parameters to include\
          \ the data in the response. If omitted, the default list of fields will\
          \ be returned.\n"
        required: false
        type: "string"
        x-exportParamName: "Fields"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "search"
        in: "query"
        description: "A nested object containing a string `searchTerm` and a list\
          \ of `fields` to search on."
        required: false
        type: "string"
        x-exportParamName: "Search"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "Use space separated sort parameters to sort the collection.\n\
          Default sort is ascending. Prefix with `-` to sort descending.\n"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "filter"
        in: "query"
        description: "A filter to apply to the query."
        required: false
        type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/systemslist"
      security:
      - x-api-key: []
      x-stoplight:
        id: "systems_list"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /systems/{id}:
    get:
      tags:
      - "Systems"
      summary: "List an individual system"
      description: "This endpoint returns an individual system.\n\n#### Sample Request\n\
        ```\ncurl -X GET https://console.jumpcloud.com/api/systems/{SystemID} \\\n\
        \  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "systems_get"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: "Use a space seperated string of field parameters to include\
          \ the data in the response. If omitted, the default list of fields will\
          \ be returned.\n"
        required: false
        type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "A filter to apply to the query."
        required: false
        type: "string"
        x-exportParamName: "Filter"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "Date"
        in: "header"
        description: "Current date header for the System Context API"
        required: false
        type: "string"
        x-exportParamName: "Date"
      - name: "Authorization"
        in: "header"
        description: "Authorization header for the System Context API"
        required: false
        type: "string"
        x-exportParamName: "Authorization"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/system"
      security:
      - x-api-key: []
      x-stoplight:
        id: "systems_get"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    put:
      tags:
      - "Systems"
      summary: "Update a system"
      description: "This endpoint allows you to update a system.\n\n#### Sample Request\
        \ \n```\ncurl -X PUT https://console.jumpcloud.com/api/systems/{SystemID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n\t\"displayName\":\"Name_Update\"\
        ,\n\t\"allowSshPasswordAuthentication\":\"true\",\n\t\"allowSshRootLogin\"\
        :\"true\",\n\t\"allowMultiFactorAuthentication\":\"true\",\n\t\"allowPublicKeyAuthentication\"\
        :\"false\"\n}'\n```"
      operationId: "systems_put"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/systemput"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "Date"
        in: "header"
        description: "Current date header for the System Context API"
        required: false
        type: "string"
        x-exportParamName: "Date"
      - name: "Authorization"
        in: "header"
        description: "Authorization header for the System Context API"
        required: false
        type: "string"
        x-exportParamName: "Authorization"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
      security:
      - x-api-key: []
      x-stoplight:
        id: "systems_put"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    delete:
      tags:
      - "Systems"
      summary: "Delete a System"
      description: "This endpoint allows you to delete a system. This command will\
        \ cause the system to uninstall the JumpCloud agent from its self which can\
        \ can take about a minute. If the system is not connected to JumpCloud the\
        \ system record will simply be removed.\n\n#### Sample Request\n```\ncurl\
        \ -X DELETE https://console.jumpcloud.com/api/systems/{SystemID} \\\n  -H\
        \ 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n\
        \  -H 'x-api-key: {API_KEY}'\n  ```"
      operationId: "systems_delete"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "Date"
        in: "header"
        description: "Current date header for the System Context API"
        required: false
        type: "string"
        x-exportParamName: "Date"
      - name: "Authorization"
        in: "header"
        description: "Authorization header for the System Context API"
        required: false
        type: "string"
        x-exportParamName: "Authorization"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/system"
      security:
      - x-api-key: []
      x-stoplight:
        id: "systems_delete"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /systems/{id}/systemusers:
    get:
      tags:
      - "Systems"
      summary: "List system user bindings"
      description: "Hidden as Tags is deprecated\n\nList system user bindings for\
        \ a specific system in a system and user binding format.\n\nThis endpoint\
        \ is only used for users still using JumpCloud Tags. If you are using JumpCloud\
        \ Groups please refer to the documentation found [here](https://docs.jumpcloud.com/2.0/systems/manage-associations-of-a-system).\n\
        \n#### Sample Request\n\n*List system user bindings for specific system*\n\
        \n```\ncurl -X https://console.jumpcloud.com/api/systems/{SystemID}/systemusers\\\
        \n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\
        \n  \"\n```"
      operationId: "systems_systemusers_binding_list"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: "Use a space seperated string of field parameters to include\
          \ the data in the response. If omitted, the default list of fields will\
          \ be returned.\n"
        required: false
        type: "string"
        x-exportParamName: "Fields"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "Use space separated sort parameters to sort the collection.\n\
          Default sort is ascending. Prefix with `-` to sort descending.\n"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "filter"
        in: "query"
        description: "A filter to apply to the query."
        required: false
        type: "string"
        x-exportParamName: "Filter"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/systemuserbinding"
        401:
          description: "Unauthorized"
      security:
      - x-api-key: []
      x-stoplight:
        id: "systems_systemusers_binding_list"
        beforeScript: null
        afterScript: null
        public: false
        mock:
          statusCode: 200
          dynamic: false
          enabled: false
    put:
      tags:
      - "Systems"
      summary: "Update a system's or user's binding"
      description: "Hidden as Tags is deprecated\n\nAdds or removes a user binding\
        \ for a system.\n\nThis endpoint is only used for users still using JumpCloud\
        \ Tags. If you are using JumpCloud Groups please refer to the documentation\
        \ found [here](https://docs.jumpcloud.com/2.0/systems/manage-associations-of-a-system).\n\
        \n#### Sample Request\n\n*Add (or remove) a system user to (from) a system*\n\
        \n```\ncurl \\\n  -d '{ \"add\": [\"[SYSTEM_USER_ID_TO_ADD_HERE]\"], \"remove\"\
        : [\"[SYSTEM_USER_ID_TO_REMOVE_HERE]\"] }' \\\n  -X PUT \\\n  -H 'Content-Type:\
        \ application/json' \\\n  -H 'Accept: application/json' \\\n  -H \"x-api-key:\
        \ [YOUR_API_KEY_HERE]\" \\\n  \"https://console.jumpcloud.com/api/systems/[SYSTEM_ID_HERE]/systemusers"
      operationId: "systems_systemusers_binding_put"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/systemuserbindingsput"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
        400:
          description: ""
          schema:
            type: "object"
            properties: {}
      security:
      - x-api-key: []
      x-stoplight:
        id: "systems_systemusers_binding_put"
        beforeScript: null
        afterScript: null
        public: false
        mock:
          statusCode: 200
          dynamic: false
          enabled: false
  /systemusers:
    get:
      tags:
      - "Systemusers"
      summary: "List all system users"
      description: "This endpoint returns all systemusers.\n\n#### Sample Request\n\
        \n```\ncurl -X GET https://console.jumpcloud.com/api/systemusers \\\n  -H\
        \ 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n\
        \  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "systemusers_list"
      parameters:
      - name: "limit"
        in: "query"
        description: "The number of records to return at once."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "The comma separated fields used to sort the collection.\nDefault\
          \ sort is ascending, prefix with `-` to sort descending.\n"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "fields"
        in: "query"
        description: "The comma separated fields included in the returned records.\n\
          If omitted the default list of fields will be returned.\n"
        required: false
        type: "string"
        x-exportParamName: "Fields"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "search"
        in: "query"
        description: "A nested object containing a string `searchTerm` and a list\
          \ of `fields` to search on."
        required: false
        type: "string"
        x-exportParamName: "Search"
      - name: "filter"
        in: "query"
        description: "A filter to apply to the query."
        required: false
        type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/systemuserslist"
        401:
          description: ""
      security:
      - x-api-key: []
      x-stoplight:
        id: "systemusers_list"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          dynamic: false
          enabled: false
    post:
      tags:
      - "Systemusers"
      summary: "Create a system user"
      description: "This endpoint allows you to create a new system user.\n\n####\
        \ Sample Request\n\n```\ncurl -X POST https://console.jumpcloud.com/api/systemusers\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n\t\"username\":\"{username}\"\
        ,\n\t\"email\":\"{email_address}\",\n\t\"firstname\":\"{Name}\",\n\t\"lastname\"\
        :\"{Name}\"\n}'\n```"
      operationId: "systemusers_post"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/systemuserputpost"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "User added successfully"
          schema:
            $ref: "#/definitions/systemuserreturn"
        400:
          description: "User already exists"
        401:
          description: "Unauthorized"
      security:
      - x-api-key: []
      x-stoplight:
        id: "systemusers_post"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          dynamic: false
          enabled: false
  /systemusers/{id}:
    get:
      tags:
      - "Systemusers"
      summary: "List a system user"
      description: "This endpoint returns a particular System User.\n\n#### Sample\
        \ Request\n\n```\ncurl -X GET https://console.jumpcloud.com/api/systemusers/{UserID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "systemusers_get"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: "Use a space seperated string of field parameters to include\
          \ the data in the response. If omitted, the default list of fields will\
          \ be returned.\n"
        required: false
        type: "string"
        x-exportParamName: "Fields"
      - name: "filter"
        in: "query"
        description: "A filter to apply to the query."
        required: false
        type: "string"
        x-exportParamName: "Filter"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/systemuserreturn"
        401:
          description: "Unauthorized"
      security:
      - x-api-key: []
      x-stoplight:
        id: "systemusers_get"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          dynamic: false
          enabled: false
    put:
      tags:
      - "Systemusers"
      summary: "Update a system user"
      description: "This endpoint allows you to update a system user.\n\n#### Sample\
        \ Request\n\n```\ncurl -X PUT https://console.jumpcloud.com/api/systemusers/{UserID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n\t\"email\":\"{email_address}\"\
        ,\n\t\"firstname\":\"{Name}\",\n\t\"lastname\":\"{Name}\"\n}'\n```"
      operationId: "systemusers_put"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/systemuserput"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/systemuserreturn"
        401:
          description: "Unauthorized"
      security:
      - x-api-key: []
      x-stoplight:
        id: "systemusers_put"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          dynamic: false
          enabled: false
    delete:
      tags:
      - "Systemusers"
      summary: "Delete a system user"
      description: "This endpoint allows you to delete a particular system user.\n\
        \n#### Sample Request\n```\ncurl -X DELETE https://console.jumpcloud.com/api/systemusers/{UserID}\
        \ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}'\n```"
      operationId: "systemusers_delete"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/systemuserreturn"
        401:
          description: "Unauthorized"
      security:
      - x-api-key: []
      x-stoplight:
        id: "systemusers_delete"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          statusCode: 200
          dynamic: false
          enabled: false
  /systemusers/{id}/systems:
    get:
      tags:
      - "Systemusers"
      summary: "List system user binding"
      description: "Hidden as Tags is deprecated\n\nAdds or removes a system binding\
        \ for a user.\n\nThis endpoint is only used for users still using JumpCloud\
        \ Tags. If you are using JumpCloud Groups please refer to the documentation\
        \ found [here](https://docs.jumpcloud.com/2.0/systems/manage-associations-of-a-system).\n\
        \n\nList system bindings for a specific system user in a system and user binding\
        \ format.\n\n### Examples\n\n#### List system bindings for specific system\
        \ user\n\n```\ncurl \\\n  -H 'Content-Type: application/json' \\\n  -H \"\
        x-api-key: [YOUR_API_KEY_HERE]\" \\\n  \"https://console.jumpcloud.com/api/systemusers/[SYSTEM_USER_ID_HERE]/systems\"\
        \n```"
      operationId: "systemusers_systems_binding_list"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: "Use a space seperated string of field parameters to include\
          \ the data in the response. If omitted, the default list of fields will\
          \ be returned.\n"
        required: false
        type: "string"
        x-exportParamName: "Fields"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "Use space separated sort parameters to sort the collection.\n\
          Default sort is ascending. Prefix with `-` to sort descending.\n"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "filter"
        in: "query"
        description: "A filter to apply to the query."
        required: false
        type: "string"
        x-exportParamName: "Filter"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
      security:
      - x-api-key: []
      x-stoplight:
        id: "systemusers_systems_binding_list"
        beforeScript: null
        afterScript: null
        public: false
        mock:
          statusCode: 200
          dynamic: false
          enabled: false
    put:
      tags:
      - "Systemusers"
      summary: "Update a system user binding"
      description: "Hidden as Tags is deprecated\n\nAdds or removes a system binding\
        \ for a user.\n\nThis endpoint is only used for users still using JumpCloud\
        \ Tags. If you are using JumpCloud Groups please refer to the documentation\
        \ found [here](https://docs.jumpcloud.com/2.0/systems/manage-associations-of-a-system).\n\
        \n### Example\n\n#### Add (or remove) system to system user\n\n```\ncurl \\\
        \n  -d '{ \"add\": [\"[SYSTEM_ID_TO_ADD_HERE]\"], \"remove\": [\"[SYSTEM_ID_TO_REMOVE_HERE]\"\
        ] }' \\\n  -X PUT \\\n  -H 'Content-Type: application/json' \\\n  -H 'Accept:\
        \ application/json' \\\n  -H \"x-api-key: [YOUR_API_KEY_HERE]\" \\\n  \"https://console.jumpcloud.com/api/systemusers/[SYSTEM_USER_ID_HERE]/systems\"\
        \n```"
      operationId: "systemusers_systems_binding_put"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/usersystembindingsput"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/usersystembinding"
        401:
          description: "Unauthorized"
      security:
      - x-api-key: []
      x-stoplight:
        id: "systemusers_systems_binding_put"
        beforeScript: null
        afterScript: null
        public: false
        mock:
          statusCode: 200
          dynamic: false
          enabled: false
  /systemusers/{id}/resetmfa:
    post:
      tags:
      - "Systemusers"
      summary: "Reset a system user's MFA token"
      description: "This endpoint allows you to reset the MFA TOTP token for a specified\
        \ system user and put them in an MFA enrollment period. This will result in\
        \ the user being prompted to setup MFA when logging into userportal. Please\
        \ be aware that if the user does not complete MFA setup before the `exclusionUntil`\
        \ date, they will be locked out of any resources that require MFA.\n\nPlease\
        \ refer to our [Knowledge Base Article](https://support.jumpcloud.com/customer/en/portal/articles/2959138-using-multifactor-authentication-with-jumpcloud)\
        \ on setting up MFA for more information.\n\n#### Sample Request\n```\ncurl\
        \ -X POST \\\n  https://console.jumpcloud.com/api/systemusers/{UserID}/resetmfa\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -H 'Content-Type: application/json'\
        \ \\\n  -d '{\"exclusion\": true, \"exclusionUntil\": \"{date-time}\"}'\n\n\
        \n```"
      operationId: "systemusers_resetmfa"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/body_1"
        x-exportParamName: "Body"
      - name: "x-api-key"
        in: "header"
        required: true
        type: "string"
        x-exportParamName: "XApiKey"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
        400:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        401:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        403:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        404:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        500:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
      security:
      - x-api-key: []
      x-stoplight:
        id: "systemusers_resetmfa"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /systemusers/{id}/sshkeys:
    get:
      tags:
      - "Systemusers"
      summary: "List a system user's public SSH keys"
      description: "This endpoint will return a specific System User's public SSH\
        \ key."
      operationId: "sshkey_list"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/sshkeylist"
        400:
          description: ""
          schema:
            type: "object"
            description: "Bad Request"
            properties: {}
      security:
      - x-api-key: []
      x-stoplight:
        id: "sshkey_list"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    post:
      tags:
      - "Systemusers"
      summary: "Create a system user's Public SSH Key"
      description: "This endpoint will create a specific System User's Public SSH\
        \ Key."
      operationId: "sshkey_post"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/sshkeypost"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/sshkeylist"
        400:
          description: ""
          schema:
            type: "object"
            description: "Bad Request"
            properties: {}
      security:
      - x-api-key: []
      x-stoplight:
        id: "sshkey_post"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /systemusers/{id}/sshkeys/{id}:
    delete:
      tags:
      - "Systemusers"
      summary: "Delete a system user's Public SSH Keys"
      description: "This endpoint will delete a specific System User's SSH Key."
      operationId: "sshkey_delete"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
        400:
          description: ""
          schema:
            type: "object"
            description: "Bad Request"
            properties: {}
      security:
      - x-api-key: []
      x-stoplight:
        id: "sshkey_delete"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /systemusers/{id}/unlock:
    post:
      tags:
      - "Systemusers"
      summary: "Unlock a system user"
      description: "This endpoint allows you to unlock a user's account."
      operationId: "systemusers_unlock"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "x-org-id"
        in: "header"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "XOrgId"
      responses:
        200:
          description: ""
        400:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        401:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        403:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        404:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
        500:
          description: ""
          schema:
            $ref: "#/definitions/errorresponse"
      security:
      - x-api-key: []
      x-stoplight:
        id: "systemusers_unlock"
        beforeScript: null
        afterScript: null
        public: true
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /tags:
    get:
      tags:
      - "Tags"
      summary: "List All Tags"
      description: "Hidden as Tags is deprecated\n\nReturns all Tags."
      operationId: "tags_list"
      parameters:
      - name: "fields"
        in: "query"
        description: "Use a space seperated string of field parameters to include\
          \ the data in the response. If omitted, the default list of fields will\
          \ be returned.\n"
        required: false
        type: "string"
        x-exportParamName: "Fields"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "Use space separated sort parameters to sort the collection.\n\
          Default sort is ascending. Prefix with `-` to sort descending.\n"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "filter"
        in: "query"
        description: "A filter to apply to the query."
        required: false
        type: "string"
        x-exportParamName: "Filter"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/tagslist"
      security:
      - x-api-key: []
      x-stoplight:
        id: "tags_list"
        beforeScript: null
        afterScript: null
        public: false
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
    post:
      tags:
      - "Tags"
      summary: "Create a Tag"
      description: "Hidden as Tags is deprecated\n\nCreate a tag.\n\n### Examples\n\
        #### Create a new Tag\n\n```\ncurl \\\n  -d '{\"name\" : \"Developers\"}'\
        \ \\\n  -X 'POST' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Accept:\
        \ application/json' \\\n  -H \"x-api-key: [YOUR_API_KEY_HERE]\" \\\n  \"https://console.jumpcloud.com/api/tags\"\
        \n```"
      operationId: "tags_post"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/tagpost"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/tag"
          examples:
            application/json:
              _id: "58ea6b6610caf935133a3822"
              name: "test123"
              systems: []
              systemusers: []
              regularExpressions: []
              externallyManaged: false
              sendToLDAP: false
      security:
      - x-api-key: []
      x-stoplight:
        id: "tags_post"
        beforeScript: null
        afterScript: null
        public: false
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /Tags/{name}:
    get:
      tags:
      - "Tags"
      summary: "List a Tag"
      description: "Hidden as Tags is deprecated\n\nReturns a specific tag."
      operationId: "tags_get"
      parameters:
      - name: "name"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "fields"
        in: "query"
        description: "Use a space seperated string of field parameters to include\
          \ the data in the response. If omitted, the default list of fields will\
          \ be returned.\n"
        required: false
        type: "string"
        x-exportParamName: "Fields"
      - name: "limit"
        in: "query"
        description: "The number of records to return at once. Limited to 100."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
      - name: "skip"
        in: "query"
        description: "The offset into the records to return."
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Skip"
      - name: "sort"
        in: "query"
        description: "Use space separated sort parameters to sort the collection.\n\
          Default sort is ascending. Prefix with `-` to sort descending.\n"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "filter"
        in: "query"
        description: "A filter to apply to the query."
        required: false
        type: "string"
        x-exportParamName: "Filter"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/tag"
      security:
      - x-api-key: []
      x-stoplight:
        id: "tags_get"
        beforeScript: null
        afterScript: null
        public: false
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /Tag/{name}:
    put:
      tags:
      - "Tags"
      summary: "Update a Tag"
      description: "Hidden as Tags is deprecated\n\nUpdate a specific tag."
      operationId: "tags_put"
      parameters:
      - name: "name"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/tagput"
        x-exportParamName: "Body"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/tag"
      security:
      - x-api-key: []
      x-stoplight:
        id: "tags_put"
        beforeScript: null
        afterScript: null
        public: false
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
  /tags/{name}:
    delete:
      tags:
      - "Tags"
      summary: "Delete a Tag"
      description: "Hidden as Tags is deprecated\n\nDelete a Tag."
      operationId: "tags_delete"
      parameters:
      - name: "name"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "ContentType"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        default: "application/json"
        x-exportParamName: "Accept"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/tag"
      security:
      - x-api-key: []
      x-stoplight:
        id: "tags_delete"
        beforeScript: null
        afterScript: null
        public: false
        mock:
          enabled: false
          dynamic: false
          statusCode: 200
securityDefinitions:
  x-api-key:
    type: "apiKey"
    name: "x-api-key"
    in: "header"
definitions:
  sshkeylist:
    type: "object"
    properties:
      create_date:
        type: "string"
        description: "The date the SSH key was created."
      _id:
        type: "string"
        description: "The ID of the SSH key."
      public_key:
        type: "string"
        description: "The Public SSH key."
      name:
        type: "string"
        description: "The name of the SSH key."
    title: "SSHKeyList"
    example:
      public_key: "public_key"
      name: "name"
      _id: "_id"
      create_date: "create_date"
    x-stoplight:
      id: "sshkeylist"
      name: "SSHKeyList"
      public: true
  errorresponse:
    type: "object"
    properties:
      message:
        type: "string"
    title: "ErrorResponse"
    x-stoplight:
      id: "errorresponse"
      name: "ErrorResponse"
      public: true
  mfa:
    type: "object"
    properties:
      exclusion:
        type: "boolean"
      exclusionUntil:
        type: "string"
        format: "date-time"
      configured:
        type: "boolean"
    title: "mfa"
    example:
      configured: true
      exclusion: true
      exclusionUntil: "2000-01-23T04:56:07.000+00:00"
    x-stoplight:
      id: "mfa"
      name: "mfa"
      public: true
  systemuser:
    type: "object"
    properties:
      email:
        type: "string"
        maxLength: 1024
      username:
        type: "string"
        maxLength: 1024
      allow_public_key:
        type: "boolean"
      public_key:
        type: "string"
      ssh_keys:
        type: "array"
        items:
          $ref: "#/definitions/sshkeylist"
      sudo:
        type: "boolean"
      enable_managed_uid:
        type: "boolean"
      unix_uid:
        type: "integer"
        minimum: 1
      unix_guid:
        type: "integer"
        minimum: 1
      activated:
        type: "boolean"
      tags:
        type: "array"
        items:
          type: "string"
      password_expired:
        type: "boolean"
      account_locked:
        type: "boolean"
      passwordless_sudo:
        type: "boolean"
      externally_managed:
        type: "boolean"
      external_dn:
        type: "string"
      external_source_type:
        type: "string"
      firstname:
        type: "string"
        maxLength: 1024
      lastname:
        type: "string"
        maxLength: 1024
      ldap_binding_user:
        type: "boolean"
      enable_user_portal_multifactor:
        type: "boolean"
      associatedTagCount:
        type: "integer"
        minimum: 0
      totp_enabled:
        type: "boolean"
      password_expiration_date:
        type: "string"
      attributes:
        type: "array"
        items:
          type: "object"
          properties: {}
      created:
        type: "string"
      samba_service_user:
        type: "boolean"
      password_never_expires:
        type: "boolean"
      _id:
        type: "string"
      middlename:
        type: "string"
        maxLength: 1024
      displayname:
        type: "string"
        maxLength: 1024
      description:
        type: "string"
        maxLength: 1024
      location:
        type: "string"
        maxLength: 1024
      costCenter:
        type: "string"
        maxLength: 1024
      employeeType:
        type: "string"
        maxLength: 1024
      company:
        type: "string"
        maxLength: 1024
      employeeIdentifier:
        type: "string"
        description: "Must be unique per user. "
        maxLength: 256
      jobTitle:
        type: "string"
        maxLength: 1024
      department:
        type: "string"
        maxLength: 1024
      mfa:
        $ref: "#/definitions/mfa"
    title: "SystemUser"
    x-stoplight:
      id: "systemuser"
      name: "SystemUser"
      public: true
  systemuserputpost:
    type: "object"
    required:
    - "email"
    - "username"
    properties:
      email:
        type: "string"
        maxLength: 1024
      username:
        type: "string"
      allow_public_key:
        type: "boolean"
      public_key:
        type: "string"
      sudo:
        type: "boolean"
      enable_managed_uid:
        type: "boolean"
      unix_uid:
        type: "integer"
        minimum: 1
      unix_guid:
        type: "integer"
        minimum: 1
      activated:
        type: "boolean"
      tags:
        type: "array"
        items:
          type: "string"
      account_locked:
        type: "boolean"
      passwordless_sudo:
        type: "boolean"
      externally_managed:
        type: "boolean"
      external_dn:
        type: "string"
      external_source_type:
        type: "string"
      firstname:
        type: "string"
      lastname:
        type: "string"
      ldap_binding_user:
        type: "boolean"
      enable_user_portal_multifactor:
        type: "boolean"
      attributes:
        type: "array"
        items:
          type: "object"
          properties: {}
      samba_service_user:
        type: "boolean"
      addresses:
        type: "array"
        items:
          $ref: "#/definitions/systemuserputpost_addresses"
      jobTitle:
        type: "string"
      department:
        type: "string"
      phoneNumbers:
        type: "array"
        items:
          $ref: "#/definitions/systemuserputpost_phoneNumbers"
      relationships:
        type: "array"
        items:
          type: "object"
          properties: {}
      password:
        type: "string"
      password_never_expires:
        type: "boolean"
      middlename:
        type: "string"
      displayname:
        type: "string"
      description:
        type: "string"
        maxLength: 1024
      location:
        type: "string"
      costCenter:
        type: "string"
      employeeType:
        type: "string"
      company:
        type: "string"
      employeeIdentifier:
        type: "string"
        description: "Must be unique per user. "
        maxLength: 256
      mfa:
        $ref: "#/definitions/mfa"
    title: "SystemUserPost"
    x-stoplight:
      id: "systemuserputpost"
      name: "SystemUserPost"
      public: true
  systemuserbindingsput:
    type: "object"
    required:
    - "add"
    - "remove"
    properties:
      add:
        type: "array"
        description: "The list of systemuser ids to be added to this system."
        items:
          type: "string"
      remove:
        type: "array"
        description: "The list of systemuser ids to be removed from this system."
        items:
          type: "string"
    title: "SystemUserBindingsPut"
    x-stoplight:
      id: "systemuserbindingsput"
      name: "SystemUserBindingsPut"
      public: true
  commandresult:
    type: "object"
    properties:
      command:
        type: "string"
        description: "The command that was executed on the system."
      name:
        type: "string"
        description: "The name of the command."
      system:
        type: "string"
        description: "The name of the system the command was executed on."
      systemId:
        type: "string"
        description: "The id of the system the command was executed on."
      organization:
        type: "string"
        description: "The ID of the organization."
      workflowId:
        type: "string"
      workflowInstanceId:
        type: "string"
      user:
        type: "string"
        description: "The user the command ran as."
      sudo:
        type: "boolean"
        description: "If the user had sudo rights"
      files:
        type: "array"
        description: "An array of file ids that were included in the command"
        items:
          type: "string"
      requestTime:
        type: "string"
        description: "The time that the command was sent."
      responseTime:
        type: "string"
        description: "The time that the command was completed."
      response:
        $ref: "#/definitions/commandresult_response"
      _id:
        type: "string"
        description: "The ID of the command."
    title: "CommandResult"
    example:
      systemId: "systemId"
      responseTime: "responseTime"
      command: "command"
      requestTime: "requestTime"
      system: "system"
      response:
        data:
          output: "output"
          exitCode: 6
        id: "id"
        error: "error"
      organization: "organization"
      name: "name"
      files:
      - "files"
      - "files"
      sudo: true
      _id: "_id"
      workflowInstanceId: "workflowInstanceId"
      user: "user"
      workflowId: "workflowId"
    x-stoplight:
      id: "commandresult"
      name: "CommandResult"
      public: true
  command:
    type: "object"
    required:
    - "command"
    - "user"
    properties:
      name:
        type: "string"
      command:
        type: "string"
        description: "The command to execute on the server."
      commandType:
        type: "string"
        description: "The Command OS"
      commandRunners:
        type: "array"
        description: "An array of IDs of the Command Runner Users that can execute\
          \ this command."
        items:
          type: "string"
      user:
        type: "string"
        description: "The ID of the system user to run the command as."
      sudo:
        type: "boolean"
        description: ""
      systems:
        type: "array"
        description: "An array of system IDs to run the command on. Not available\
          \ if you are using Groups."
        items:
          type: "string"
      launchType:
        type: "string"
        description: "How the command will execute."
      listensTo:
        type: "string"
        description: ""
      scheduleRepeatType:
        type: "string"
        description: "When the command will repeat."
      schedule:
        type: "string"
        description: "A crontab that consists of: [ (seconds) (minutes) (hours) (days\
          \ of month) (months) (weekdays) ] or [ immediate ]. If you send this as\
          \ an empty string, it will run immediately.\n"
      files:
        type: "array"
        description: "An array of file IDs to include with the command."
        items:
          type: "string"
      timeout:
        type: "string"
        description: "The time in seconds to allow the command to run for."
      organization:
        type: "string"
        description: "The ID of the organization."
    title: "Command"
    example:
      scheduleRepeatType: "scheduleRepeatType"
      commandType: "commandType"
      commandRunners:
      - "commandRunners"
      - "commandRunners"
      command: "command"
      timeout: "timeout"
      schedule: "schedule"
      systems:
      - "systems"
      - "systems"
      organization: "organization"
      name: "name"
      files:
      - "files"
      - "files"
      sudo: true
      listensTo: "listensTo"
      user: "user"
      launchType: "launchType"
    x-stoplight:
      id: "command"
      name: "Command"
      public: true
  search:
    type: "object"
    properties:
      filter:
        type: "object"
        properties: {}
      fields:
        type: "string"
      searchFilter:
        type: "object"
        properties: {}
    title: "Search"
    x-stoplight:
      id: "search"
      name: "Search"
      public: true
  systemuserreturn:
    type: "object"
    properties:
      email:
        type: "string"
        maxLength: 1024
      username:
        type: "string"
        maxLength: 1024
      allow_public_key:
        type: "boolean"
      public_key:
        type: "string"
      ssh_keys:
        type: "array"
        items:
          $ref: "#/definitions/sshkeylist"
      sudo:
        type: "boolean"
      enable_managed_uid:
        type: "boolean"
      unix_uid:
        type: "integer"
        minimum: 1
      unix_guid:
        type: "integer"
        minimum: 1
      activated:
        type: "boolean"
      tags:
        type: "array"
        items:
          type: "string"
      password_expired:
        type: "boolean"
      account_locked:
        type: "boolean"
      passwordless_sudo:
        type: "boolean"
      externally_managed:
        type: "boolean"
      external_dn:
        type: "string"
      external_source_type:
        type: "string"
      firstname:
        type: "string"
        maxLength: 1024
      lastname:
        type: "string"
        maxLength: 1024
      ldap_binding_user:
        type: "boolean"
      enable_user_portal_multifactor:
        type: "boolean"
      totp_enabled:
        type: "boolean"
      attributes:
        type: "array"
        items:
          type: "object"
          properties: {}
      created:
        type: "string"
      samba_service_user:
        type: "boolean"
      _id:
        type: "string"
      organization:
        type: "string"
      addresses:
        type: "array"
        items:
          $ref: "#/definitions/systemuserreturn_addresses"
      jobTitle:
        type: "string"
        maxLength: 1024
      department:
        type: "string"
        maxLength: 1024
      phoneNumbers:
        type: "array"
        items:
          $ref: "#/definitions/systemuserreturn_phoneNumbers"
      relationships:
        type: "array"
        items:
          type: "object"
          properties: {}
      badLoginAttempts:
        type: "integer"
        minimum: 0
      password_never_expires:
        type: "boolean"
      middlename:
        type: "string"
        maxLength: 1024
      displayname:
        type: "string"
        maxLength: 1024
      description:
        type: "string"
        maxLength: 1024
      location:
        type: "string"
        maxLength: 1024
      costCenter:
        type: "string"
        maxLength: 1024
      employeeType:
        type: "string"
        maxLength: 1024
      company:
        type: "string"
        maxLength: 1024
      employeeIdentifier:
        type: "string"
        description: "Must be unique per user. "
        maxLength: 256
      mfa:
        $ref: "#/definitions/mfa"
    title: "SystemUserReturn"
    example:
      public_key: "public_key"
      firstname: "firstname"
      addresses:
      - poBox: "poBox"
        country: "country"
        streetAddress: "streetAddress"
        postalCode: "postalCode"
        locality: "locality"
        id: "id"
        type: "type"
        extendedAddress: "extendedAddress"
        region: "region"
      - poBox: "poBox"
        country: "country"
        streetAddress: "streetAddress"
        postalCode: "postalCode"
        locality: "locality"
        id: "id"
        type: "type"
        extendedAddress: "extendedAddress"
        region: "region"
      badLoginAttempts: 0
      account_locked: true
      totp_enabled: true
      unix_guid: 1
      jobTitle: "jobTitle"
      samba_service_user: true
      description: "description"
      allow_public_key: true
      phoneNumbers:
      - number: "number"
        id: "id"
        type: "type"
      - number: "number"
        id: "id"
        type: "type"
      relationships:
      - "{}"
      - "{}"
      unix_uid: 1
      passwordless_sudo: true
      externally_managed: true
      ldap_binding_user: true
      company: "company"
      sudo: true
      department: "department"
      email: "email"
      enable_managed_uid: true
      password_expired: true
      created: "created"
      costCenter: "costCenter"
      middlename: "middlename"
      mfa:
        configured: true
        exclusion: true
        exclusionUntil: "2000-01-23T04:56:07.000+00:00"
      external_source_type: "external_source_type"
      tags:
      - "tags"
      - "tags"
      lastname: "lastname"
      employeeIdentifier: "employeeIdentifier"
      ssh_keys:
      - public_key: "public_key"
        name: "name"
        _id: "_id"
        create_date: "create_date"
      - public_key: "public_key"
        name: "name"
        _id: "_id"
        create_date: "create_date"
      employeeType: "employeeType"
      organization: "organization"
      password_never_expires: true
      displayname: "displayname"
      enable_user_portal_multifactor: true
      attributes:
      - "{}"
      - "{}"
      location: "location"
      external_dn: "external_dn"
      _id: "_id"
      username: "username"
      activated: true
    x-stoplight:
      id: "systemuserreturn"
      name: "SystemUserReturn"
      public: true
  commandslist:
    type: "object"
    properties:
      totalCount:
        type: "integer"
        description: "The total number of commands"
      results:
        $ref: "#/definitions/commandslist_results"
    title: "CommandsList"
    example:
      totalCount: 0
      results:
        schedule: "schedule"
        scheduleRepeatType: "scheduleRepeatType"
        commandType: "commandType"
        organization: "organization"
        name: "name"
        listensTo: "listensTo"
        trigger: "trigger"
        _id: "_id"
        command: "command"
        launchType: "launchType"
    x-stoplight:
      id: "commandslist"
      name: "CommandsList"
      public: true
  commandresultslist:
    type: "object"
    properties:
      totalCount:
        type: "integer"
        description: "The total number of command results"
      results:
        type: "array"
        description: "The list of command results"
        items:
          $ref: "#/definitions/commandresult"
    title: "CommandResultsList"
    example:
      totalCount: 0
      results:
      - systemId: "systemId"
        responseTime: "responseTime"
        command: "command"
        requestTime: "requestTime"
        system: "system"
        response:
          data:
            output: "output"
            exitCode: 6
          id: "id"
          error: "error"
        organization: "organization"
        name: "name"
        files:
        - "files"
        - "files"
        sudo: true
        _id: "_id"
        workflowInstanceId: "workflowInstanceId"
        user: "user"
        workflowId: "workflowId"
      - systemId: "systemId"
        responseTime: "responseTime"
        command: "command"
        requestTime: "requestTime"
        system: "system"
        response:
          data:
            output: "output"
            exitCode: 6
          id: "id"
          error: "error"
        organization: "organization"
        name: "name"
        files:
        - "files"
        - "files"
        sudo: true
        _id: "_id"
        workflowInstanceId: "workflowInstanceId"
        user: "user"
        workflowId: "workflowId"
    x-stoplight:
      id: "commandresultslist"
      name: "CommandResultsList"
      public: true
  radiusserver:
    type: "object"
    properties:
      _id:
        type: "string"
      organization:
        type: "string"
      networkSourceIp:
        type: "string"
      sharedSecret:
        type: "string"
      name:
        type: "string"
      tags:
        type: "array"
        items:
          type: "string"
      tagNames:
        type: "array"
        items:
          type: "string"
      userLockoutAction:
        type: "string"
      userPasswordExpirationAction:
        type: "string"
      mfa:
        type: "string"
        enum:
        - "DISABLED"
        - "ENABLED"
        - "REQUIRED"
        - "ALWAYS"
    title: "RadiusServer"
    example:
      networkSourceIp: "networkSourceIp"
      userLockoutAction: "userLockoutAction"
      organization: "organization"
      name: "name"
      mfa: "DISABLED"
      userPasswordExpirationAction: "userPasswordExpirationAction"
      _id: "_id"
      sharedSecret: "sharedSecret"
      tagNames:
      - "tagNames"
      - "tagNames"
      tags:
      - "tags"
      - "tags"
    x-stoplight:
      id: "radiusserver"
      name: "RadiusServer"
      public: true
  radiusserverslist:
    type: "object"
    properties:
      totalCount:
        type: "integer"
      results:
        type: "array"
        items:
          $ref: "#/definitions/radiusserver"
    title: "RadiusServersList"
    example:
      totalCount: 0
      results:
      - networkSourceIp: "networkSourceIp"
        userLockoutAction: "userLockoutAction"
        organization: "organization"
        name: "name"
        mfa: "DISABLED"
        userPasswordExpirationAction: "userPasswordExpirationAction"
        _id: "_id"
        sharedSecret: "sharedSecret"
        tagNames:
        - "tagNames"
        - "tagNames"
        tags:
        - "tags"
        - "tags"
      - networkSourceIp: "networkSourceIp"
        userLockoutAction: "userLockoutAction"
        organization: "organization"
        name: "name"
        mfa: "DISABLED"
        userPasswordExpirationAction: "userPasswordExpirationAction"
        _id: "_id"
        sharedSecret: "sharedSecret"
        tagNames:
        - "tagNames"
        - "tagNames"
        tags:
        - "tags"
        - "tags"
    x-stoplight:
      id: "radiusserverslist"
      name: "RadiusServersList"
      public: true
  systemuserslist:
    type: "object"
    properties:
      totalCount:
        type: "integer"
        description: "The total number of system users."
      results:
        type: "array"
        description: "The list of system users."
        items:
          $ref: "#/definitions/systemuserreturn"
    title: "SystemUsersList"
    example:
      totalCount: 0
      results:
      - public_key: "public_key"
        firstname: "firstname"
        addresses:
        - poBox: "poBox"
          country: "country"
          streetAddress: "streetAddress"
          postalCode: "postalCode"
          locality: "locality"
          id: "id"
          type: "type"
          extendedAddress: "extendedAddress"
          region: "region"
        - poBox: "poBox"
          country: "country"
          streetAddress: "streetAddress"
          postalCode: "postalCode"
          locality: "locality"
          id: "id"
          type: "type"
          extendedAddress: "extendedAddress"
          region: "region"
        badLoginAttempts: 0
        account_locked: true
        totp_enabled: true
        unix_guid: 1
        jobTitle: "jobTitle"
        samba_service_user: true
        description: "description"
        allow_public_key: true
        phoneNumbers:
        - number: "number"
          id: "id"
          type: "type"
        - number: "number"
          id: "id"
          type: "type"
        relationships:
        - "{}"
        - "{}"
        unix_uid: 1
        passwordless_sudo: true
        externally_managed: true
        ldap_binding_user: true
        company: "company"
        sudo: true
        department: "department"
        email: "email"
        enable_managed_uid: true
        password_expired: true
        created: "created"
        costCenter: "costCenter"
        middlename: "middlename"
        mfa:
          configured: true
          exclusion: true
          exclusionUntil: "2000-01-23T04:56:07.000+00:00"
        external_source_type: "external_source_type"
        tags:
        - "tags"
        - "tags"
        lastname: "lastname"
        employeeIdentifier: "employeeIdentifier"
        ssh_keys:
        - public_key: "public_key"
          name: "name"
          _id: "_id"
          create_date: "create_date"
        - public_key: "public_key"
          name: "name"
          _id: "_id"
          create_date: "create_date"
        employeeType: "employeeType"
        organization: "organization"
        password_never_expires: true
        displayname: "displayname"
        enable_user_portal_multifactor: true
        attributes:
        - "{}"
        - "{}"
        location: "location"
        external_dn: "external_dn"
        _id: "_id"
        username: "username"
        activated: true
      - public_key: "public_key"
        firstname: "firstname"
        addresses:
        - poBox: "poBox"
          country: "country"
          streetAddress: "streetAddress"
          postalCode: "postalCode"
          locality: "locality"
          id: "id"
          type: "type"
          extendedAddress: "extendedAddress"
          region: "region"
        - poBox: "poBox"
          country: "country"
          streetAddress: "streetAddress"
          postalCode: "postalCode"
          locality: "locality"
          id: "id"
          type: "type"
          extendedAddress: "extendedAddress"
          region: "region"
        badLoginAttempts: 0
        account_locked: true
        totp_enabled: true
        unix_guid: 1
        jobTitle: "jobTitle"
        samba_service_user: true
        description: "description"
        allow_public_key: true
        phoneNumbers:
        - number: "number"
          id: "id"
          type: "type"
        - number: "number"
          id: "id"
          type: "type"
        relationships:
        - "{}"
        - "{}"
        unix_uid: 1
        passwordless_sudo: true
        externally_managed: true
        ldap_binding_user: true
        company: "company"
        sudo: true
        department: "department"
        email: "email"
        enable_managed_uid: true
        password_expired: true
        created: "created"
        costCenter: "costCenter"
        middlename: "middlename"
        mfa:
          configured: true
          exclusion: true
          exclusionUntil: "2000-01-23T04:56:07.000+00:00"
        external_source_type: "external_source_type"
        tags:
        - "tags"
        - "tags"
        lastname: "lastname"
        employeeIdentifier: "employeeIdentifier"
        ssh_keys:
        - public_key: "public_key"
          name: "name"
          _id: "_id"
          create_date: "create_date"
        - public_key: "public_key"
          name: "name"
          _id: "_id"
          create_date: "create_date"
        employeeType: "employeeType"
        organization: "organization"
        password_never_expires: true
        displayname: "displayname"
        enable_user_portal_multifactor: true
        attributes:
        - "{}"
        - "{}"
        location: "location"
        external_dn: "external_dn"
        _id: "_id"
        username: "username"
        activated: true
    x-stoplight:
      id: "systemuserslist"
      name: "SystemUsersList"
      public: true
  radiusserverput:
    type: "object"
    properties:
      _id:
        type: "string"
      networkSourceIp:
        type: "string"
      name:
        type: "string"
      tagNames:
        type: "array"
        items:
          type: "string"
      userLockoutAction:
        type: "string"
      userPasswordExpirationAction:
        type: "string"
      mfa:
        type: "string"
        enum:
        - "DISABLED"
        - "ENABLED"
        - "REQUIRED"
        - "ALWAYS"
    title: "RadiusServerPut"
    example:
      networkSourceIp: "networkSourceIp"
      userLockoutAction: "userLockoutAction"
      name: "name"
      mfa: "DISABLED"
      userPasswordExpirationAction: "userPasswordExpirationAction"
      _id: "_id"
      tagNames:
      - "tagNames"
      - "tagNames"
    x-stoplight:
      id: "radiusserverput"
      name: "RadiusServerPut"
      public: true
  application:
    type: "object"
    properties:
      _id:
        type: "string"
      active:
        type: "boolean"
      name:
        type: "string"
      displayName:
        type: "string"
      displayLabel:
        type: "string"
      organization:
        type: "string"
      ssoUrl:
        type: "string"
      learnMore:
        type: "string"
      config:
        $ref: "#/definitions/application_config"
    title: "Application"
    example:
      displayLabel: "displayLabel"
      learnMore: "learnMore"
      ssoUrl: "ssoUrl"
      displayName: "displayName"
      organization: "organization"
      name: "name"
      active: true
      _id: "_id"
      config:
        acsUrl:
          visible: true
          tooltip:
            template: "template"
            variables:
              icon: "icon"
              message: "message"
          readOnly: true
          label: "label"
          position: 6
          type: "type"
          value: "value"
          required: true
        constantAttributes:
          visible: true
          tooltip:
            template: "template"
            variables:
              icon: "icon"
              message: "message"
          mutable: true
          readOnly: true
          label: "label"
          position: 1
          type: "type"
          value:
          - visible: true
            name: "name"
            readOnly: true
            value: "value"
            required: true
          - visible: true
            name: "name"
            readOnly: true
            value: "value"
            required: true
          required: true
        idpCertificate:
          visible: true
          tooltip:
            template: "template"
            variables:
              icon: "icon"
              message: "message"
          readOnly: true
          label: "label"
          position: 6
          type: "type"
          value: "value"
          required: true
        spEntityId:
          visible: true
          tooltip:
            template: "template"
            variables:
              icon: "icon"
              message: "message"
          readOnly: true
          label: "label"
          position: 6
          type: "type"
          value: "value"
          required: true
        databaseAttributes:
          position: 5
        idpEntityId:
          visible: true
          tooltip:
            template: "template"
            variables:
              icon: "icon"
              message: "message"
          readOnly: true
          label: "label"
          position: 6
          type: "type"
          value: "value"
          required: true
    x-stoplight:
      id: "application"
      name: "Application"
      public: true
  applicationslist:
    type: "object"
    properties:
      totalCount:
        type: "integer"
        description: "The total number of applications."
      results:
        type: "array"
        description: "The list of applications."
        items:
          $ref: "#/definitions/application"
    title: "ApplicationsList"
    example:
      totalCount: 0
      results:
      - displayLabel: "displayLabel"
        learnMore: "learnMore"
        ssoUrl: "ssoUrl"
        displayName: "displayName"
        organization: "organization"
        name: "name"
        active: true
        _id: "_id"
        config:
          acsUrl:
            visible: true
            tooltip:
              template: "template"
              variables:
                icon: "icon"
                message: "message"
            readOnly: true
            label: "label"
            position: 6
            type: "type"
            value: "value"
            required: true
          constantAttributes:
            visible: true
            tooltip:
              template: "template"
              variables:
                icon: "icon"
                message: "message"
            mutable: true
            readOnly: true
            label: "label"
            position: 1
            type: "type"
            value:
            - visible: true
              name: "name"
              readOnly: true
              value: "value"
              required: true
            - visible: true
              name: "name"
              readOnly: true
              value: "value"
              required: true
            required: true
          idpCertificate:
            visible: true
            tooltip:
              template: "template"
              variables:
                icon: "icon"
                message: "message"
            readOnly: true
            label: "label"
            position: 6
            type: "type"
            value: "value"
            required: true
          spEntityId:
            visible: true
            tooltip:
              template: "template"
              variables:
                icon: "icon"
                message: "message"
            readOnly: true
            label: "label"
            position: 6
            type: "type"
            value: "value"
            required: true
          databaseAttributes:
            position: 5
          idpEntityId:
            visible: true
            tooltip:
              template: "template"
              variables:
                icon: "icon"
                message: "message"
            readOnly: true
            label: "label"
            position: 6
            type: "type"
            value: "value"
            required: true
      - displayLabel: "displayLabel"
        learnMore: "learnMore"
        ssoUrl: "ssoUrl"
        displayName: "displayName"
        organization: "organization"
        name: "name"
        active: true
        _id: "_id"
        config:
          acsUrl:
            visible: true
            tooltip:
              template: "template"
              variables:
                icon: "icon"
                message: "message"
            readOnly: true
            label: "label"
            position: 6
            type: "type"
            value: "value"
            required: true
          constantAttributes:
            visible: true
            tooltip:
              template: "template"
              variables:
                icon: "icon"
                message: "message"
            mutable: true
            readOnly: true
            label: "label"
            position: 1
            type: "type"
            value:
            - visible: true
              name: "name"
              readOnly: true
              value: "value"
              required: true
            - visible: true
              name: "name"
              readOnly: true
              value: "value"
              required: true
            required: true
          idpCertificate:
            visible: true
            tooltip:
              template: "template"
              variables:
                icon: "icon"
                message: "message"
            readOnly: true
            label: "label"
            position: 6
            type: "type"
            value: "value"
            required: true
          spEntityId:
            visible: true
            tooltip:
              template: "template"
              variables:
                icon: "icon"
                message: "message"
            readOnly: true
            label: "label"
            position: 6
            type: "type"
            value: "value"
            required: true
          databaseAttributes:
            position: 5
          idpEntityId:
            visible: true
            tooltip:
              template: "template"
              variables:
                icon: "icon"
                message: "message"
            readOnly: true
            label: "label"
            position: 6
            type: "type"
            value: "value"
            required: true
    x-stoplight:
      id: "applicationslist"
      name: "ApplicationsList"
      public: true
  tag:
    type: "object"
    properties:
      _id:
        type: "string"
      name:
        type: "string"
        description: "A unique name for the Tag."
      systems:
        type: "array"
        description: "An array of system ids that are associated to the Tag."
        items:
          type: "string"
      systemusers:
        type: "array"
        description: "An array of system user ids that are associated to the Tag."
        items:
          type: "string"
      regularExpressions:
        type: "array"
        items:
          type: "string"
      externallyManaged:
        type: "boolean"
      externalDN:
        type: "string"
      externalSourceType:
        type: "string"
      sendToLDAP:
        type: "boolean"
      expired:
        type: "boolean"
      groupGid:
        type: "string"
      groupName:
        type: "string"
    title: "Tag"
    example:
      groupName: "groupName"
      expired: true
      systems:
      - "systems"
      - "systems"
      externallyManaged: true
      externalSourceType: "externalSourceType"
      name: "name"
      regularExpressions:
      - "regularExpressions"
      - "regularExpressions"
      externalDN: "externalDN"
      _id: "_id"
      systemusers:
      - "systemusers"
      - "systemusers"
      groupGid: "groupGid"
      sendToLDAP: true
    x-stoplight:
      id: "tag"
      name: "Tag"
      public: true
  tagslist:
    type: "object"
    properties:
      totalCount:
        type: "integer"
        description: "The total number of tags."
      results:
        type: "array"
        description: "The list of tags."
        items:
          $ref: "#/definitions/tag"
    title: "TagsList"
    example:
      totalCount: 0
      results:
      - groupName: "groupName"
        expired: true
        systems:
        - "systems"
        - "systems"
        externallyManaged: true
        externalSourceType: "externalSourceType"
        name: "name"
        regularExpressions:
        - "regularExpressions"
        - "regularExpressions"
        externalDN: "externalDN"
        _id: "_id"
        systemusers:
        - "systemusers"
        - "systemusers"
        groupGid: "groupGid"
        sendToLDAP: true
      - groupName: "groupName"
        expired: true
        systems:
        - "systems"
        - "systems"
        externallyManaged: true
        externalSourceType: "externalSourceType"
        name: "name"
        regularExpressions:
        - "regularExpressions"
        - "regularExpressions"
        externalDN: "externalDN"
        _id: "_id"
        systemusers:
        - "systemusers"
        - "systemusers"
        groupGid: "groupGid"
        sendToLDAP: true
    x-stoplight:
      id: "tagslist"
      name: "TagsList"
      public: true
  tagpost:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "A unique name for the Tag."
      systems:
        type: "array"
        description: "An array of system ids that are associated to the Tag."
        items:
          type: "string"
      systemusers:
        type: "array"
        description: "An array of system user ids that are associated to the Tag."
        items:
          type: "string"
      regularExpressions:
        type: "array"
        items:
          type: "string"
      externallyManaged:
        type: "boolean"
      externalDN:
        type: "string"
      externalSourceType:
        type: "string"
      sendToLDAP:
        type: "boolean"
      groupGid:
        type: "string"
      groupName:
        type: "string"
    title: "TagPost"
    x-stoplight:
      id: "tagpost"
      name: "TagPost"
      public: true
  tagput:
    type: "object"
    properties:
      name:
        type: "string"
        description: "A unique name for the Tag."
      systems:
        type: "array"
        description: "An array of system ids that are associated to the Tag."
        items:
          type: "string"
      systemusers:
        type: "array"
        description: "An array of system user ids that are associated to the Tag."
        items:
          type: "string"
      regularExpressions:
        type: "array"
        items:
          type: "string"
      externallyManaged:
        type: "boolean"
      externalDN:
        type: "string"
      externalSourceType:
        type: "string"
      sendToLDAP:
        type: "boolean"
      groupGid:
        type: "string"
      groupName:
        type: "string"
    title: "TagPut"
    x-stoplight:
      id: "tagput"
      name: "TagPut"
      public: true
  systemput:
    type: "object"
    properties:
      displayName:
        type: "string"
      allowSshPasswordAuthentication:
        type: "boolean"
      allowSshRootLogin:
        type: "boolean"
      allowMultiFactorAuthentication:
        type: "boolean"
      allowPublicKeyAuthentication:
        type: "boolean"
      agentBoundMessages:
        type: "array"
        items:
          $ref: "#/definitions/systemput_agentBoundMessages"
      tags:
        type: "array"
        items:
          type: "string"
    title: "SystemPut"
    x-stoplight:
      id: "systemput"
      name: "SystemPut"
      public: true
  system:
    type: "object"
    properties:
      organization:
        type: "string"
      created:
        type: "string"
      lastContact:
        type: "string"
      os:
        type: "string"
      version:
        type: "string"
      arch:
        type: "string"
      networkInterfaces:
        type: "array"
        items:
          $ref: "#/definitions/system_networkInterfaces"
      hostname:
        type: "string"
      displayName:
        type: "string"
      systemTimezone:
        type: "integer"
      templateName:
        type: "string"
      remoteIP:
        type: "string"
      active:
        type: "boolean"
      sshdParams:
        type: "array"
        items:
          $ref: "#/definitions/system_sshdParams"
      allowSshPasswordAuthentication:
        type: "boolean"
      allowSshRootLogin:
        type: "boolean"
      allowMultiFactorAuthentication:
        type: "boolean"
      allowPublicKeyAuthentication:
        type: "boolean"
      modifySSHDConfig:
        type: "boolean"
      agentVersion:
        type: "string"
      connectionHistory:
        type: "array"
        items:
          type: "object"
          properties: {}
      sshRootEnabled:
        type: "boolean"
      tags:
        type: "array"
        items:
          type: "string"
      _id:
        type: "string"
      fde:
        $ref: "#/definitions/fde"
      amazonInstanceID:
        type: "string"
    title: "System"
    example:
      remoteIP: "remoteIP"
      allowSshRootLogin: true
      displayName: "displayName"
      hostname: "hostname"
      amazonInstanceID: "amazonInstanceID"
      allowSshPasswordAuthentication: true
      connectionHistory:
      - "{}"
      - "{}"
      os: "os"
      created: "created"
      allowMultiFactorAuthentication: true
      fde:
        active: true
        keyPresent: true
      modifySSHDConfig: true
      active: true
      sshRootEnabled: true
      version: "version"
      lastContact: "lastContact"
      tags:
      - "tags"
      - "tags"
      allowPublicKeyAuthentication: true
      networkInterfaces:
      - internal: true
        address: "address"
        name: "name"
        family: "family"
      - internal: true
        address: "address"
        name: "name"
        family: "family"
      templateName: "templateName"
      sshdParams:
      - name: "name"
        value: "value"
      - name: "name"
        value: "value"
      organization: "organization"
      agentVersion: "agentVersion"
      arch: "arch"
      _id: "_id"
      systemTimezone: 6
    x-stoplight:
      id: "system"
      name: "System"
      public: true
  systemslist:
    type: "object"
    properties:
      totalCount:
        type: "integer"
        description: "The total number of systems."
      results:
        type: "array"
        description: "The list of systems."
        items:
          $ref: "#/definitions/system"
    title: "SystemsList"
    example:
      totalCount: 0
      results:
      - remoteIP: "remoteIP"
        allowSshRootLogin: true
        displayName: "displayName"
        hostname: "hostname"
        amazonInstanceID: "amazonInstanceID"
        allowSshPasswordAuthentication: true
        connectionHistory:
        - "{}"
        - "{}"
        os: "os"
        created: "created"
        allowMultiFactorAuthentication: true
        fde:
          active: true
          keyPresent: true
        modifySSHDConfig: true
        active: true
        sshRootEnabled: true
        version: "version"
        lastContact: "lastContact"
        tags:
        - "tags"
        - "tags"
        allowPublicKeyAuthentication: true
        networkInterfaces:
        - internal: true
          address: "address"
          name: "name"
          family: "family"
        - internal: true
          address: "address"
          name: "name"
          family: "family"
        templateName: "templateName"
        sshdParams:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        organization: "organization"
        agentVersion: "agentVersion"
        arch: "arch"
        _id: "_id"
        systemTimezone: 6
      - remoteIP: "remoteIP"
        allowSshRootLogin: true
        displayName: "displayName"
        hostname: "hostname"
        amazonInstanceID: "amazonInstanceID"
        allowSshPasswordAuthentication: true
        connectionHistory:
        - "{}"
        - "{}"
        os: "os"
        created: "created"
        allowMultiFactorAuthentication: true
        fde:
          active: true
          keyPresent: true
        modifySSHDConfig: true
        active: true
        sshRootEnabled: true
        version: "version"
        lastContact: "lastContact"
        tags:
        - "tags"
        - "tags"
        allowPublicKeyAuthentication: true
        networkInterfaces:
        - internal: true
          address: "address"
          name: "name"
          family: "family"
        - internal: true
          address: "address"
          name: "name"
          family: "family"
        templateName: "templateName"
        sshdParams:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        organization: "organization"
        agentVersion: "agentVersion"
        arch: "arch"
        _id: "_id"
        systemTimezone: 6
    x-stoplight:
      id: "systemslist"
      name: "SystemsList"
      public: true
  usersystembindingsput:
    type: "object"
    required:
    - "add"
    - "remove"
    properties:
      add:
        type: "array"
        description: "The list of system ids to be added to this user."
        items:
          type: "string"
      remove:
        type: "array"
        description: "The list of system ids to be removed from this user."
        items:
          type: "string"
    title: "UserSystemBindingsPut"
    x-stoplight:
      id: "usersystembindingsput"
      name: "UserSystemBindingsPut"
      public: true
  systemuserbinding:
    type: "object"
    title: "SystemUserBinding"
    x-stoplight:
      id: "systemuserbinding"
      name: "SystemUserBinding"
      public: true
  usersystembinding:
    type: "object"
    title: "UserSystemBinding"
    x-stoplight:
      id: "usersystembinding"
      name: "UserSystemBinding"
      public: true
  radiusserverpost:
    type: "object"
    required:
    - "name"
    - "networkSourceIp"
    - "sharedSecret"
    properties:
      networkSourceIp:
        type: "string"
      name:
        type: "string"
      tagNames:
        type: "array"
        items:
          type: "string"
      sharedSecret:
        type: "string"
        description: "RADIUS shared secret between the server and client."
      userLockoutAction:
        type: "string"
      userPasswordExpirationAction:
        type: "string"
      mfa:
        type: "string"
        enum:
        - "DISABLED"
        - "ENABLED"
        - "REQUIRED"
        - "ALWAYS"
    title: "RadiusServerPost"
    x-stoplight:
      id: "radiusserverpost"
      name: "RadiusServerPost"
      public: true
  systemuserput:
    type: "object"
    required:
    - "email"
    - "username"
    properties:
      email:
        type: "string"
        maxLength: 1024
      username:
        type: "string"
        maxLength: 1024
      allow_public_key:
        type: "boolean"
      public_key:
        type: "string"
      ssh_keys:
        type: "array"
        items:
          $ref: "#/definitions/sshkeypost"
      sudo:
        type: "boolean"
      enable_managed_uid:
        type: "boolean"
      unix_uid:
        type: "integer"
        minimum: 1
      unix_guid:
        type: "integer"
        minimum: 1
      tags:
        type: "array"
        items:
          type: "string"
      account_locked:
        type: "boolean"
      externally_managed:
        type: "boolean"
      external_dn:
        type: "string"
      external_source_type:
        type: "string"
      firstname:
        type: "string"
        maxLength: 1024
      lastname:
        type: "string"
        maxLength: 1024
      ldap_binding_user:
        type: "boolean"
      enable_user_portal_multifactor:
        type: "boolean"
      attributes:
        type: "array"
        items:
          type: "object"
          properties: {}
      samba_service_user:
        type: "boolean"
      addresses:
        type: "array"
        description: "type, poBox, extendedAddress, streetAddress, locality, region,\
          \ postalCode, country"
        items:
          $ref: "#/definitions/systemuserput_addresses"
      jobTitle:
        type: "string"
        maxLength: 1024
      department:
        type: "string"
        maxLength: 1024
      phoneNumbers:
        type: "array"
        items:
          $ref: "#/definitions/systemuserput_phoneNumbers"
      relationships:
        type: "array"
        items:
          type: "object"
          properties: {}
      password:
        type: "string"
      password_never_expires:
        type: "boolean"
      middlename:
        type: "string"
        maxLength: 1024
      displayname:
        type: "string"
        maxLength: 1024
      description:
        type: "string"
        maxLength: 1024
      location:
        type: "string"
        maxLength: 1024
      costCenter:
        type: "string"
        maxLength: 1024
      employeeType:
        type: "string"
        maxLength: 1024
      company:
        type: "string"
        maxLength: 1024
      employeeIdentifier:
        type: "string"
        description: "Must be unique per user. "
        maxLength: 256
      mfa:
        $ref: "#/definitions/mfa"
    title: "SystemUserPut"
    x-stoplight:
      id: "systemuserput"
      name: "SystemUserPut"
      public: true
  commandfilereturn:
    type: "object"
    properties:
      totalCount:
        type: "integer"
        description: "The total number of commands files"
      results:
        $ref: "#/definitions/commandfilereturn_results"
    title: "CommandFileReturn"
    example:
      totalCount: 0
      results:
        name: "name"
        destination: "destination"
        _id: "_id"
    x-stoplight:
      id: "commandfilereturn"
      name: "CommandFileReturn"
      public: true
  organizationslist:
    type: "object"
    properties:
      totalCount:
        type: "integer"
        description: "The total number of organizations. "
      results:
        type: "array"
        description: "The list of organizations."
        items:
          $ref: "#/definitions/organizationslist_results"
    title: "OrganizationList"
    example:
      totalCount: 0
      results:
      - displayName: "displayName"
        _id: "_id"
        logoUrl: "logoUrl"
      - displayName: "displayName"
        _id: "_id"
        logoUrl: "logoUrl"
    x-stoplight:
      id: "organizationslist"
      name: "OrganizationList"
      public: true
  sshkeypost:
    type: "object"
    required:
    - "name"
    - "public_key"
    properties:
      public_key:
        type: "string"
        description: "The Public SSH key."
      name:
        type: "string"
        description: "The name of the SSH key."
    title: "SSHKeyPost"
    x-stoplight:
      id: "sshkeypost"
      name: "SSHKeyPost"
      public: true
  fde:
    type: "object"
    properties:
      keyPresent:
        type: "boolean"
      active:
        type: "boolean"
    title: "FDE"
    example:
      active: true
      keyPresent: true
    x-stoplight:
      id: "fde"
      name: "FDE"
      public: true
  body:
    type: "object"
    required:
    - "name"
    - "networkSourceIp"
    properties:
      name:
        type: "string"
      networkSourceIp:
        type: "string"
      tags:
        type: "array"
        items:
          type: "string"
      userLockoutAction:
        type: "string"
      userPasswordExpirationAction:
        type: "string"
      mfa:
        type: "string"
        enum:
        - "DISABLED"
        - "ENABLED"
        - "REQUIRED"
        - "ALWAYS"
    example:
      name: "test radius"
      networkSourceIp: "0.0.0.0"
      tagsNames:
      - "tag1"
  body_1:
    type: "object"
    properties:
      exclusion:
        type: "boolean"
      exclusionUntil:
        type: "string"
        format: "date-time"
  systemuserputpost_addresses:
    properties:
      type:
        type: "string"
      poBox:
        type: "string"
      extendedAddress:
        type: "string"
      streetAddress:
        type: "string"
      locality:
        type: "string"
      region:
        type: "string"
      postalCode:
        type: "string"
      country:
        type: "string"
  systemuserputpost_phoneNumbers:
    properties:
      type:
        type: "string"
      number:
        type: "string"
  commandresult_response_data:
    properties:
      output:
        type: "string"
        description: "The output of the command that was executed."
      exitCode:
        type: "integer"
        description: "The stderr output from the command that ran."
    example:
      output: "output"
      exitCode: 6
  commandresult_response:
    properties:
      id:
        type: "string"
        description: "ID of the response."
      error:
        type: "string"
        description: "The stderr output from the command that ran."
      data:
        $ref: "#/definitions/commandresult_response_data"
    example:
      data:
        output: "output"
        exitCode: 6
      id: "id"
      error: "error"
  systemuserreturn_addresses:
    properties:
      id:
        type: "string"
      type:
        type: "string"
        maxLength: 1024
      poBox:
        type: "string"
        maxLength: 1024
      extendedAddress:
        type: "string"
        maxLength: 1024
      streetAddress:
        type: "string"
        maxLength: 1024
      locality:
        type: "string"
        maxLength: 1024
      region:
        type: "string"
        maxLength: 1024
      postalCode:
        type: "string"
        maxLength: 1024
      country:
        type: "string"
        maxLength: 1024
    example:
      poBox: "poBox"
      country: "country"
      streetAddress: "streetAddress"
      postalCode: "postalCode"
      locality: "locality"
      id: "id"
      type: "type"
      extendedAddress: "extendedAddress"
      region: "region"
  systemuserreturn_phoneNumbers:
    properties:
      id:
        type: "string"
      type:
        type: "string"
        maxLength: 1024
      number:
        type: "string"
        maxLength: 1024
    example:
      number: "number"
      id: "id"
      type: "type"
  commandslist_results:
    properties:
      name:
        type: "string"
        description: "The name of the Command."
      command:
        type: "string"
        description: "The Command to execute."
      commandType:
        type: "string"
        description: "The Command OS."
      launchType:
        type: "string"
        description: "How the Command is executed."
      listensTo:
        type: "string"
        description: ""
      schedule:
        type: "string"
        description: "A crontab that consists of: [ (seconds) (minutes) (hours) (days\
          \ of month) (months) (weekdays) ] or [ immediate ]. If you send this as\
          \ an empty string, it will run immediately.\n"
      trigger:
        type: "string"
        description: "Trigger to execute command."
      scheduleRepeatType:
        type: "string"
        description: "When the command will repeat."
      organization:
        type: "string"
        description: "The ID of the Organization."
      _id:
        type: "string"
        description: "The ID of the command."
    example:
      schedule: "schedule"
      scheduleRepeatType: "scheduleRepeatType"
      commandType: "commandType"
      organization: "organization"
      name: "name"
      listensTo: "listensTo"
      trigger: "trigger"
      _id: "_id"
      command: "command"
      launchType: "launchType"
  application_config_idpEntityId_tooltip_variables:
    properties:
      icon:
        type: "string"
      message:
        type: "string"
    example:
      icon: "icon"
      message: "message"
  application_config_idpEntityId_tooltip:
    properties:
      template:
        type: "string"
      variables:
        $ref: "#/definitions/application_config_idpEntityId_tooltip_variables"
    example:
      template: "template"
      variables:
        icon: "icon"
        message: "message"
  application_config_idpEntityId:
    properties:
      label:
        type: "string"
      readOnly:
        type: "boolean"
      tooltip:
        $ref: "#/definitions/application_config_idpEntityId_tooltip"
      type:
        type: "string"
      value:
        type: "string"
      visible:
        type: "boolean"
      required:
        type: "boolean"
      position:
        type: "integer"
    example:
      visible: true
      tooltip:
        template: "template"
        variables:
          icon: "icon"
          message: "message"
      readOnly: true
      label: "label"
      position: 6
      type: "type"
      value: "value"
      required: true
  application_config_constantAttributes_value:
    properties:
      name:
        type: "string"
      value:
        type: "string"
      required:
        type: "boolean"
      visible:
        type: "boolean"
      readOnly:
        type: "boolean"
    example:
      visible: true
      name: "name"
      readOnly: true
      value: "value"
      required: true
  application_config_constantAttributes:
    properties:
      label:
        type: "string"
      readOnly:
        type: "boolean"
      tooltip:
        $ref: "#/definitions/application_config_idpEntityId_tooltip"
      type:
        type: "string"
      value:
        type: "array"
        items:
          $ref: "#/definitions/application_config_constantAttributes_value"
      visible:
        type: "boolean"
      mutable:
        type: "boolean"
      required:
        type: "boolean"
      position:
        type: "integer"
    example:
      visible: true
      tooltip:
        template: "template"
        variables:
          icon: "icon"
          message: "message"
      mutable: true
      readOnly: true
      label: "label"
      position: 1
      type: "type"
      value:
      - visible: true
        name: "name"
        readOnly: true
        value: "value"
        required: true
      - visible: true
        name: "name"
        readOnly: true
        value: "value"
        required: true
      required: true
  application_config_databaseAttributes:
    properties:
      position:
        type: "integer"
    example:
      position: 5
  application_config:
    properties:
      idpEntityId:
        $ref: "#/definitions/application_config_idpEntityId"
      idpCertificate:
        $ref: "#/definitions/application_config_idpEntityId"
      spEntityId:
        $ref: "#/definitions/application_config_idpEntityId"
      acsUrl:
        $ref: "#/definitions/application_config_idpEntityId"
      constantAttributes:
        $ref: "#/definitions/application_config_constantAttributes"
      databaseAttributes:
        $ref: "#/definitions/application_config_databaseAttributes"
    example:
      acsUrl:
        visible: true
        tooltip:
          template: "template"
          variables:
            icon: "icon"
            message: "message"
        readOnly: true
        label: "label"
        position: 6
        type: "type"
        value: "value"
        required: true
      constantAttributes:
        visible: true
        tooltip:
          template: "template"
          variables:
            icon: "icon"
            message: "message"
        mutable: true
        readOnly: true
        label: "label"
        position: 1
        type: "type"
        value:
        - visible: true
          name: "name"
          readOnly: true
          value: "value"
          required: true
        - visible: true
          name: "name"
          readOnly: true
          value: "value"
          required: true
        required: true
      idpCertificate:
        visible: true
        tooltip:
          template: "template"
          variables:
            icon: "icon"
            message: "message"
        readOnly: true
        label: "label"
        position: 6
        type: "type"
        value: "value"
        required: true
      spEntityId:
        visible: true
        tooltip:
          template: "template"
          variables:
            icon: "icon"
            message: "message"
        readOnly: true
        label: "label"
        position: 6
        type: "type"
        value: "value"
        required: true
      databaseAttributes:
        position: 5
      idpEntityId:
        visible: true
        tooltip:
          template: "template"
          variables:
            icon: "icon"
            message: "message"
        readOnly: true
        label: "label"
        position: 6
        type: "type"
        value: "value"
        required: true
  systemput_agentBoundMessages:
    properties:
      cmd:
        type: "string"
  system_networkInterfaces:
    properties:
      address:
        type: "string"
      family:
        type: "string"
      internal:
        type: "boolean"
      name:
        type: "string"
    example:
      internal: true
      address: "address"
      name: "name"
      family: "family"
  system_sshdParams:
    properties:
      name:
        type: "string"
      value:
        type: "string"
    example:
      name: "name"
      value: "value"
  systemuserput_addresses:
    properties:
      type:
        type: "string"
        maxLength: 1024
      poBox:
        type: "string"
        maxLength: 1024
      extendedAddress:
        type: "string"
        maxLength: 1024
      streetAddress:
        type: "string"
        maxLength: 1024
      locality:
        type: "string"
        maxLength: 1024
      region:
        type: "string"
        maxLength: 1024
      postalCode:
        type: "string"
        maxLength: 1024
      country:
        type: "string"
        maxLength: 1024
  systemuserput_phoneNumbers:
    properties:
      type:
        type: "string"
        maxLength: 1024
      number:
        type: "string"
        maxLength: 1024
  commandfilereturn_results:
    properties:
      name:
        type: "string"
        description: "The file name."
      destination:
        type: "string"
        description: "The location where the file will be stored."
      _id:
        type: "string"
        description: "The ID of the file."
    example:
      name: "name"
      destination: "destination"
      _id: "_id"
  organizationslist_results:
    properties:
      _id:
        type: "string"
        description: "The ID of the organization."
      displayName:
        type: "string"
        description: "The name of the organization."
      logoUrl:
        type: "string"
        description: "The organization logo image URL. "
    example:
      displayName: "displayName"
      _id: "_id"
      logoUrl: "logoUrl"
parameters:
  trait:sort:sort:
    name: "sort"
    in: "query"
    description: "Use space separated sort parameters to sort the collection.\nDefault\
      \ sort is ascending. Prefix with `-` to sort descending.\n"
    required: false
    type: "string"
    x-exportParamName: "Sort"
  trait:fields:fields:
    name: "fields"
    in: "query"
    description: "Use a space seperated string of field parameters to include the\
      \ data in the response. If omitted, the default list of fields will be returned.\n"
    required: false
    type: "string"
    x-exportParamName: "Fields"
  trait:filter:filter:
    name: "filter"
    in: "query"
    description: "A filter to apply to the query."
    required: false
    type: "string"
    x-exportParamName: "Filter"
  trait:skip:skip:
    name: "skip"
    in: "query"
    description: "The offset into the records to return."
    required: false
    type: "integer"
    default: 0
    x-exportParamName: "Skip"
  trait:limit:limit:
    name: "limit"
    in: "query"
    description: "The number of records to return at once. Limited to 100."
    required: false
    type: "integer"
    default: 10
    x-exportParamName: "Limit"
  trait:requestHeaders:Content-Type:
    name: "Content-Type"
    in: "header"
    required: true
    type: "string"
    default: "application/json"
    x-exportParamName: "ContentType"
  trait:requestHeaders:Accept:
    name: "Accept"
    in: "header"
    required: true
    type: "string"
    default: "application/json"
    x-exportParamName: "Accept"
  trait:systemContextAuth:Date:
    name: "Date"
    in: "header"
    description: "Current date header for the System Context API"
    required: false
    type: "string"
    x-exportParamName: "Date"
  trait:systemContextAuth:Authorization:
    name: "Authorization"
    in: "header"
    description: "Authorization header for the System Context API"
    required: false
    type: "string"
    x-exportParamName: "Authorization"
  trait:multiTenantRequestHeaders:x-org-id:
    name: "x-org-id"
    in: "header"
    description: ""
    required: false
    type: "string"
    x-exportParamName: "XOrgId"
  trait:search:search:
    name: "search"
    in: "query"
    description: "A nested object containing a string `searchTerm` and a list of `fields`\
      \ to search on."
    required: false
    type: "string"
    x-exportParamName: "Search"
responses:
  trait:standardErrors:400:
    description: ""
    schema:
      $ref: "#/definitions/errorresponse"
  trait:standardErrors:401:
    description: ""
    schema:
      $ref: "#/definitions/errorresponse"
  trait:standardErrors:403:
    description: ""
    schema:
      $ref: "#/definitions/errorresponse"
  trait:standardErrors:404:
    description: ""
    schema:
      $ref: "#/definitions/errorresponse"
  trait:standardErrors:500:
    description: ""
    schema:
      $ref: "#/definitions/errorresponse"
x-stoplight:
  beforeScript: ""
  afterScript: ""
  version:
    groups:
      utilFuncs: []
      savedEntries: []
      tests: []
      traits: []
      docs:
      - divider: false
        items:
        - _id: "v1-api"
          type: "docTextSections"
        - _id: "api-change-log"
          type: "docTextSections"
        name: "API Overview"
      - divider: false
        items:
        - _id: "authentication-and-authorization-overview"
          type: "docTextSections"
        - _id: "system-context"
          type: "docTextSections"
        - _id: "multi-tenant-organization-api-headers"
          type: "docTextSections"
        name: "Authentication & Authorization"
        description: ""
      - divider: false
        items:
        - _id: "applications_list"
          type: "endpoints"
        name: "Applications"
        description: "The Applications endpoint is use to create and modify your SSO\
          \ Applications in JumpCloud. It's recommended to use the Console UI to setup\
          \ your SSO Applications."
      - items:
        - type: "endpoints"
          _id: "command_trigger_webhook_post"
        name: "Command Triggers"
        description: "The Triggers section of the JumpCloud API allows you to use\
          \ a webhook to launch a command or a workflow. When JumpCloud receives a\
          \ webhook containing the trigger name, JumpCloud will automatically execute\
          \ any command(s) with that trigger name, in parallel, across all the servers\
          \ defined in the saved commands.\n\nTriggers can be executed solely with\
          \ a trigger name (the name you provide in the \"Trigger Name:\" field when\
          \ you set a Command to \"Run on Trigger (webhook)\", or you can post a JSON\
          \ object in the POST body, and all top level string or numeric objects in\
          \ the JSON object will be sent to the command as environment variables.\n\
          \nFor example, posting:\n```\n{\n    \"srcip\": \"192.168.1.32\",\n    \"\
          attack\": \"Attempted Cross-Site Request Forgery\"\n}\n```\nwill generate\
          \ the following environment variables for the started command:\n```\nsrcip=\"\
          192.168.1.32\"\nattack=\"Attempted Cross-Site Request Forgery\"\nBecause\
          \ sub-objects and arrays are not stringified before being passed to the\
          \ command, the command will see the environment variables set to \"[object\
          \ Object]\" in these cases.\n```"
        divider: false
      - items:
        - type: "endpoints"
          _id: "commands_list"
        - type: "endpoints"
          _id: "commands_get"
        - type: "endpoints"
          _id: "commands_post"
        - type: "endpoints"
          _id: "commands_delete"
        - _id: "command_file_get"
          type: "endpoints"
        - type: "endpoints"
          _id: "commands_put"
        name: "Commands"
        description: "The Command Scheduler can be used to run commands across your\
          \ systems/tags either immediately, at a specific time in the future, or\
          \ repeatedly. Please note that systems OR tags is a required field. Setting\
          \ both is unsupported. You can retrieve the results by using the Command\
          \ Results API."
        divider: false
      - items:
        - type: "endpoints"
          _id: "command_results_list"
        - type: "endpoints"
          _id: "command_results_get"
        - type: "endpoints"
          _id: "command_results_delete"
        name: "Command Results"
        description: "The Command Results section of the JumpCloud API allows you\
          \ to retrieve and delete the results of commands that you ran on your system\
          \ through JumpCloud. None of the properties are modifiable, but you can\
          \ delete records."
        divider: false
      - divider: false
        items:
        - _id: "organization_list"
          type: "endpoints"
        name: "Organizations"
        description: "You can obtain information about your JumpCloud Organization(s)."
      - divider: false
        items:
        - _id: "radius_servers_post"
          type: "endpoints"
        - _id: "radius_servers_list"
          type: "endpoints"
        - _id: "radius_servers_put"
          type: "endpoints"
        name: "Radius Servers"
      - items:
        - _id: "search_organizations_post"
          type: "endpoints"
        - _id: "search_systems_post"
          type: "endpoints"
        - _id: "search_systemusers_post"
          type: "endpoints"
        name: "Search"
      - items:
        - _id: "systems_list"
          type: "endpoints"
        - _id: "systems_get"
          type: "endpoints"
        - _id: "systems_put"
          type: "endpoints"
        - _id: "systems_delete"
          type: "endpoints"
        - type: "endpoints"
          _id: "systems_systemusers_binding_list"
        - type: "endpoints"
          _id: "systems_systemusers_binding_put"
        name: "Systems"
        description: "The System Users section of the JumpCloud API allows you to\
          \ add, retrieve, delete, and modify System Users. To add a System User to\
          \ JumpCloud, you must provide an email address and username. The System\
          \ Users email will be used to contact the new System User, allowing them\
          \ to be activated. During activation, the user will prompted to set their\
          \ password, an SSH public key, and to set up Google Authenticator for Multi-factor\
          \ authentication.\n\nAdding a new System User will not grant them access\
          \ to servers until they're associated to a Tag, and a System User can be\
          \ assigned to a Tag as soon as they're created. However, they will not gain\
          \ access to any servers until they have activated."
        divider: false
      - items:
        - type: "endpoints"
          _id: "systemusers_list"
        - type: "endpoints"
          _id: "systemusers_get"
        - type: "endpoints"
          _id: "systemusers_systems_binding_list"
        - type: "endpoints"
          _id: "systemusers_systems_binding_put"
        - type: "endpoints"
          _id: "systemusers_post"
        - type: "endpoints"
          _id: "systemusers_put"
        - type: "endpoints"
          _id: "systemusers_delete"
        - _id: "systemusers_resetmfa"
          type: "endpoints"
        - _id: "sshkey_list"
          type: "endpoints"
        - _id: "sshkey_post"
          type: "endpoints"
        - _id: "sshkey_delete"
          type: "endpoints"
        - _id: "systemusers_unlock"
          type: "endpoints"
        name: "Systemusers"
        description: "The System Users section of the JumpCloud API allows you to\
          \ add, retrieve, delete, and modify System Users. To add a System User to\
          \ JumpCloud, you must provide an email address and username. The System\
          \ Users email will be used to contact the new System User, allowing them\
          \ to be activated. During activation, the user will prompted to set their\
          \ password, an SSH public key, and to set up Google Authenticator for Multi-factor\
          \ authentication.\n\nAdding a new System User will not grant them access\
          \ to servers until they're associated to a Tag, and a System User can be\
          \ assigned to a Tag as soon as they're created. However, they will not gain\
          \ access to any servers until they have activated."
        divider: false
      - divider: false
        items:
        - _id: "tags_list"
          type: "endpoints"
        - _id: "tags_get"
          type: "endpoints"
        - _id: "tags_post"
          type: "endpoints"
        - _id: "tags_put"
          type: "endpoints"
        - _id: "tags_delete"
          type: "endpoints"
        name: "Tags"
        description: "The Tags section of the JumpCloud API allows you to add, retrieve,\
          \ delete, and modify Tags. Tags are used to associate system users to systems,\
          \ and to create groups of systems for easy management in the Commands tab.\
          \ For example, if you have user \"jsmith\" and a system both associated\
          \ to the same Tag, then the system user \"jsmith\" will be able to login\
          \ to that system. If either the system or \"jsmith\" are removed from the\
          \ Tag, \"jsmith\" will no longer have access to that system.\n\nFor more\
          \ information about tags see: [How to Use Tags](https://support.jumpcloud.com/customer/portal/articles/2449137-getting-started-tags)"
      - items:
        - _id: "application"
          type: "schemas"
        - _id: "applicationslist"
          type: "schemas"
        - type: "schemas"
          _id: "command"
        - _id: "commandfilereturn"
          type: "schemas"
        - type: "schemas"
          _id: "commandresult"
        - _id: "commandresultslist"
          type: "schemas"
        - _id: "commandslist"
          type: "schemas"
        - _id: "fde"
          type: "schemas"
        - _id: "organizationslist"
          type: "schemas"
        - _id: "radiusserver"
          type: "schemas"
        - _id: "radiusserverpost"
          type: "schemas"
        - _id: "radiusserverput"
          type: "schemas"
        - _id: "radiusserverslist"
          type: "schemas"
        - type: "schemas"
          _id: "search"
        - _id: "sshkeypost"
          type: "schemas"
        - _id: "system"
          type: "schemas"
        - _id: "systemput"
          type: "schemas"
        - _id: "systemslist"
          type: "schemas"
        - _id: "systemuserbinding"
          type: "schemas"
        - type: "schemas"
          _id: "systemuserbindingsput"
        - _id: "systemuserput"
          type: "schemas"
        - _id: "systemuserreturn"
          type: "schemas"
        - _id: "systemuserslist"
          type: "schemas"
        - _id: "ddrZmggZ983Ray45n"
          type: "schemas"
        - _id: "tag"
          type: "schemas"
        - _id: "tagpost"
          type: "schemas"
        - _id: "tagput"
          type: "schemas"
        - _id: "tagslist"
          type: "schemas"
        - _id: "usersystembinding"
          type: "schemas"
        - _id: "usersystembindingsput"
          type: "schemas"
        description: "Models make up the core input and output structures in this\
          \ API. They are used in endpoint request and response bodies."
        name: "Models"
        divider: false
      - items:
        - type: "traits"
          _id: "fields"
        - type: "traits"
          _id: "filter"
        - type: "traits"
          _id: "limit"
        - _id: "multiTenantRequestHeaders"
          type: "traits"
        - _id: "requestHeaders"
          type: "traits"
        - _id: "search"
          type: "traits"
        - type: "traits"
          _id: "skip"
        - type: "traits"
          _id: "sort"
        - _id: "systemContextAuth"
          type: "traits"
        description: "Traits describe common behaviors or structures in this API."
        name: "Traits"
  functions: {}
  textSections:
    v1-api:
      id: "v1-api"
      name: "V1 API"
      content: "Our existing API offers the ability to interact with some of our core\
        \ features such as: Commands, Systems, and Users. We are currently in the\
        \ process of migrating our API V1 features to [API V2](https://docs.jumpcloud.com/2.0)\
        \ Depending on your type of integration you may be required to use both V1\
        \ and V2 APIs.\n\nPlease refer to our [API V2](https://docs.jumpcloud.com/2.0)\
        \ docs to understand the functionality available in that API set.\n\n### API\
        \ SDKs\n\nYou can find language specific SDKs that can help you kickstart\
        \ your Integration with JumpCloud in the following GitHub repositories:\n\n\
        * [Python](https://github.com/TheJumpCloud/jcapi-python)\n* [Go](https://github.com/TheJumpCloud/jcapi-go)\n\
        * [Ruby](https://github.com/TheJumpCloud/jcapi-ruby)\n* [Java](https://github.com/TheJumpCloud/jcapi-java)"
      public: true
    authentication-and-authorization-overview:
      id: "authentication-and-authorization-overview"
      name: "API Key"
      content: "#### Access Your API Key\n\nTo locate your API Key:\n1. Log into the\
        \ [JumpCloud Admin Console](https://console.jumpcloud.com/)\n2. Go to the\
        \ username drop down located in the top-right of the Console.\n3. Retrieve\
        \ your API key from API Settings.\n\n#### API Key Considerations\n\nThis API\
        \ key is associated to the currently logged in administrator. Other admins\
        \ will have different API keys.\n\nPlease keep this API key secret, as it\
        \ grants full access to any data accessible via your JumpCloud console account.\n\
        \nYou can also reset your API key in the same location in the JumpCloud Admin\
        \ Console.\n\n##### Recycling or Resetting Your API Key\n\nIn order to revoke\
        \ access with the current API key, simply reset your API key. This will render\
        \ all calls using the previous API key inaccessible.\n\nFor API V1 the API\
        \ key will be passed in as a header with the header name \"x-api-key\".\n\n\
        **Example**\n```\ncurl -H \"x-api-key: [YOUR_API_KEY_HERE]\" \"https://console.jumpcloud.com/api/systemusers\"\
        \n```"
      public: true
    system-context:
      id: "system-context"
      name: "System Context"
      content: "* [Introduction](#introduction)\n* [Supported endpoints](#supported-endpoints)\n\
        * [Response codes](#response-codes)\n* [Authentication](#authentication)\n\
        * [Additional examples](#additional-examples)\n* [Third party](#third-party)\n\
        \n### Introduction\n\nJumpCloud System Context Authorization is an alternative\
        \ way to authenticate with a subset of JumpCloud's REST APIs. Using this method\
        \ a system can manage its information and resource associations, allowing\
        \ modern auto provisioning environments to scale as needed.\n\n**Note: The\
        \ following documentation applies to Linux Operating Systems only.**\n\n###\
        \ Supported Endpoints\n\nJumpCloud System Context Authorization can be used\
        \ in conjunction with Systems endpoints found in the V1 API and certain System\
        \ Group endpoints found in the v2 API.\n\n- A system may fetch, alter, and\
        \ delete metadata about itself, including manipulating a system's Group and\
        \ Systemuser associations,\n  - `/api/systems/{system_id}` | [`GET`](https://docs.jumpcloud.com/1.0/systems/list-an-individual-system)\
        \ [`PUT`](https://docs.jumpcloud.com/1.0/systems/update-a-system)\n- A system\
        \ may delete itself from your JumpCloud organization\n  - `/api/systems/{system_id}`\
        \ | [`DELETE`](https://docs.jumpcloud.com/1.0/systems/delete-a-system)\n-\
        \ A system may fetch its direct resource associations under v2 (Groups)\n\
        \  - `/api/v2/systems/{system_id}/memberof` | [`GET`](https://docs.jumpcloud.com/2.0/systems/list-a-systems-group-membership)\n\
        \  - `/api/v2/systems/{system_id}/associations` | [`GET`](https://docs.jumpcloud.com/2.0/systems/list-associations-of-a-system)\n\
        \  - `/api/v2/systems/{system_id}/users` | [`GET`](https://docs.jumpcloud.com/2.0/systems/list-the-users-associated-with-a-system)\n\
        - A system may alter its direct resource associations under v2 (Groups)\n\
        \  - `/api/v2/systems/{system_id}/associations` | [`POST`](https://docs.jumpcloud.com/2.0/systems/manage-associations-of-a-system)\n\
        - A system may alter its System Group associations\n  - `/api/v2/systemgroups/{systemgroup_id}/members`\
        \ | [`POST`](https://docs.jumpcloud.com/2.0/system-groups/update-a-system-group)\n\
        \    - _NOTE_ If a system attempts to alter the system group membership of\
        \ a different system the request will be rejected\n\n\n### Response Codes\n\
        \nIf endpoints other than those described above are called using the System\
        \ Context API the server will return a `401` response.\n\n### Authentication\n\
        \nTo allow for secure access to our APIs, you must authenticate each API request.\n\
        JumpCloud System Context Authorization uses [HTTP Signatures](https://tools.ietf.org/html/draft-cavage-http-signatures-00)\
        \ to authenticate API requests.\nThe HTTP Signatures sent with each request\
        \ are similar to the signatures used by the Amazon Web Services REST API.\n\
        To help with the request-signing process, we have provided an [example bash\
        \ script](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/shell/SigningExample.sh).\
        \ This example API request simply requests the entire system record. You must\
        \ be root, or have permissions to access the contents of the `/opt/jc` directory\
        \ to generate a signature.\n\n\nHere is a breakdown of the example script,\
        \ with explanations.\n\nThe first thing the script does is extract the systemKey\
        \ from the JSON formatted `/opt/jc/jcagent.conf` file.\n\n```\n#!/bin/bash\n\
        \nconf=\"`cat /opt/jc/jcagent.conf`\"\nregex=\"systemKey\\\":\\\"(\\w+)\\\"\
        \"\n\nif [[ $conf =~ $regex ]] ; then\n  systemKey=\"${BASH_REMATCH[1]}\"\n\
        fi\n```\n\nThen the script retrieves the current date in the correct format.\n\
        \n```\nnow=`date -u \"+%a, %d %h %Y %H:%M:%S GMT\"`;\n```\n\nNext we build\
        \ a signing string to demonstrate the expected signature format. The signed\
        \ string must consist of the [request-line](https://tools.ietf.org/html/rfc2616#page-35)\
        \ and the date header, separated by a newline character.\n\n```\nsignstr=\"\
        GET /api/systems/${systemKey} HTTP/1.1\\ndate: ${now}\"\n```\n\nThe next step\
        \ is to calculate and apply the signature. This is a two-step process:\n\n\
        1. Create a signature from the signing string using the JumpCloud Agent private\
        \ key: ``printf \"$signstr\" | openssl dgst -sha256 -sign /opt/jc/client.key``\n\
        1. Then Base64-encode the signature string and trim off the newline characters:\
        \ ``| openssl enc -e -a | tr -d '\\n'``\n\nThe combined steps above result\
        \ in:\n\n```\nsignature=`printf \"$signstr\" | openssl dgst -sha256 -sign\
        \ /opt/jc/client.key | openssl enc -e -a | tr -d '\\n'` ;\n```\n\nFinally,\
        \ we make sure the API call sending the signature has the same Authorization\
        \ and Date header values, HTTP method, and URL that were used in the signing\
        \ string.\n\n```\ncurl -iq \\\n  -H \"Accept: application/json\" \\\n  -H\
        \ \"Content-Type: application/json\" \\\n  -H \"Date: ${now}\" \\\n  -H \"\
        Authorization: Signature keyId=\\\"system/${systemKey}\\\",headers=\\\"request-line\
        \ date\\\",algorithm=\\\"rsa-sha256\\\",signature=\\\"${signature}\\\"\" \\\
        \n  --url https://console.jumpcloud.com/api/systems/${systemKey}\n```\n\n\
        #### Input Data\n\nAll PUT and POST methods should use the HTTP Content-Type\
        \ header with a value of 'application/json'. PUT methods are used for updating\
        \ a record. POST methods are used to create a record.\n\nThe following example\
        \ demonstrates how to update the `displayName` of the system.\n\n```\nsignstr=\"\
        PUT /api/systems/${systemKey} HTTP/1.1\\ndate: ${now}\"\nsignature=`printf\
        \ \"$signstr\" | openssl dgst -sha256 -sign /opt/jc/client.key | openssl enc\
        \ -e -a | tr -d '\\n'` ;\n\ncurl -iq \\\n  -d \"{\\\"displayName\\\" : \\\"\
        updated-system-name-1\\\"}\" \\\n  -X \"PUT\" \\\n  -H \"Content-Type: application/json\"\
        \ \\\n  -H \"Accept: application/json\" \\\n  -H \"Date: ${now}\" \\\n  -H\
        \ \"Authorization: Signature keyId=\\\"system/${systemKey}\\\",headers=\\\"\
        request-line date\\\",algorithm=\\\"rsa-sha256\\\",signature=\\\"${signature}\\\
        \"\" \\\n  --url https://console.jumpcloud.com/api/systems/${systemKey}\n\
        ```\n\n\n#### Output Data\n\nAll results will be formatted as JSON.\n\nHere\
        \ is an abbreviated example of response output:\n\n```\n{\n  \"__v\": 0,\n\
        \  \"_id\": \"525ee96f52e144993e000015\",\n  \"agentServer\": \"lappy386\"\
        ,\n  \"agentVersion\": \"0.9.42\",\n  \"arch\": \"x86_64\",\n  \"connectionKey\"\
        : \"127.0.0.1_51812\",\n  \"displayName\": \"ubuntu-1204\",\n  \"firstContact\"\
        : \"2013-10-16T19:30:55.611Z\",\n  \"hostname\": \"ubuntu-1204\"\n  ...\n\
        ```\n\n\n### Additional Examples\n\n#### Signing Authentication Example\n\n\
        This example demonstrates how to make an authenticated request to fetch the\
        \ JumpCloud record for this system.\n\n[SigningExample.sh](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/shell/SigningExample.sh)\n\
        \n\n#### Shutdown Hook\n\nThis example demonstrates how to make authenticated\
        \ request on system shutdown.\nUsing an init.d script registered at run level\
        \ 0, you can call the System Context API as the system is shutting down.\n\
        \n[Instance-shutdown-initd](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/instance-shutdown-initd)\
        \ is an example of an init.d script that only runs at system shutdown.\n\n\
        After customizing the [instance-shutdown-initd](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/instance-shutdown-initd)\
        \ script, you should install it on the system(s) running the JumpCloud agent...\n\
        \n1. Copy the modified [instance-shutdown-initd](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/instance-shutdown-initd)\
        \ to `/etc/init.d/instance-shutdown`\n2. On Ubuntu systems, run `update-rc.d\
        \ instance-shutdown defaults`. On RedHat/CentOS systems, run `chkconfig --add\
        \ instance-shutdown`\n\n\n### Third Party\n\n#### Chef Cookbooks\n\n[https://github.com/nshenry03/jumpcloud](https://github.com/nshenry03/jumpcloud)\n\
        \n[https://github.com/cjs226/jumpcloud](https://github.com/cjs226/jumpcloud)"
      public: true
    multi-tenant-organization-api-headers:
      id: "multi-tenant-organization-api-headers"
      name: "Multi Tenant Organization API Headers"
      content: "Multi-Tenant Organization API Headers are available for JumpCloud\
        \ Admins to use when making API requests from Organizations that have multiple\
        \ managed organizations.\n\nThe `x-org-id` is a required header for all multi-tenant\
        \ admins when making API requests to Jumpcloud as this header will define\
        \ what organization you would like to make the request for.\n\nPlease note\
        \ that Single Tenant Admins do not need to provide this header when making\
        \ an API request.\n\n#### Header Value\n\n`x-org-id`\n\n#### API Response\
        \ Codes\n\n- `400` Malformed ID.\n- `400` x-org-id and Organization path ID\
        \ do not match.\n- `401` ID not included for multi-tenant admin\n- `403` ID\
        \ included on unsupported route.\n- `404` Organization ID Not Found.\n\n####\
        \ Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/directories\
        \ \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json'\
        \ \\\n  -H 'x-api-key: {API_KEY}' \\\n  -H 'x-org-id: {ORG_ID}'\n\n```\n\n\
        #### To Obtain an Individual Organization ID via the UI\n\nAs a prerequisite\
        \ your Primary Organization will need to be setup for Multi-Tenancy which\
        \ will give you access to the Multi-Tenant Organization Admin Portal.\n\n\
        1. Log into JumpCloud [Admin Console](https://console.jumpcloud.com). If you\
        \ are a multi-tenant Admin, you will automatically be routed to the Multi-Tenant\
        \ Admin Portal.\n2. From the Multi-Tenant Portal's primary navigation bar,\
        \ select the Organization you'd like to access.\n3. You will automatically\
        \ be routed to that Organization's Admin Console.\n4. Go to Settings in the\
        \ sub-tenant's primary navigation.\n5. You can obtain your Organization ID\
        \ below your Organization's Contact Information on the Settings page.\n\n\
        #### To Obtain All Organization IDs via the API\n\n1. You can make an API\
        \ request to this endpoint using the API key of your Primary Organization.\
        \  `https://console.jumpcloud.com/api/organizations/` This will return all\
        \ your managed organizations.\n\n#### Sample Request\n```\ncurl -X GET \\\n\
        \  https://console.jumpcloud.com/api/organizations/ \\\n  -H 'Accept: application/json'\
        \ \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n\
        \n```"
      public: true
    api-change-log:
      id: "api-change-log"
      name: "API Changelog"
      content: "### 08-01-2018\n\n`minor release`\n- [New Get Organization endpoint](https://docs.jumpcloud.com/1.0/organizations/get-organization-details)\n\
        - [Multi-Tenant x-org-id](https://docs.jumpcloud.com/2.0/authentication-and-authorization/multi-tenant-organization-api-headers)\
        \ documentation and functionality.\n- Corrections to Command Endpoint Documentation.\n\
        - Remove ssh_keys from systemuserpost model.\n\n### 09-12-2018\n\n`minor release`\n\
        \n- X-Org-Id Request Header\n- SSH Key Models for GET / POST\n- system user\
        \ models properly reference the new ssh key models.\n- Correction to additional\
        \ ID field on Systems\n- New System User Attribute Fields and Model Updates\
        \ for System User PUT / POST / GET\n- Addition of SSH Key endpoints GET, DEL,\
        \ POST\n- New Search Organizations POST endpoint\n- Misc Text Section updates\n\
        - V1 YAML phone + address object updates"
      public: true
  mock:
    dynamic: false
    enabled: false
x-tests: {}
